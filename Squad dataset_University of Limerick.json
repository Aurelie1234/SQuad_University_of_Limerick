[{"id":"1",
  "title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN",
   "context":"Module Code - Title: CE2002 - FOUNDATIONS OF CONVERSATIONAL AI DESIGN Prerequisite Modules:\nRationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with a use case based approach to the Design of modern Conversational AI systems.\n",
   "question":"What is the module foundations of conversational AI design about?",
   "answers":"{ \"text\": [ \"software and processes by which speech is transformed into input for computers and smart devices\" ], \"answer_start\": [ 175 ] }"},
	
 {"id":"2","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Module Code - Title: CE2002 - FOUNDATIONS OF CONVERSATIONAL AI DESIGN Prerequisite Modules:\nRationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with a use case based approach to the Design of modern Conversational AI systems.\n","question":"What will I be able to do in the foundations of conversational AI design module?","answers":"{ \"text\": [ \"use case based approach to the Design of modern Conversational AI systems\" ], \"answer_start\": [ 313 ] }"},{"id":"3","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Module Code - Title: CE2002 - FOUNDATIONS OF CONVERSATIONAL AI DESIGN Prerequisite Modules:\nRationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with a use case based approach to the Design of modern Conversational AI systems.\n","question":"What is the code of the foundations of conversational AI design module? ","answers":"{ \"text\": [ \"CE2002\" ], \"answer_start\": [ 21 ] }"},{"id":"4","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Syllabus: Requirements analysis for systems that are based on Human Computer Spoken word interaction.\nConversation flow design. The fundamental components of a conversation tree. Branch and bound techniques.\nUse case based example CAI specification that classifies Agents, Intents, Entities, Contexts, Interactions, reasoning and responses in enterprise level Conversational AI, (CAI) ecosystems. Scripted versus CAI systems for Human Computer spoken word interaction.Students will build a functioning CAI system using an enterprise level design tool. Students will be required to implement a Conceive Design Implement Operate (CDIO) approach to the construction of their CAI system.\n","question":"What use case will I do in the foundations of conversational AI design module?","answers":"{ \"text\": [ \"Use case based example CAI specification\" ], \"answer_start\": [ 208 ] }"},{"id":"5","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Syllabus: Requirements analysis for systems that are based on Human Computer Spoken word interaction.\nConversation flow design. The fundamental components of a conversation tree. Branch and bound techniques.\nUse case based example CAI specification that classifies Agents, Intents, Entities, Contexts, Interactions, reasoning and responses in enterprise level Conversational AI, (CAI) ecosystems. Scripted versus CAI systems for Human Computer spoken word interaction.Students will build a functioning CAI system using an enterprise level design tool. Students will be required to implement a Conceive Design Implement Operate (CDIO) approach to the construction of their CAI system.\n","question":"What will I be able to build in the foundations of conversational AI design module?","answers":"{ \"text\": [ \"Students will build a functioning CAI system using an enterprise level design tool\" ], \"answer_start\": [ 468 ] }"},{"id":"6","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Syllabus: Requirements analysis for systems that are based on Human Computer Spoken word interaction.\nConversation flow design. The fundamental components of a conversation tree. Branch and bound techniques.\nUse case based example CAI specification that classifies Agents, Intents, Entities, Contexts, Interactions, reasoning and responses in enterprise level Conversational AI, (CAI) ecosystems. Scripted versus CAI systems for Human Computer spoken word interaction.Students will build a functioning CAI system using an enterprise level design tool. Students will be required to implement a Conceive Design Implement Operate (CDIO) approach to the construction of their CAI system.\n\n","question":"What will I be required to do in the foundations of conversational AI design module?","answers":"{ \"text\": [ \"implement a Conceive Design Implement Operate\" ], \"answer_start\": [ 581 ] }"},{"id":"7","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to:\nDesign a functional conversation narrative that can be successfully implemented in a Conversational AI (CAI) use case.\nBuild a basic CAI application using an enterprise level design tool.\nDetermine the individual component subsystems of a CAI design. \nAffective (Attitudes and Values)\nOn successful completion of this module, students will be able to:\nExplain the difference between a scripted Chatbot and a conversational artificial intelligence system.\nCritically assess the performance of a functioning CAI system.\nPsychomotor (Physical Skills)\nHow the Module will be Taught and what will be the Learning Experiences of the Students:\nMaterials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.\nResearch Findings Incorporated in to the Syllabus (If Relevant):\nPrime Texts:\nJurafsky, Daniel.  \nand Martin, James H.  (2008) Speech and Language Processing: International Edition, Pearson\nOther Texts:\nKamath, Uday. and Liu, John. (2020) Deep Learning for NLP and Speech Recognition, Springer\nProgrammes\nSemester(s) Module is Offered:\nSpring.","question":"What will I be able to learn in the foundations of conversational AI design module?","answers":"{ \"text\": [ \"Design a functional conversation narrative\" ], \"answer_start\": [ 169 ] }"},{"id":"8","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to:\nDesign a functional conversation narrative that can be successfully implemented in a Conversational AI (CAI) use case.\nBuild a basic CAI application using an enterprise level design tool.\nDetermine the individual component subsystems of a CAI design. \nAffective (Attitudes and Values)\nOn successful completion of this module, students will be able to:\nExplain the difference between a scripted Chatbot and a conversational artificial intelligence system.\nCritically assess the performance of a functioning CAI system.\nPsychomotor (Physical Skills)\nHow the Module will be Taught and what will be the Learning Experiences of the Students:\nMaterials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.\nResearch Findings Incorporated in to the Syllabus (If Relevant):\nPrime Texts:\nJurafsky, Daniel.  \nand Martin, James H.  (2008) Speech and Language Processing: International Edition, Pearson\nOther Texts:\nKamath, Uday. and Liu, John. (2020) Deep Learning for NLP and Speech Recognition, Springer\nProgrammes\nSemester(s) Module is Offered:\nSpring.","question":"How the conversational AI design module will be delivered?","answers":"{ \"text\": [ \"weekly pre-recorded sessions and live class sessions\" ], \"answer_start\": [ 862 ] }"},{"id":"9","title ":"FOUNDATIONS_OF_CONVERSATIONAL_AI_DESIGN","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to:\nDesign a functional conversation narrative that can be successfully implemented in a Conversational AI (CAI) use case.\nBuild a basic CAI application using an enterprise level design tool.\nDetermine the individual component subsystems of a CAI design. \nAffective (Attitudes and Values)\nOn successful completion of this module, students will be able to:\nExplain the difference between a scripted Chatbot and a conversational artificial intelligence system.\nCritically assess the performance of a functioning CAI system.\nPsychomotor (Physical Skills)\nHow the Module will be Taught and what will be the Learning Experiences of the Students:\nMaterials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.\nResearch Findings Incorporated in to the Syllabus (If Relevant):\nPrime Texts:\nJurafsky, Daniel.  \nand Martin, James H.  (2008) Speech and Language Processing: International Edition, Pearson\nOther Texts:\nKamath, Uday. and Liu, John. (2020) Deep Learning for NLP and Speech Recognition, Springer\nProgrammes\nSemester(s) Module is Offered:\nSpring.","question":"In what semester the foundations of conversational AI design module takes place?","answers":"{ \"text\": [ \"Spring\" ], \"answer_start\": [ 1433 ] }"},{"id":"10","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2003 - THEORY AND PRACTICE FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module:\nConversational Artificial Intelligence (CAI) is the software and processes by which speech is transformed into input for computers and smart devices. This module will provide students with practical insights regarding the theoretical concepts that underpin modern Conversational AI systems. Syllabus:\nIntroduction to machine learning for Conversational AI, (CAI). Scripted versus CAI systems for Human Computer spoken word interaction. Neural Networks for CAI. The definition and application of RNN, CNN, DNN, xNN subsystems to CAI.\nSpeech recognition, language modeling and language decoding for CAI. Evaluation of Speech recognition tools. Data collection and labelling for training in CAI. Bag of words testing. An introduction to N-gram based modelling of speech.\nEvaluation of intent in CAI. Development of training sentences. Evaluation of Semantics, context  and embedding in CAI systems.\nDialog management: Introduction to Reasoning and Response generation in computer-based CAI systems.\n","question":"What is the code of the theory and practice for conversational AI module?","answers":"{ \"text\": [ \"CE2003\" ], \"answer_start\": [ 21 ] }"},{"id":"11","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2003 - THEORY AND PRACTICE FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module:\nConversational Artificial Intelligence (CAI) is the software and processes by which speech is transformed into input for computers and smart devices. This module will provide students with practical insights regarding the theoretical concepts that underpin modern Conversational AI systems. Syllabus:\nIntroduction to machine learning for Conversational AI, (CAI). Scripted versus CAI systems for Human Computer spoken word interaction. Neural Networks for CAI. The definition and application of RNN, CNN, DNN, xNN subsystems to CAI.\nSpeech recognition, language modeling and language decoding for CAI. Evaluation of Speech recognition tools. Data collection and labelling for training in CAI. Bag of words testing. An introduction to N-gram based modelling of speech.\nEvaluation of intent in CAI. Development of training sentences. Evaluation of Semantics, context  and embedding in CAI systems.\nDialog management: Introduction to Reasoning and Response generation in computer-based CAI systems.\n","question":"What neural networks definitions will I learn in the theory and practice for conversational AI about?","answers":"{ \"text\": [ \"RNN, CNN, DNN, xNN subsystems\" ], \"answer_start\": [ 626 ] }"},{"id":"12","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2003 - THEORY AND PRACTICE FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module:\nConversational Artificial Intelligence (CAI) is the software and processes by which speech is transformed into input for computers and smart devices. This module will provide students with practical insights regarding the theoretical concepts that underpin modern Conversational AI systems. Syllabus:\nIntroduction to machine learning for Conversational AI, (CAI). Scripted versus CAI systems for Human Computer spoken word interaction. Neural Networks for CAI. The definition and application of RNN, CNN, DNN, xNN subsystems to CAI.\nSpeech recognition, language modeling and language decoding for CAI. Evaluation of Speech recognition tools. Data collection and labelling for training in CAI. Bag of words testing. An introduction to N-gram based modelling of speech.\nEvaluation of intent in CAI. Development of training sentences. Evaluation of Semantics, context  and embedding in CAI systems.\nDialog management: Introduction to Reasoning and Response generation in computer-based CAI systems.\n","question":"What will I learn in the theory and practice for conversational AI about?","answers":"{ \"text\": [ \"theoretical concepts that underpin modern Conversational AI systems\" ], \"answer_start\": [ 353 ] }"},{"id":"13","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to: Identify the fundamental components of a Conversational AI (CAI)  system. Decode elementary speech patterns for use in CAI systems.Determine intent from uttered speech data in CAI systems. Explain how computer controlled responses are generated in modern CAI systems. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to:Explain the difference between a scripted Chatbot and a conversational artificial intelligence system.Characterise the performance of a CAI system.Demonstrate an understanding of how useful information is extracted from raw speech in CAI systems.Psychomotor (Physical Skills). How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The course material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Jurafsky, Daniel, &  Martin, James H.  (2008) Speech and Language Processing: International Version: an Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition, Pearson Uday, K. and Liu, J. (2020) Deep Learning for NLP and Speech Recognition, Springer Other Texts: Wu Chou,& Biing-Hwang Juang (2005) Pattern Recognition in Speech and Language Processing (Electrical Engineering & Applied Signal Processing Series), CRC Press Rabiner, L. and Schafer, R. (2010) Theory and Applications of Digital Speech Processing, Pearson Programmes Semester(s) Module is Offered: Spring","question":"What will I be able to explain in the theory and practice for conversational AI module?","answers":"{ \"text\": [ \"the difference between a scripted Chatbot and a conversational artificial intelligence system\" ], \"answer_start\": [ 544 ] }"},{"id":"14","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to: Identify the fundamental components of a Conversational AI (CAI)  system. Decode elementary speech patterns for use in CAI systems.Determine intent from uttered speech data in CAI systems. Explain how computer controlled responses are generated in modern CAI systems. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to:Explain the difference between a scripted Chatbot and a conversational artificial intelligence system.Characterise the performance of a CAI system.Demonstrate an understanding of how useful information is extracted from raw speech in CAI systems.Psychomotor (Physical Skills). How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The course material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Jurafsky, Daniel, &  Martin, James H.  (2008) Speech and Language Processing: International Version: an Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition, Pearson Uday, K. and Liu, J. (2020) Deep Learning for NLP and Speech Recognition, Springer Other Texts: Wu Chou,& Biing-Hwang Juang (2005) Pattern Recognition in Speech and Language Processing (Electrical Engineering & Applied Signal Processing Series), CRC Press Rabiner, L. and Schafer, R. (2010) Theory and Applications of Digital Speech Processing, Pearson Programmes Semester(s) Module is Offered: Spring","question":"What does the course material for the theory and practice for conversational AI module include?","answers":"{ \"text\": [ \"video recordings as well as readings, exercises, and assignments\" ], \"answer_start\": [ 1045 ] }"},{"id":"15","title ":"THEORY_AND_PRACTICE_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis)\nOn successful completion of this module, students will be able to: Identify the fundamental components of a Conversational AI (CAI)  system. Decode elementary speech patterns for use in CAI systems.Determine intent from uttered speech data in CAI systems. Explain how computer controlled responses are generated in modern CAI systems. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to:Explain the difference between a scripted Chatbot and a conversational artificial intelligence system.Characterise the performance of a CAI system.Demonstrate an understanding of how useful information is extracted from raw speech in CAI systems.Psychomotor (Physical Skills). How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions. The course material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants' practical skills.Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Jurafsky, Daniel, &  Martin, James H.  (2008) Speech and Language Processing: International Version: an Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition, Pearson Uday, K. and Liu, J. (2020) Deep Learning for NLP and Speech Recognition, Springer Other Texts: Wu Chou,& Biing-Hwang Juang (2005) Pattern Recognition in Speech and Language Processing (Electrical Engineering & Applied Signal Processing Series), CRC Press Rabiner, L. and Schafer, R. (2010) Theory and Applications of Digital Speech Processing, Pearson Programmes Semester(s) Module is Offered: Spring","question":"In what semester the theory and practice for conversational AI module takes place?","answers":"{ \"text\": [ \"Spring\" ], \"answer_start\": [ 1603 ] }"},{"id":"16","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2012 - PROGRAMMING FOUNDATIONS FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with an overview of the programming foundations that are used to engineer modern Conversational AI (CAI) systems.Syllabus:An introduction to scripting Languages and Environments for Scientific Computing: An introduction to the syntax of one modern scripting languages (e.g. Python, Julia or the latest equivalent) and environments. An introduction to Numerical issues in CAI systems. The bag of words test and the generation of analysis vectors.  Numerics support in typical scientific scripting (e.g., Numpy/Scipy). Matrices and linear algebra \nGraphics and Scientific Visualization of words and sentences in CAI systems: Using scripting languages to build scientific visualizations (scalar, vector fields). Random Numbers and Probability: Random number generation: Classification in CAI systems. Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent.  Modern optimization for neural networks: Nesterov momentum, the ADAM optimizer.","question":"What is the code of the programming foundations for conversational AI module?","answers":"{ \"text\": [ \"CE2012\" ], \"answer_start\": [ 21 ] }"},{"id":"17","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2012 - PROGRAMMING FOUNDATIONS FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with an overview of the programming foundations that are used to engineer modern Conversational AI (CAI) systems.Syllabus:An introduction to scripting Languages and Environments for Scientific Computing: An introduction to the syntax of one modern scripting languages (e.g. Python, Julia or the latest equivalent) and environments. An introduction to Numerical issues in CAI systems. The bag of words test and the generation of analysis vectors.  Numerics support in typical scientific scripting (e.g., Numpy/Scipy). Matrices and linear algebra \nGraphics and Scientific Visualization of words and sentences in CAI systems: Using scripting languages to build scientific visualizations (scalar, vector fields). Random Numbers and Probability: Random number generation: Classification in CAI systems. Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent.  Modern optimization for neural networks: Nesterov momentum, the ADAM optimizer.","question":"What programming languages will I learn in the programming foundations for conversational AI module?","answers":"{ \"text\": [ \"Python, Julia or the latest equivalent\" ], \"answer_start\": [ 586 ] }"},{"id":"18","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Module Code - Title: CE2012 - PROGRAMMING FOUNDATIONS FOR CONVERSATIONAL AI\nPrerequisite Modules: Rationale and Purpose of the Module: Conversational Artificial Intelligence is the software and processes by which speech is transformed into input for computers and smart devices.This module will provide students with an overview of the programming foundations that are used to engineer modern Conversational AI (CAI) systems.Syllabus:An introduction to scripting Languages and Environments for Scientific Computing: An introduction to the syntax of one modern scripting languages (e.g. Python, Julia or the latest equivalent) and environments. An introduction to Numerical issues in CAI systems. The bag of words test and the generation of analysis vectors.  Numerics support in typical scientific scripting (e.g., Numpy/Scipy). Matrices and linear algebra \nGraphics and Scientific Visualization of words and sentences in CAI systems: Using scripting languages to build scientific visualizations (scalar, vector fields). Random Numbers and Probability: Random number generation: Classification in CAI systems. Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent.  Modern optimization for neural networks: Nesterov momentum, the ADAM optimizer.","question":"What optimization methods will I learn in the programming foundations for conversational AI module?","answers":"{ \"text\": [ \"Nesterov momentum, the ADAM optimizer\" ], \"answer_start\": [ 1249 ] }"},{"id":"19","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Given a target programming language, demonstrate proficiencies in the syntax necessary to implement standard programming constructs in CAI systems. Given a basic bag of words dataset, construct simple programmes to perform simple analysis operations. Given a CAI problem, identify and evaluate the outputs through appropriate visualisation. Given a CAI problem, discriminate and select basic approaches to scientific computing. Given an appropriate bag of words data set, the student will write a program to process the data e.g. find the principal components.Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given datasets, demonstrate knowledge of how to question whether the data is representative and how to attempt to address any biases. Given a bag of words to investigate, demonstrate knowledge of how to identify and discuss any potential ethical considerations that might obtain. Through the use of appropriate outputs including visualisation, demonstrate ability to identify a basic intent from a bag of words dataset. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions.  The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants practical skills. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts: Langtangen  (2016) A Primer on Scientific Programming with Python , Springer Other Texts: Beazley  (2016) Machine Learning , Cambridge Goodfellow & Bengio  (2014) Deep Learning , MIT Press Lane Hobson (Author), Howard Cole (Author), Hapke Hannes (Author) (2019) Natural Language Processing in Action: Understanding, analyzing, and generating text with Python , Manning Programmes Semester(s) Module is Offered: Spring","question":"What will I do in the programming foundations for conversational AI module?","answers":"{ \"text\": [ \"Spring\" ], \"answer_start\": [ 1855 ] }"},{"id":"20","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Given a target programming language, demonstrate proficiencies in the syntax necessary to implement standard programming constructs in CAI systems. Given a basic bag of words dataset, construct simple programmes to perform simple analysis operations. Given a CAI problem, identify and evaluate the outputs through appropriate visualisation. Given a CAI problem, discriminate and select basic approaches to scientific computing. Given an appropriate bag of words data set, the student will write a program to process the data e.g. find the principal components.Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given datasets, demonstrate knowledge of how to question whether the data is representative and how to attempt to address any biases. Given a bag of words to investigate, demonstrate knowledge of how to identify and discuss any potential ethical considerations that might obtain. Through the use of appropriate outputs including visualisation, demonstrate ability to identify a basic intent from a bag of words dataset. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions.  The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants practical skills. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts: Langtangen  (2016) A Primer on Scientific Programming with Python , Springer Other Texts: Beazley  (2016) Machine Learning , Cambridge Goodfellow & Bengio  (2014) Deep Learning , MIT Press Lane Hobson (Author), Howard Cole (Author), Hapke Hannes (Author) (2019) Natural Language Processing in Action: Understanding, analyzing, and generating text with Python , Manning Programmes Semester(s) Module is Offered: Spring","question":"Is the programming foundations for conversational AI module practical?","answers":"{ \"text\": [ \"there will be a strong emphasis on developing participants practical skills\" ], \"answer_start\": [ 1633 ] }"},{"id":"21","title ":"PROGRAMMING_FOUNDATIONS_FOR_CONVERSATIONAL_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Given a target programming language, demonstrate proficiencies in the syntax necessary to implement standard programming constructs in CAI systems. Given a basic bag of words dataset, construct simple programmes to perform simple analysis operations. Given a CAI problem, identify and evaluate the outputs through appropriate visualisation. Given a CAI problem, discriminate and select basic approaches to scientific computing. Given an appropriate bag of words data set, the student will write a program to process the data e.g. find the principal components.Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given datasets, demonstrate knowledge of how to question whether the data is representative and how to attempt to address any biases. Given a bag of words to investigate, demonstrate knowledge of how to identify and discuss any potential ethical considerations that might obtain. Through the use of appropriate outputs including visualisation, demonstrate ability to identify a basic intent from a bag of words dataset. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Materials will be delivered in a blended manner through weekly pre-recorded sessions and live class sessions.  The module material will include video recordings as well as readings, exercises, and assignments. The focus is on the reduction of theory to practice so there will be a strong emphasis on developing participants practical skills. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts: Langtangen  (2016) A Primer on Scientific Programming with Python , Springer Other Texts: Beazley  (2016) Machine Learning , Cambridge Goodfellow & Bengio  (2014) Deep Learning , MIT Press Lane Hobson (Author), Howard Cole (Author), Hapke Hannes (Author) (2019) Natural Language Processing in Action: Understanding, analyzing, and generating text with Python , Manning Programmes Semester(s) Module is Offered: Spring","question":"What textbook I need to read for the programming foundations for conversational AI module?","answers":"{ \"text\": [ \"A Primer on Scientific Programming with Python\" ], \"answer_start\": [ 1806 ] }"},{"id":"22","title ":"INDUSTRY_PROJECT","context":"Module Code - Title: CE2013 - INDUSTRY PROJECT Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner. Syllabus: [Project Management] Students undertaking of this module must implement a project plan outlining various phases of the project. Estimation of goals and task scheduling must analysed, identified and prioritised. [Independent Research] Students must demonstrate an ability to research and investigate aspects of the project independently. A proven aptitude in coordination of, and active involvement in, information gathering, analysis and formal presentation of findings must be exhibited\n[Knowledge Implementation] Implementation of the project must incorporate all modules associated within the project stream. In this manner students are guaranteed to be equipped with the essential tools to acquire further knowledge and insight. [Documentation Proficiency] As part of the module criteria a report must be completed to support the project. This should include the initial scope, methodologies applied and tools and techniques employed, in addition to the motivations for the project.","question":"What is the code of the industry project module?","answers":"{ \"text\": [ \"CE2013\" ], \"answer_start\": [ 21 ] }"},{"id":"23","title ":"INDUSTRY_PROJECT","context":"Module Code - Title: CE2013 - INDUSTRY PROJECT Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner. Syllabus: [Project Management] Students undertaking of this module must implement a project plan outlining various phases of the project. Estimation of goals and task scheduling must analysed, identified and prioritised. [Independent Research] Students must demonstrate an ability to research and investigate aspects of the project independently. A proven aptitude in coordination of, and active involvement in, information gathering, analysis and formal presentation of findings must be exhibited\n[Knowledge Implementation] Implementation of the project must incorporate all modules associated within the project stream. In this manner students are guaranteed to be equipped with the essential tools to acquire further knowledge and insight. [Documentation Proficiency] As part of the module criteria a report must be completed to support the project. This should include the initial scope, methodologies applied and tools and techniques employed, in addition to the motivations for the project.","question":"How the research is taught in the industry project module?","answers":"{ \"text\": [ \"Students must demonstrate an ability to research and investigate aspects of the project independently\" ], \"answer_start\": [ 646 ] }"},{"id":"24","title ":"INDUSTRY_PROJECT","context":"Module Code - Title: CE2013 - INDUSTRY PROJECT Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner. Syllabus: [Project Management] Students undertaking of this module must implement a project plan outlining various phases of the project. Estimation of goals and task scheduling must analysed, identified and prioritised. [Independent Research] Students must demonstrate an ability to research and investigate aspects of the project independently. A proven aptitude in coordination of, and active involvement in, information gathering, analysis and formal presentation of findings must be exhibited\n[Knowledge Implementation] Implementation of the project must incorporate all modules associated within the project stream. In this manner students are guaranteed to be equipped with the essential tools to acquire further knowledge and insight. [Documentation Proficiency] As part of the module criteria a report must be completed to support the project. This should include the initial scope, methodologies applied and tools and techniques employed, in addition to the motivations for the project.","question":"What is the purpose of the industry project module?","answers":"{ \"text\": [ \"To enable the student to combine previously learned course material with their individual talents\" ], \"answer_start\": [ 106 ] }"},{"id":"25","title ":"INDUSTRY_PROJECT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages.Demonstrate the ability to develop solutions to moderately complex problems. Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. Report the work done on the project, including references to previous work, and recommendations for future work.Affective (Attitudes and Values) On successful completion of this module, students will be able to: foster the ability to recognise the potential for investigation in existing work practices provide students with a awareness of the potential research has to generate ideas and solve problems in an industrial setting Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be thought in a flexible mode; content delivery will be through online and offline video classes and short learning materials.Each student is required to obtain a suitable project based on an industrial need. Under the supervision of a member of staff, the student will progress along a logical path to resolve the specified problem. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wisker, Gina (2009) The undergraduate research handbook, Palgrave MacMillan Thomas, Gary (2017) How to do your research project : a guide for students, Sage Other Texts: Breach, Mark. () Dissertation Writing for Engineers and Scientists, Prentice Hall Robson, Colin () How to do a Research Project. A Guide for Undergraduate Students, Blackwell Publishing Programmes Semester(s) Module is Offered: Autumn Spring Summer Module Leader: Martin.J.Hayes@ul.ie","question":"What will I learn in the industry project module?","answers":"{ \"text\": [ \"Demonstrate the ability to develop solutions to moderately complex problems\" ], \"answer_start\": [ 310 ] }"},{"id":"26","title ":"INDUSTRY_PROJECT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages.Demonstrate the ability to develop solutions to moderately complex problems.Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. Report the work done on the project, including references to previous work, and recommendations for future work.Affective (Attitudes and Values) On successful completion of this module, students will be able to: foster the ability to recognise the potential for investigation in existing work practices provide students with a awareness of the potential research has to generate ideas and solve problems in an industrial setting Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be thought in a flexible mode; content delivery will be through online and offline video classes and short learning materials.Each student is required to obtain a suitable project based on an industrial need. Under the supervision of a member of staff, the student will progress along a logical path to resolve the specified problem. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wisker, Gina (2009) The undergraduate research handbook, Palgrave MacMillan Thomas, Gary (2017) How to do your research project : a guide for students, Sage Other Texts: Breach, Mark. () Dissertation Writing for Engineers and Scientists, Prentice Hall Robson, Colin () How to do a Research Project. A Guide for Undergraduate Students, Blackwell Publishing Programmes Semester(s) Module is Offered: Autumn Spring Summer Module Leader: Martin.J.Hayes@ul.ie","question":"When does the industry project module run?","answers":"{ \"text\": [ \"Autumn Spring Summer\" ], \"answer_start\": [ 1889 ] }"},{"id":"27","title ":"INDUSTRY_PROJECT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages.Demonstrate the ability to develop solutions to moderately complex problems.Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. Report the work done on the project, including references to previous work, and recommendations for future work.Affective (Attitudes and Values) On successful completion of this module, students will be able to: foster the ability to recognise the potential for investigation in existing work practices provide students with a awareness of the potential research has to generate ideas and solve problems in an industrial setting Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be thought in a flexible mode; content delivery will be through online and offline video classes and short learning materials.Each student is required to obtain a suitable project based on an industrial need. Under the supervision of a member of staff, the student will progress along a logical path to resolve the specified problem. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wisker, Gina (2009) The undergraduate research handbook, Palgrave MacMillan Thomas, Gary (2017) How to do your research project : a guide for students, Sage Other Texts: Breach, Mark. () Dissertation Writing for Engineers and Scientists, Prentice Hall Robson, Colin () How to do a Research Project. A Guide for Undergraduate Students, Blackwell Publishing Programmes Semester(s) Module is Offered: Autumn Spring Summer Module Leader: Martin.J.Hayes@ul.ie","question":"How the industry project module will be delivered?","answers":"{ \"text\": [ \"online and offline video classes and short learning materials\" ], \"answer_start\": [ 1143 ] }"},{"id":"28","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Module Code - Title: CE4021 - INTRODUCTION TO SCIENTIFIC COMPUTING FOR AI Prerequisite Modules: Rationale and Purpose of the Module:\nTo prepare students to take a range of Artificial Intelligence related modules by introducing the associated scientific computing, programming language and host platforms.  Syllabus: 1. Scripting Languages and Environments for Scientific Computing: Modern scripting languages (e.g. Python, Julia) and environments.\n2. Numeric: Numerics support in typical scientific scripting (e.g., Numpy/Scipy).  Matrices and linear algebra 3. Graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (scalar, vector fields). 4. Acceleration: Accelerating scientific codes. Threading and parallelism. 5. Random Numbers and Probability: Random number generation: linear congruential generators. Distributions: uniform, normal, etc. Bayesian methods: Gaussian naïve Bayes classification. 7. Classifiers and Optimization: Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent. Other cost functions: cross-entropy. Application: training classifiers. Modern optimization for neural networks: Nesterov momentum, ADAM optimizer. 8. Scientific Computing in the Cloud: Docker images. Cloud services. Running scientific code in the cloud.","question":"What is the code for the introduction to scientific computing for ai module?","answers":"{ \"text\": [ \"CE4021\" ], \"answer_start\": [ 21 ] }"},{"id":"29","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Module Code - Title: CE4021 - INTRODUCTION TO SCIENTIFIC COMPUTING FOR AI Prerequisite Modules: Rationale and Purpose of the Module:\nTo prepare students to take a range of Artificial Intelligence related modules by introducing the associated scientific computing, programming language and host platforms.  Syllabus: 1. Scripting Languages and Environments for Scientific Computing: Modern scripting languages (e.g. Python, Julia) and environments.\n2. Numeric: Numerics support in typical scientific scripting (e.g., Numpy/Scipy).  Matrices and linear algebra 3. Graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (scalar, vector fields). 4. Acceleration: Accelerating scientific codes. Threading and parallelism. 5. Random Numbers and Probability: Random number generation: linear congruential generators. Distributions: uniform, normal, etc. Bayesian methods: Gaussian naïve Bayes classification. 7. Classifiers and Optimization: Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent. Other cost functions: cross-entropy. Application: training classifiers. Modern optimization for neural networks: Nesterov momentum, ADAM optimizer. 8. Scientific Computing in the Cloud: Docker images. Cloud services. Running scientific code in the cloud.","question":"Do I need to know any mathematics for the introduction to scientific computing for ai module?","answers":"{ \"text\": [ \"Matrices and linear algebra\" ], \"answer_start\": [ 531 ] }"},{"id":"30","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Module Code - Title: CE4021 - INTRODUCTION TO SCIENTIFIC COMPUTING FOR AI Prerequisite Modules: Rationale and Purpose of the Module:\nTo prepare students to take a range of Artificial Intelligence related modules by introducing the associated scientific computing, programming language and host platforms.  Syllabus: 1. Scripting Languages and Environments for Scientific Computing: Modern scripting languages (e.g. Python, Julia) and environments.\n2. Numeric: Numerics support in typical scientific scripting (e.g., Numpy/Scipy).  Matrices and linear algebra 3. Graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (scalar, vector fields). 4. Acceleration: Accelerating scientific codes. Threading and parallelism. 5. Random Numbers and Probability: Random number generation: linear congruential generators. Distributions: uniform, normal, etc. Bayesian methods: Gaussian naïve Bayes classification. 7. Classifiers and Optimization: Simple classifiers. K-means. Linear classifiers: Perceptron. Least squares and gradient descent. Other cost functions: cross-entropy. Application: training classifiers. Modern optimization for neural networks: Nesterov momentum, ADAM optimizer. 8. Scientific Computing in the Cloud: Docker images. Cloud services. Running scientific code in the cloud.","question":"What programming languages will I learn in the scientific computing for ai module?","answers":"{ \"text\": [ \"Python, Julia\" ], \"answer_start\": [ 415 ] }"},{"id":"31","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a target programming language, the student will become proficient in the syntax necessary to implement standard programming constructs. 2. Given a set of basic scientific problems, the student will construct simple programmes to investigate the problems. 3. Given a scientific problem, the student will identify and evaluate the outputs through appropriate visualisation.\n4. Given a scientific problem, the student will discriminate and select basic approaches to scientific computing, including the use of cloud services.\n5. Given an appropriate data set, the student will write a program to process the data e.g. find the principal components. 6. Given an image, the student will write a program to implement an operation on the image e.g. dithering to reduce its bit depth. 7. Given a classifier, the student will write a program to implement and analyse it e.g. plot its decision boundary; display an animation of its trajectory of weights over the error surface. Affective (Attitudes and Values) 1. Given datasets, the student will question whether the data is representative and attempt to address any biases 2. Given problems to investigate, the student will identify and discuss any potential ethical considerations. 3. On completion of an investigation using appropriate outputs including visualisation, the student will be able to defend the approach adopted. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nLangtangen (2016) A Primer on Scientific Programming with Python, Springer Other Texts: Beazley (2016) Python Essential Reference, 4th ed., O'Reilly Flach (2012) Machine Learning, Cambridge Goodfellow & Bengio (2014) Deep Learning, MIT Press Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Foster & Gannon (2017) Cloud Computing for Science and Engineering, MIT Press Programmes Semester(s) Module is Offered: Autumn Module Leader:\npepijn.vandeven@ul.ie","question":"How the scientific computing for ai module will be taught?","answers":"{ \"text\": [ \"on-line lectures, labs and tutorials\" ], \"answer_start\": [ 1669 ] }"},{"id":"32","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a target programming language, the student will become proficient in the syntax necessary to implement standard programming constructs. 2. Given a set of basic scientific problems, the student will construct simple programmes to investigate the problems. 3. Given a scientific problem, the student will identify and evaluate the outputs through appropriate visualisation.\n4. Given a scientific problem, the student will discriminate and select basic approaches to scientific computing, including the use of cloud services.\n5. Given an appropriate data set, the student will write a program to process the data e.g. find the principal components. 6. Given an image, the student will write a program to implement an operation on the image e.g. dithering to reduce its bit depth. 7. Given a classifier, the student will write a program to implement and analyse it e.g. plot its decision boundary; display an animation of its trajectory of weights over the error surface. Affective (Attitudes and Values) 1. Given datasets, the student will question whether the data is representative and attempt to address any biases 2. Given problems to investigate, the student will identify and discuss any potential ethical considerations. 3. On completion of an investigation using appropriate outputs including visualisation, the student will be able to defend the approach adopted. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nLangtangen (2016) A Primer on Scientific Programming with Python, Springer Other Texts: Beazley (2016) Python Essential Reference, 4th ed., O'Reilly Flach (2012) Machine Learning, Cambridge Goodfellow & Bengio (2014) Deep Learning, MIT Press Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Foster & Gannon (2017) Cloud Computing for Science and Engineering, MIT Press Programmes Semester(s) Module is Offered: Autumn Module Leader:\npepijn.vandeven@ul.ie","question":"What will I learn about datasets in the scientific computing for ai module?","answers":"{ \"text\": [ \"question whether the data is representative and attempt to address any biases\" ], \"answer_start\": [ 1148 ] }"},{"id":"33","title ":"INTRODUCTION_TO_SCIENTIFIC_COMPUTING_FOR_AI","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a target programming language, the student will become proficient in the syntax necessary to implement standard programming constructs. 2. Given a set of basic scientific problems, the student will construct simple programmes to investigate the problems. 3. Given a scientific problem, the student will identify and evaluate the outputs through appropriate visualisation.\r\n4. Given a scientific problem, the student will discriminate and select basic approaches to scientific computing, including the use of cloud services.\r\n5. Given an appropriate data set, the student will write a program to process the data e.g. find the principal components. 6. Given an image, the student will write a program to implement an operation on the image e.g. dithering to reduce its bit depth. 7. Given a classifier, the student will write a program to implement and analyse it e.g. plot its decision boundary; display an animation of its trajectory of weights over the error surface. Affective (Attitudes and Values) 1. Given datasets, the student will question whether the data is representative and attempt to address any biases 2. Given problems to investigate, the student will identify and discuss any potential ethical considerations. 3. On completion of an investigation using appropriate outputs including visualisation, the student will be able to defend the approach adopted. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\r\nLangtangen (2016) A Primer on Scientific Programming with Python, Springer Other Texts: Beazley (2016) Python Essential Reference, 4th ed., O'Reilly Flach (2012) Machine Learning, Cambridge Goodfellow & Bengio (2014) Deep Learning, MIT Press Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Foster & Gannon (2017) Cloud Computing for Science and Engineering, MIT Press Programmes Semester(s) Module is Offered: Autumn Module Leader:\r\npepijn.vandeven@ul.ie","question":"What textbook I need for the scientific computing for ai module?","answers":"{ \"text\": [ \"A Primer on Scientific Programming with Python\" ], \"answer_start\": [ 1806 ] }"},{"id":"34","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Module Code - Title: CE4031 - INTRODUCTION TO DEEP LEARNING AND FRAMEWORKS Prerequisite Modules:\nRationale and Purpose of the Module: To give students an insight into Deep Learning and associated Frameworks and prepare them to take more advanced Artificial Intelligence modules.  Syllabus: 1. Fundamentals and basic concepts of deep learning and related machine learning  2. Programming basics for deep learning  3. Introduction to deep learning frameworks (e.g. TensorFlow, PyTorch, Caffe2, CNTK etc. ) 4. Deep learning platforms and acceleration 5. Applications of deep learning (e.g. image classification, signal processing, natural language processing etc)","question":"What is the code for the introduction to deep learning and frameworks module?","answers":"{ \"text\": [ \"CE4031\" ], \"answer_start\": [ 21 ] }"},{"id":"35","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Module Code - Title: CE4031 - INTRODUCTION TO DEEP LEARNING AND FRAMEWORKS Prerequisite Modules:\nRationale and Purpose of the Module: To give students an insight into Deep Learning and associated Frameworks and prepare them to take more advanced Artificial Intelligence modules.  Syllabus: 1. Fundamentals and basic concepts of deep learning and related machine learning  2. Programming basics for deep learning  3. Introduction to deep learning frameworks (e.g. TensorFlow, PyTorch, Caffe2, CNTK etc. ) 4. Deep learning platforms and acceleration 5. Applications of deep learning (e.g. image classification, signal processing, natural language processing etc)","question":"What deep learning frameworks will I use in the introduction to deep learning and frameworks module?","answers":"{ \"text\": [ \"TensorFlow, PyTorch, Caffe2, CNTK\" ], \"answer_start\": [ 463 ] }"},{"id":"36","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Module Code - Title: CE4031 - INTRODUCTION TO DEEP LEARNING AND FRAMEWORKS Prerequisite Modules:\nRationale and Purpose of the Module: To give students an insight into Deep Learning and associated Frameworks and prepare them to take more advanced Artificial Intelligence modules.  Syllabus: 1. Fundamentals and basic concepts of deep learning and related machine learning  2. Programming basics for deep learning  3. Introduction to deep learning frameworks (e.g. TensorFlow, PyTorch, Caffe2, CNTK etc. ) 4. Deep learning platforms and acceleration 5. Applications of deep learning (e.g. image classification, signal processing, natural language processing etc)","question":"What applications of deep learning will I learn about in the introduction to deep learning and frameworks module?","answers":"{ \"text\": [ \"image classification, signal processing, natural language processing\" ], \"answer_start\": [ 587 ] }"},{"id":"37","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given information and instruction, the student will gain insight and understand the key components in machine learning and deep learning systems. 2. Given representative problems, the student will be able to identify use-cases for machine learning and deep learning 3. Given information on prominent deep learning frameworks, the student will understand and compare their core features and usability. 4. Given a relevant cloud hosted platform, the student will develop the ability to use the supported deep learning frameworks. 5. Given problems to investigate, the student will implement, analyse and present outputs from deep learning frameworks. 6. Given large and real-world data sets for deep neural networks, the student will develop the ability to process and analyse the data. 7. Given selected practical problems, the student will have the ability to identify, develop and implement appropriate deep learning solutions. Affective (Attitudes and Values) 1. Given problems and data to investigate, the student will identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 2. Given datasets, the student will question and demonstrate whether the data is representative and identify potential biases. 3. Following exposure to various frameworks and hosted platforms, the student will judge and challenge the limitations of current deep learning techniques. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Goodfellow & Bengio (2016) Deep Learning, MIT Press Other Texts: Chollet (2017) Deep Learning with Python, Manning Publications Kim (2017) MATLAB Deep Learning: With Machine Learning, Neural Networks and Artificial Intelligence, Apress Subramanian (2017) Deep Leaning with PyTorch, Packt Publishing Langtangen (2016) A Primer on Scientific Programming with Python, Springer Beazley (2009) Python Essential Reference, O'Reilly Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Programmes Semester(s) Module is Offered: Autumn Module Leader: pepijn.vandeven@ul.ie","question":"What will I learn in the introduction to deep learning and frameworks module?","answers":"{ \"text\": [ \"judge and challenge the limitations of current deep learning techniques\" ], \"answer_start\": [ 1461 ] }"},{"id":"38","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given information and instruction, the student will gain insight and understand the key components in machine learning and deep learning systems. 2. Given representative problems, the student will be able to identify use-cases for machine learning and deep learning 3. Given information on prominent deep learning frameworks, the student will understand and compare their core features and usability. 4. Given a relevant cloud hosted platform, the student will develop the ability to use the supported deep learning frameworks. 5. Given problems to investigate, the student will implement, analyse and present outputs from deep learning frameworks. 6. Given large and real-world data sets for deep neural networks, the student will develop the ability to process and analyse the data. 7. Given selected practical problems, the student will have the ability to identify, develop and implement appropriate deep learning solutions. Affective (Attitudes and Values) 1. Given problems and data to investigate, the student will identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 2. Given datasets, the student will question and demonstrate whether the data is representative and identify potential biases. 3. Following exposure to various frameworks and hosted platforms, the student will judge and challenge the limitations of current deep learning techniques. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Goodfellow & Bengio (2016) Deep Learning, MIT Press Other Texts: Chollet (2017) Deep Learning with Python, Manning Publications Kim (2017) MATLAB Deep Learning: With Machine Learning, Neural Networks and Artificial Intelligence, Apress Subramanian (2017) Deep Leaning with PyTorch, Packt Publishing Langtangen (2016) A Primer on Scientific Programming with Python, Springer Beazley (2009) Python Essential Reference, O'Reilly Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Programmes Semester(s) Module is Offered: Autumn Module Leader: pepijn.vandeven@ul.ie","question":"How is the introduction to deep learning and frameworks module taught?","answers":"{ \"text\": [ \"on-line lectures, labs and tutorials\" ], \"answer_start\": [ 1722 ] }"},{"id":"39","title ":"INTRODUCTION_TO_DEEP_LEARNING_AND_FRAMEWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given information and instruction, the student will gain insight and understand the key components in machine learning and deep learning systems. 2. Given representative problems, the student will be able to identify use-cases for machine learning and deep learning 3. Given information on prominent deep learning frameworks, the student will understand and compare their core features and usability. 4. Given a relevant cloud hosted platform, the student will develop the ability to use the supported deep learning frameworks. 5. Given problems to investigate, the student will implement, analyse and present outputs from deep learning frameworks. 6. Given large and real-world data sets for deep neural networks, the student will develop the ability to process and analyse the data. 7. Given selected practical problems, the student will have the ability to identify, develop and implement appropriate deep learning solutions. Affective (Attitudes and Values) 1. Given problems and data to investigate, the student will identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 2. Given datasets, the student will question and demonstrate whether the data is representative and identify potential biases. 3. Following exposure to various frameworks and hosted platforms, the student will judge and challenge the limitations of current deep learning techniques. Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Goodfellow & Bengio (2016) Deep Learning, MIT Press Other Texts: Chollet (2017) Deep Learning with Python, Manning Publications Kim (2017) MATLAB Deep Learning: With Machine Learning, Neural Networks and Artificial Intelligence, Apress Subramanian (2017) Deep Leaning with PyTorch, Packt Publishing Langtangen (2016) A Primer on Scientific Programming with Python, Springer Beazley (2009) Python Essential Reference, O'Reilly Marsland (2014) Machine Learning: An Algorithmic Perspective, CRC Press Programmes Semester(s) Module is Offered: Autumn Module Leader: pepijn.vandeven@ul.ie","question":"In what semester the introduction to deep learning and frameworks module takes place?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 2378 ] }"},{"id":"40","title ":"ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE4041 - ARTIFICIAL INTELLIGENCE Prerequisite Modules: CE4703 Rationale and Purpose of the Module: To provide the student with a solid theoretical and practical understanding, knowledge and skill in the application of artificial intelligence and expert systems. This new module is created to provide an appropriate BE/ME masters level code to the level 9 module in AI in ECE department. This module will be offered to the Master of Engineering in Electronic and Computer Engineering programme using module ID 3301 Artificial Intelligence  Syllabus: Section (i) - Introduction to Prolog and \"Logic Programming\" Rule-based systems and logic programming. The resolution principle, unification & backtracking. Recursion & iteration. Prolog representation of algorithms. Extra-logical features of Prolog. Section (ii) - State-Space Search Use of state-space search in A.I. programming. Representation of problems in state-space form. Prolog representation of state-spaces. Heuristics. Search strategies: depth-first, breadth-first, hillclimbing, best-first, branch & bound, Algorithm A, Algorithm A*. Admissibility, Monotonicity, Informedness. Section (iii) - Expert Systems The structure of an expert system. Knowledge Representation. The inference engine. Inference strategies. Reasoning under uncertainty. Section (iv) - Neural Networks\nNeural models: McCulloch & Pitts, Rosenblatt. Hebbian learning. The Adaline. Multi-layer Perceptrons & Backpropagation. Associative networks. Competitive networks.","question":"What is the code for the artificial intelligence module?","answers":"{ \"text\": [ \"CE4041\" ], \"answer_start\": [ 21 ] }"},{"id":"41","title ":"ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE4041 - ARTIFICIAL INTELLIGENCE Prerequisite Modules: CE4703 Rationale and Purpose of the Module: To provide the student with a solid theoretical and practical understanding, knowledge and skill in the application of artificial intelligence and expert systems. This new module is created to provide an appropriate BE/ME masters level code to the level 9 module in AI in ECE department. This module will be offered to the Master of Engineering in Electronic and Computer Engineering programme using module ID 3301 Artificial Intelligence  Syllabus: Section (i) - Introduction to Prolog and \"Logic Programming\" Rule-based systems and logic programming. The resolution principle, unification & backtracking. Recursion & iteration. Prolog representation of algorithms. Extra-logical features of Prolog. Section (ii) - State-Space Search Use of state-space search in A.I. programming. Representation of problems in state-space form. Prolog representation of state-spaces. Heuristics. Search strategies: depth-first, breadth-first, hillclimbing, best-first, branch & bound, Algorithm A, Algorithm A*. Admissibility, Monotonicity, Informedness. Section (iii) - Expert Systems The structure of an expert system. Knowledge Representation. The inference engine. Inference strategies. Reasoning under uncertainty. Section (iv) - Neural Networks\nNeural models: McCulloch & Pitts, Rosenblatt. Hebbian learning. The Adaline. Multi-layer Perceptrons & Backpropagation. Associative networks. Competitive networks.","question":"Is there a prerequisite module for the artificial intelligence module?","answers":"{ \"text\": [ \"CE4703\" ], \"answer_start\": [ 76 ] }"},{"id":"42","title ":"ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE4041 - ARTIFICIAL INTELLIGENCE Prerequisite Modules: CE4703 Rationale and Purpose of the Module: To provide the student with a solid theoretical and practical understanding, knowledge and skill in the application of artificial intelligence and expert systems. This new module is created to provide an appropriate BE/ME masters level code to the level 9 module in AI in ECE department. This module will be offered to the Master of Engineering in Electronic and Computer Engineering programme using module ID 3301 Artificial Intelligence  Syllabus: Section (i) - Introduction to Prolog and \"Logic Programming\" Rule-based systems and logic programming. The resolution principle, unification & backtracking. Recursion & iteration. Prolog representation of algorithms. Extra-logical features of Prolog. Section (ii) - State-Space Search Use of state-space search in A.I. programming. Representation of problems in state-space form. Prolog representation of state-spaces. Heuristics. Search strategies: depth-first, breadth-first, hillclimbing, best-first, branch & bound, Algorithm A, Algorithm A*. Admissibility, Monotonicity, Informedness. Section (iii) - Expert Systems The structure of an expert system. Knowledge Representation. The inference engine. Inference strategies. Reasoning under uncertainty. Section (iv) - Neural Networks\nNeural models: McCulloch & Pitts, Rosenblatt. Hebbian learning. The Adaline. Multi-layer Perceptrons & Backpropagation. Associative networks. Competitive networks.","question":"What are some of the search algorithms that I will learn about in the artificial intelligence module?","answers":"{ \"text\": [ \"Algorithm A, Algorithm A*.\" ], \"answer_start\": [ 1090 ] }"},{"id":"43","title ":"ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Use the resolution technique to solve problems stated in terms of predicate logic. 2. Formulate a search problem in terms of an appropriate state-space representation. 3. Apply suitable search algorithms and heuristics to problem solving. 4. Apply neural network techniques to the solution of classification problems. 5. Construct problem-solving programs in a suitable A.I. language such as Lisp or Prolog. 6. Evaluate the current state of the art in artificial intelligence research and applications. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs/Tutorials, Self-directed research and project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nLuger, G.F.  (2005) Artificial Intelligence, 5th ed., Pearson/Addison-Wesley Russell, S. & Norvig, P. (2003) Artificial Intelligence: A Modern Approach, 2nd ed., Pearson/Addison-Wesley Other Texts: Bishop, C.M. (2006) Pattern Recognition & machine Learning, Springer Levesque, H.J.  (2004) Brachman, R.J. & Knowledge Representation & Reasoning., Elsevier Alpaydin, E. (2003) Introduction to Machine Learning, MIT Press McKay, D. (2003) 2003 Information Theory, Inference & Learning Algorithms., Cambridge\nDechter, R. (2003) Constraint Processing., Elsevier Negnevitsky, M.  (2002) Artificial Intelligence: A Guide to Intelligent Systems, Pearson Bratko, I.  (2000) Prolog Programming for Artificial Intelligence, 3rd ed. , Addison-Wesley Nilsson, N.J. (1998) Artificial Intelligence: A New Synthesis, Morgan Kaufmann Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Colin.Flanagan@ul.ie","question":"What programming languages will I learn about in the artificial intelligence module?","answers":"{ \"text\": [ \"Lisp or Prolog\" ], \"answer_start\": [ 497 ] }"},{"id":"44","title ":"ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Use the resolution technique to solve problems stated in terms of predicate logic. 2. Formulate a search problem in terms of an appropriate state-space representation. 3. Apply suitable search algorithms and heuristics to problem solving. 4. Apply neural network techniques to the solution of classification problems. 5. Construct problem-solving programs in a suitable A.I. language such as Lisp or Prolog. 6. Evaluate the current state of the art in artificial intelligence research and applications. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs/Tutorials, Self-directed research and project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nLuger, G.F.  (2005) Artificial Intelligence, 5th ed., Pearson/Addison-Wesley Russell, S. & Norvig, P. (2003) Artificial Intelligence: A Modern Approach, 2nd ed., Pearson/Addison-Wesley Other Texts: Bishop, C.M. (2006) Pattern Recognition & machine Learning, Springer Levesque, H.J.  (2004) Brachman, R.J. & Knowledge Representation & Reasoning., Elsevier Alpaydin, E. (2003) Introduction to Machine Learning, MIT Press McKay, D. (2003) 2003 Information Theory, Inference & Learning Algorithms., Cambridge\nDechter, R. (2003) Constraint Processing., Elsevier Negnevitsky, M.  (2002) Artificial Intelligence: A Guide to Intelligent Systems, Pearson Bratko, I.  (2000) Prolog Programming for Artificial Intelligence, 3rd ed. , Addison-Wesley Nilsson, N.J. (1998) Artificial Intelligence: A New Synthesis, Morgan Kaufmann Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Colin.Flanagan@ul.ie","question":"What are the contact details of the lecturer for the artificial intelligence module?","answers":"{ \"text\": [ \"Colin.Flanagan@ul.ie\" ], \"answer_start\": [ 1833 ] }"},{"id":"45","title ":"ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Use the resolution technique to solve problems stated in terms of predicate logic. 2. Formulate a search problem in terms of an appropriate state-space representation. 3. Apply suitable search algorithms and heuristics to problem solving. 4. Apply neural network techniques to the solution of classification problems. 5. Construct problem-solving programs in a suitable A.I. language such as Lisp or Prolog. 6. Evaluate the current state of the art in artificial intelligence research and applications. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs/Tutorials, Self-directed research and project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nLuger, G.F.  (2005) Artificial Intelligence, 5th ed., Pearson/Addison-Wesley Russell, S. & Norvig, P. (2003) Artificial Intelligence: A Modern Approach, 2nd ed., Pearson/Addison-Wesley Other Texts: Bishop, C.M. (2006) Pattern Recognition & machine Learning, Springer Levesque, H.J.  (2004) Brachman, R.J. & Knowledge Representation & Reasoning., Elsevier Alpaydin, E. (2003) Introduction to Machine Learning, MIT Press McKay, D. (2003) 2003 Information Theory, Inference & Learning Algorithms., Cambridge\nDechter, R. (2003) Constraint Processing., Elsevier Negnevitsky, M.  (2002) Artificial Intelligence: A Guide to Intelligent Systems, Pearson Bratko, I.  (2000) Prolog Programming for Artificial Intelligence, 3rd ed. , Addison-Wesley Nilsson, N.J. (1998) Artificial Intelligence: A New Synthesis, Morgan Kaufmann Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Colin.Flanagan@ul.ie","question":"Who is the lecturer for the artificial intelligence module?","answers":"{ \"text\": [ \"Colin.Flanagan\" ], \"answer_start\": [ 1833 ] }"},{"id":"46","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Module Code - Title: CE4051 - INTRODUCTION TO DATA ENGINEERING AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module:\nTo give students an insight and grounding into data engineering and machine learning and prepare them to take more advanced Artificial Intelligence modules. The module will cover mathematical and coding skills essential to developing machine learning applications in Python and will provide an introduction to more advanced machine learning topics such as modern machine learning platforms, data visualisation and deep learning. Syllabus: Students undertaking this module will undertake learning in: a programming language (e.g. Python) for machine learning; numeric support in typical scientific scripting (e.g., Numpy/Scipy); graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (Matplotlib); fundamentals and basic concepts of machine learning algorithms (Perceptron, Logistic Regression, Support Vector Machines, Multi-Layer Perceptron); programming basics for machine learning (Scikitlearn, Pandas); and, applications of machine learning (e.g. inference, image classification, etc)","question":"What is the code for the introduction to data engineering and machine learning module?","answers":"{ \"text\": [ \"CE4051\" ], \"answer_start\": [ 21 ] }"},{"id":"47","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Module Code - Title: CE4051 - INTRODUCTION TO DATA ENGINEERING AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module: \nTo give students an insight and grounding into data engineering and machine learning and prepare them to take more advanced Artificial Intelligence modules. The module will cover mathematical and coding skills essential to developing machine learning applications in Python and will provide an introduction to more advanced machine learning topics such as modern machine learning platforms, data visualisation and deep learning. Syllabus: Students undertaking this module will undertake learning in: a programming language (e.g. Python) for machine learning; numeric support in typical scientific scripting (e.g., Numpy/Scipy); graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (Matplotlib); fundamentals and basic concepts of machine learning algorithms (Perceptron, Logistic Regression, Support Vector Machines, Multi-Layer Perceptron); programming basics for machine learning (Scikitlearn, Pandas); and, applications of machine learning (e.g. inference, image classification, etc)","question":"What machine learning algorithms will I learn about in the introduction to data engineering and machine learning module?","answers":"{ \"text\": [ \"Perceptron, Logistic Regression, Support Vector Machines\" ], \"answer_start\": [ 950 ] }"},{"id":"48","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Module Code - Title: CE4051 - INTRODUCTION TO DATA ENGINEERING AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module:\nTo give students an insight and grounding into data engineering and machine learning and prepare them to take more advanced Artificial Intelligence modules. The module will cover mathematical and coding skills essential to developing machine learning applications in Python and will provide an introduction to more advanced machine learning topics such as modern machine learning platforms, data visualisation and deep learning. Syllabus: Students undertaking this module will undertake learning in: a programming language (e.g. Python) for machine learning; numeric support in typical scientific scripting (e.g., Numpy/Scipy); graphics and Scientific Visualization: Using scripting languages to build scientific visualizations (Matplotlib); fundamentals and basic concepts of machine learning algorithms (Perceptron, Logistic Regression, Support Vector Machines, Multi-Layer Perceptron); programming basics for machine learning (Scikitlearn, Pandas); and, applications of machine learning (e.g. inference, image classification, etc)","question":"Will there be mathematics in the introduction to data engineering and machine learning module?","answers":"{ \"text\": [ \"The module will cover mathematical and coding skills\" ], \"answer_start\": [ 300 ] }"},{"id":"49","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Understand the key components of machine learning systems. 2. Justify the use of appropriate machine learning approaches for given applications.  3. Apply suitable visualisation, pre-, and post-processing technique. 4. Investigate trends and potential biases in data pertaining to machine learning problems. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Defend the machine learning approach adopted in solving given problems. 2. Understand that there is no single machine learner that is best in all cases (the so-called 'No Free Lunch Theorem'). Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. The content is divided into two-week activities with a submission at the end of every two-week window. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nSebastian Raschka & Vahid Mirhjalili (2017) Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 2nd Edition, Packt Publishing Introduction to Machine Learning with Python: A Guide for Data Scientists (2016) Andreas C. Müller and Sarah Guido, O'Reilly Erwin Kreyszig (2006) ADVANCED ENGINEERING MATHEMATICS, Wiley Other Texts:\nBrian K. Jones and David M. Beazley (2011) Python Cookbook: Recipes for Mastering Python 3, O'Reilly Programmes\nMSAIMLTFA - MS ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Semester(s) Module is Offered: Autumn Module Leader:\nciaran.eising@ul.ie","question":"What will I learn in the data engineering and machine learning module?","answers":"{ \"text\": [ \"Understand the key components of machine learning systems\" ], \"answer_start\": [ 172 ] }"},{"id":"50","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Understand the key components of machine learning systems. 2. Justify the use of appropriate machine learning approaches for given applications.  3. Apply suitable visualisation, pre-, and post-processing technique. 4. Investigate trends and potential biases in data pertaining to machine learning problems. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Defend the machine learning approach adopted in solving given problems. 2. Understand that there is no single machine learner that is best in all cases (the so-called 'No Free Lunch Theorem'). Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. The content is divided into two-week activities with a submission at the end of every two-week window. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nSebastian Raschka & Vahid Mirhjalili (2017) Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 2nd Edition, Packt Publishing Introduction to Machine Learning with Python: A Guide for Data Scientists (2016) Andreas C. Müller and Sarah Guido, O'Reilly Erwin Kreyszig (2006) ADVANCED ENGINEERING MATHEMATICS, Wiley Other Texts:\nBrian K. Jones and David M. Beazley (2011) Python Cookbook: Recipes for Mastering Python 3, O'Reilly Programmes\nMSAIMLTFA - MS ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Semester(s) Module is Offered: Autumn Module Leader:\nciaran.eising@ul.ie","question":"How will the data engineering and machine learning module be delivered?","answers":"{ \"text\": [ \"using a blended learning approach\" ], \"answer_start\": [ 924 ] }"},{"id":"51","title ":"INTRODUCTION_TO_DATA_ENGINEERING_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Understand the key components of machine learning systems. 2. Justify the use of appropriate machine learning approaches for given applications.  3. Apply suitable visualisation, pre-, and post-processing technique. 4. Investigate trends and potential biases in data pertaining to machine learning problems. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Defend the machine learning approach adopted in solving given problems. 2. Understand that there is no single machine learner that is best in all cases (the so-called 'No Free Lunch Theorem'). Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. The content is divided into two-week activities with a submission at the end of every two-week window. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nSebastian Raschka & Vahid Mirhjalili (2017) Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 2nd Edition, Packt Publishing Introduction to Machine Learning with Python: A Guide for Data Scientists (2016) Andreas C. Müller and Sarah Guido, O'Reilly Erwin Kreyszig (2006) ADVANCED ENGINEERING MATHEMATICS, Wiley Other Texts:\nBrian K. Jones and David M. Beazley (2011) Python Cookbook: Recipes for Mastering Python 3, O'Reilly Programmes\nMSAIMLTFA - MS ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Semester(s) Module is Offered: Autumn Module Leader:\nciaran.eising@ul.ie","question":"When is the data engineering and machine learning module offered?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 1776 ] }"},{"id":"52","title ":"OPERATING_SYSTEMS_1","context":"Module Code - Title: CE4204 - OPERATING SYSTEMS 1 Prerequisite Modules: EE4513 CE4702 Rationale and Purpose of the Module:\nTo introduce a complete single-user, disk based operating system. Students will already understand small systems at the logic level and at the programmerÆs model level. The module will include a project incorporating the design/use of an operating system tool. Syllabus:\nOperating system definitions, components, command shells, services overview. Review of 80x86 assembly language programming techniques. Memory map organisation, Extended and Expanded memory. Process execution. Interrupt handlers, BIOS and DOS functions. Device drivers and Resident Utilities: Data structures used in operating system design. Disk Storage Organisation:. Introduction to Microsoft Windows XP.","question":"What is the code for the operating systems 1 module?","answers":"{ \"text\": [ \"CE4204\" ], \"answer_start\": [ 21 ] }"},{"id":"53","title ":"OPERATING_SYSTEMS_1","context":"Module Code - Title: CE4204 - OPERATING SYSTEMS 1 Prerequisite Modules: EE4513 CE4702 Rationale and Purpose of the Module:\nTo introduce a complete single-user, disk based operating system. Students will already understand small systems at the logic level and at the programmerÆs model level. The module will include a project incorporating the design/use of an operating system tool. Syllabus:\nOperating system definitions, components, command shells, services overview. Review of 80x86 assembly language programming techniques. Memory map organisation, Extended and Expanded memory. Process execution. Interrupt handlers, BIOS and DOS functions. Device drivers and Resident Utilities: Data structures used in operating system design. Disk Storage Organisation:. Introduction to Microsoft Windows XP.","question":"Are there any prerequisite modules for the operating systems 1 module?","answers":"{ \"text\": [ \"EE4513 CE4702\" ], \"answer_start\": [ 72 ] }"},{"id":"54","title ":"OPERATING_SYSTEMS_1","context":"Module Code - Title: CE4204 - OPERATING SYSTEMS 1 Prerequisite Modules: EE4513 CE4702 Rationale and Purpose of the Module:\nTo introduce a complete single-user, disk based operating system. Students will already understand small systems at the logic level and at the programmers model level. The module will include a project incorporating the design/use of an operating system tool. Syllabus:\nOperating system definitions, components, command shells, services overview. Review of 80x86 assembly language programming techniques. Memory map organisation, Extended and Expanded memory. Process execution. Interrupt handlers, BIOS and DOS functions. Device drivers and Resident Utilities: Data structures used in operating system design. Disk Storage Organisation:. Introduction to Microsoft Windows XP.","question":"What will I learn in the operating systems 1 module?","answers":"{ \"text\": [ \"small systems at the logic level and at the programmers model level\" ], \"answer_start\": [ 222 ] }"},{"id":"55","title ":"OPERATING_SYSTEMS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Recall and describe the components and services provided by a single task operating system. 2. Describe and illustrate how memory management and memory addressing is performed in a single task operating system. 3. Identify and describe the data structures used in single task operating system design.  4. Recall and explain how files are organised and tracked on a FAT disk partition. 5. Describe and demonstrate with regards to TSR program design the operation and use of hardware interrupts 8 (clock) and 9 (keyboard). 6. Design, implement and demonstrate a working operating system component for a single task operating system such as a device driver, TSR or disk utility.\nAffective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nTanenbaum, A.S. (2001) Modern Operating Systems. 2nd Edition., Prentice Hall Davis and Rajkumar (2001) Operating Systems: A systematic view. 5th Edition., Addison Wesley. Other Texts: Nutt, G., (2004) Operating Systems. 3rd Edition., Addison Wesley.\nDeitel, Deitel and Choffnes (2004) Operating Systems. 3rd Edition., Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Thomas.Newe@ul.ie","question":"What are the prime texts for the operating systems 1 module?","answers":"{ \"text\": [ \"Tanenbaum, A.S. (2001) Modern Operating Systems\" ], \"answer_start\": [ 1044 ] }"},{"id":"56","title ":"OPERATING_SYSTEMS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Recall and describe the components and services provided by a single task operating system. 2. Describe and illustrate how memory management and memory addressing is performed in a single task operating system. 3. Identify and describe the data structures used in single task operating system design.  4. Recall and explain how files are organised and tracked on a FAT disk partition. 5. Describe and demonstrate with regards to TSR program design the operation and use of hardware interrupts 8 (clock) and 9 (keyboard). 6. Design, implement and demonstrate a working operating system component for a single task operating system such as a device driver, TSR or disk utility.\nAffective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nTanenbaum, A.S. (2001) Modern Operating Systems. 2nd Edition., Prentice Hall Davis and Rajkumar (2001) Operating Systems: A systematic view. 5th Edition., Addison Wesley. Other Texts: Nutt, G., (2004) Operating Systems. 3rd Edition., Addison Wesley.\nDeitel, Deitel and Choffnes (2004) Operating Systems. 3rd Edition., Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Thomas.Newe@ul.ie","question":"What will I learn about files in the operating systems 1 module?","answers":"{ \"text\": [ \"Recall and explain how files are organised and tracked on a FAT disk partition\" ], \"answer_start\": [ 410 ] }"},{"id":"57","title ":"OPERATING_SYSTEMS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Recall and describe the components and services provided by a single task operating system. 2. Describe and illustrate how memory management and memory addressing is performed in a single task operating system. 3. Identify and describe the data structures used in single task operating system design.  4. Recall and explain how files are organised and tracked on a FAT disk partition. 5. Describe and demonstrate with regards to TSR program design the operation and use of hardware interrupts 8 (clock) and 9 (keyboard). 6. Design, implement and demonstrate a working operating system component for a single task operating system such as a device driver, TSR or disk utility.\nAffective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Project work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nTanenbaum, A.S. (2001) Modern Operating Systems. 2nd Edition., Prentice Hall Davis and Rajkumar (2001) Operating Systems: A systematic view. 5th Edition., Addison Wesley. Other Texts: Nutt, G., (2004) Operating Systems. 3rd Edition., Addison Wesley.\nDeitel, Deitel and Choffnes (2004) Operating Systems. 3rd Edition., Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Thomas.Newe@ul.ie","question":"How can I contact the lecturer of the operating systems 1 module?","answers":"{ \"text\": [ \"Thomas.Newe@ul.ie\" ], \"answer_start\": [ 1433 ] }"},{"id":"58","title ":"MICROCOMPUTER_SYSTEMS","context":"Module Code - Title: CE4205 - MICROCOMPUTER SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module: This module is designed for 'transferee students'. Students must be capable of writing programs at assembly language level for some modern computer or microprocessor. The main purpose is to: 1. Teach 8086 assembly language programming. 2. To introduce operating system design and implementation concepts based on a  complete single-user, disk based operating system. MS-DOS and Microsoft Windows will be the example operating systems. Syllabus: 8086 assembly language programming.  8086 architecture, standard PC components, instruction set, linking, debugging. Operating system introduction. MS-DOS memory organisation. Interrupt handlers. Process execution, device drivers, disk storage organisation. Introduction to Microsoft Windows OS .","question":"What is the code for the microcomputer systems module?","answers":"{ \"text\": [ \"CE4205\" ], \"answer_start\": [ 21 ] }"},{"id":"59","title ":"MICROCOMPUTER_SYSTEMS","context":"Module Code - Title: CE4205 - MICROCOMPUTER SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module: This module is designed for 'transferee students'. Students must be capable of writing programs at assembly language level for some modern computer or microprocessor. The main purpose is to: 1. Teach 8086 assembly language programming. 2. To introduce operating system design and implementation concepts based on a  complete single-user, disk based operating system. MS-DOS and Microsoft Windows will be the example operating systems. Syllabus: 8086 assembly language programming.  8086 architecture, standard PC components, instruction set, linking, debugging. Operating system introduction. MS-DOS memory organisation. Interrupt handlers. Process execution, device drivers, disk storage organisation. Introduction to Microsoft Windows OS .","question":"What programming language will I learn about in the microcomputer systems module?","answers":"{ \"text\": [ \"8086\" ], \"answer_start\": [ 311 ] }"},{"id":"60","title ":"MICROCOMPUTER_SYSTEMS","context":"Module Code - Title: CE4205 - MICROCOMPUTER SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module: This module is designed for 'transferee students'. Students must be capable of writing programs at assembly language level for some modern computer or microprocessor. The main purpose is to: 1. Teach 8086 assembly language programming. 2. To introduce operating system design and implementation concepts based on a  complete single-user, disk based operating system. MS-DOS and Microsoft Windows will be the example operating systems. Syllabus: 8086 assembly language programming.  8086 architecture, standard PC components, instruction set, linking, debugging. Operating system introduction. MS-DOS memory organisation. Interrupt handlers. Process execution, device drivers, disk storage organisation. Introduction to Microsoft Windows OS .","question":"What will I learn in the microcomputer systems module?","answers":"{ \"text\": [ \"8086 assembly language programming\" ], \"answer_start\": [ 311 ] }"},{"id":"61","title ":"MICROCOMPUTER_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Students will be able to define the 8086 architecture and recognise the importance of each system 2. Students will be able to define the key concepts in an Operating System 3. Students will be able to name and discuss various Operating Systems 4. Students will be able to explain the concepts of Disk Storage Organisation Affective (Attitudes and Values) No learning outcomes of this type in the module. Psychomotor (Physical Skills) 5. Students will be able to demonstrate skills in 8086 assembly language by designing and testing code 6. Students will be able to analyse and assess modern embedded system devices How the Module will be Taught and what will be the Learning Experiences of the Students: The module is based on the standard academic term structure, with 2 lecture hours and 2 laboratory hours per week. The module contains a significant software project which is worth a substantial portion of the module assessment (with the remaining amount assigned to the end of module written examination).Research Findings Incorporated in to the Syllabus (If Relevant):The module lecturer (Dr Derek O'Keeffe) is an active researcher in the area of embedded systems engineering. As such, the examples and projects are based on current industry needs and the types of embedded systems encountered in practice. Prime Texts: Barry B. Brey (2006) INTEL Microprocessors 8086/8088, 80186/80188, 80286, 80386, 80486, Pentium, Prentium ProProcessor, Pentium II, III, 4, Prentice Hall Other Texts: Kip Irvine (2007) Assembly Language for Intel-Based Computers, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Richard.Conway@ul.ie","question":"How the microcomputer systems module is taught?","answers":"{ \"text\": [ \"2 lecture hours and 2 laboratory hours per week\" ], \"answer_start\": [ 875 ] }"},{"id":"62","title ":"MICROCOMPUTER_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Students will be able to define the 8086 architecture and recognise the importance of each system 2. Students will be able to define the key concepts in an Operating System 3. Students will be able to name and discuss various Operating Systems 4. Students will be able to explain the concepts of Disk Storage Organisation Affective (Attitudes and Values) No learning outcomes of this type in the module. Psychomotor (Physical Skills) 5. Students will be able to demonstrate skills in 8086 assembly language by designing and testing code 6. Students will be able to analyse and assess modern embedded system devices How the Module will be Taught and what will be the Learning Experiences of the Students: The module is based on the standard academic term structure, with 2 lecture hours and 2 laboratory hours per week. The module contains a significant software project which is worth a substantial portion of the module assessment (with the remaining amount assigned to the end of module written examination).Research Findings Incorporated in to the Syllabus (If Relevant):The module lecturer (Dr Derek O'Keeffe) is an active researcher in the area of embedded systems engineering. As such, the examples and projects are based on current industry needs and the types of embedded systems encountered in practice. Prime Texts: Barry B. Brey (2006) INTEL Microprocessors 8086/8088, 80186/80188, 80286, 80386, 80486, Pentium, Prentium ProProcessor, Pentium II, III, 4, Prentice Hall Other Texts: Kip Irvine (2007) Assembly Language for Intel-Based Computers, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Richard.Conway@ul.ie","question":"What concepts will I learn in the microcomputer systems module?","answers":"{ \"text\": [ \"Disk Storage Organisation Affective (Attitudes and Values)\" ], \"answer_start\": [ 401 ] }"},{"id":"63","title ":"MICROCOMPUTER_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Students will be able to define the 8086 architecture and recognise the importance of each system 2. Students will be able to define the key concepts in an Operating System 3. Students will be able to name and discuss various Operating Systems 4. Students will be able to explain the concepts of Disk Storage Organisation Affective (Attitudes and Values) No learning outcomes of this type in the module. Psychomotor (Physical Skills) 5. Students will be able to demonstrate skills in 8086 assembly language by designing and testing code 6. Students will be able to analyse and assess modern embedded system devices How the Module will be Taught and what will be the Learning Experiences of the Students: The module is based on the standard academic term structure, with 2 lecture hours and 2 laboratory hours per week. The module contains a significant software project which is worth a substantial portion of the module assessment (with the remaining amount assigned to the end of module written examination).Research Findings Incorporated in to the Syllabus (If Relevant):The module lecturer (Dr Derek O'Keeffe) is an active researcher in the area of embedded systems engineering. As such, the examples and projects are based on current industry needs and the types of embedded systems encountered in practice. Prime Texts: Barry B. Brey (2006) INTEL Microprocessors 8086/8088, 80186/80188, 80286, 80386, 80486, Pentium, Prentium ProProcessor, Pentium II, III, 4, Prentice Hall Other Texts: Kip Irvine (2007) Assembly Language for Intel-Based Computers, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: Richard.Conway@ul.ie","question":"How can I contact the lecturer for the microcomputer systems module?","answers":"{ \"text\": [ \"Richard.Conway@ul.ie\" ], \"answer_start\": [ 1732 ] }"},{"id":"64","title ":"OPERATING_SYSTEMS_2","context":"Module Code - Title: CE4206 - OPERATING SYSTEMS  2 Prerequisite Modules: CE4204 Rationale and Purpose of the Module:\nStudy of multitasking operating systems. Study will be confined to single processor systems. A Unix or WIN-32 operating system will be selected as the prime example operating system. The module lab work will teach the student to develop concurrent program solutions. The module includes: concurrency, states, queues, scheduling. Process inter-communication. Memory management. File systems to support multitasking, File sharing, file protection, performance issues. Conditions for deadlock and solutions. I/O devices and device drivers. File security and protection.Syllabus: 1) Processes: Concurrency, states, queues, scheduling. 2) Process Communication: Mutual exclusion, race conditions, busy-waiting solutions, Test/Set locks, semaphores, monitors, simple message passing, pipes, classical problems. 3) Memory Management: Swapping, virtual memory, paging, segmentation, performance and protection issues. 4) File systems to support multitasking: File sharing, file protection, performance issues. The UNIX i-node system. 5) Deadlock: Conditions for deadlock and solutions. 6)Input/Output: I/O Devices for multitasking environments, need for design of re-entrant drivers. 7) Computer Security and Protection: User authentication; protection matrix; ACL; capabilities. 8) Case Study: The UNIX Operating System: Origins; Standards; Shells; Utilities; Process Management; Memory Management; File Management; Programming in the Unix environment (Or, equivalent study based on a WIN-32 operating system.)","question":"What is the code for the operating systems 2 module?","answers":"{ \"text\": [ \"CE4206\" ], \"answer_start\": [ 21 ] }"},{"id":"65","title ":"OPERATING_SYSTEMS_2","context":"Module Code - Title: CE4206 - OPERATING SYSTEMS  2 Prerequisite Modules: CE4204 Rationale and Purpose of the Module:\nStudy of multitasking operating systems. Study will be confined to single processor systems. A Unix or WIN-32 operating system will be selected as the prime example operating system. The module lab work will teach the student to develop concurrent program solutions. The module includes: concurrency, states, queues, scheduling. Process inter-communication. Memory management. File systems to support multitasking, File sharing, file protection, performance issues. Conditions for deadlock and solutions. I/O devices and device drivers. File security and protection.Syllabus: 1) Processes: Concurrency, states, queues, scheduling. 2) Process Communication: Mutual exclusion, race conditions, busy-waiting solutions, Test/Set locks, semaphores, monitors, simple message passing, pipes, classical problems. 3) Memory Management: Swapping, virtual memory, paging, segmentation, performance and protection issues. 4) File systems to support multitasking: File sharing, file protection, performance issues. The UNIX i-node system. 5) Deadlock: Conditions for deadlock and solutions. 6)Input/Output: I/O Devices for multitasking environments, need for design of re-entrant drivers. 7) Computer Security and Protection: User authentication; protection matrix; ACL; capabilities. 8) Case Study: The UNIX Operating System: Origins; Standards; Shells; Utilities; Process Management; Memory Management; File Management; Programming in the Unix environment (Or, equivalent study based on a WIN-32 operating system.)","question":"Are there any prerequisite modules for the operating systems 2 module?","answers":"{ \"text\": [ \"CE4204\" ], \"answer_start\": [ 73 ] }"},{"id":"66","title ":"OPERATING_SYSTEMS_2","context":"Module Code - Title: CE4206 - OPERATING SYSTEMS  2 Prerequisite Modules: CE4204 Rationale and Purpose of the Module:\nStudy of multitasking operating systems. Study will be confined to single processor systems. A Unix or WIN-32 operating system will be selected as the prime example operating system. The module lab work will teach the student to develop concurrent program solutions. The module includes: concurrency, states, queues, scheduling. Process inter-communication. Memory management. File systems to support multitasking, File sharing, file protection, performance issues. Conditions for deadlock and solutions. I/O devices and device drivers. File security and protection.Syllabus: 1) Processes: Concurrency, states, queues, scheduling. 2) Process Communication: Mutual exclusion, race conditions, busy-waiting solutions, Test/Set locks, semaphores, monitors, simple message passing, pipes, classical problems. 3) Memory Management: Swapping, virtual memory, paging, segmentation, performance and protection issues. 4) File systems to support multitasking: File sharing, file protection, performance issues. The UNIX i-node system. 5) Deadlock: Conditions for deadlock and solutions. 6)Input/Output: I/O Devices for multitasking environments, need for design of re-entrant drivers. 7) Computer Security and Protection: User authentication; protection matrix; ACL; capabilities. 8) Case Study: The UNIX Operating System: Origins; Standards; Shells; Utilities; Process Management; Memory Management; File Management; Programming in the Unix environment (Or, equivalent study based on a WIN-32 operating system.)","question":"What processes will I learn in the operating systems 2 module?","answers":"{ \"text\": [ \"concurrency, states, queues, scheduling\" ], \"answer_start\": [ 405 ] }"},{"id":"67","title ":"OPERATING_SYSTEMS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) - Be able to define the underlying concepts for computer operating system design. - Be able to identify concurrency problems in software examples and describe how they can be fixed using appropriate synchronisation mechanisms. -Compare the  features of two separate operating systems (Unix and WIN-32) by identifying the underlying  architectural and conceptual differences. so that they can compare and relate to the underlying concepts.\n-Describe the key concepts and requirements for a memory management system, including virtual memory, partitioning, paging, protection and performance. -Analyse problems that can be solved with understanding of API/libraries in an operating system context. Given a specific programming problem show, without reference to a resource, how operating system APIÆs and libraries can be used to reduce the amount of code that has to be written to solve the problem. - Develop a simple I/O device driver, know the individual steps necessary to copy the contents of a memory buffer to a physical block on a hard disk, as a formal driver. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Formal lectures, laboratory based assignments and projects, laboratory based tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nA. Silberschatz (2005) Operating System Concepts, Wiley Other Texts: W. Stallings (2008) Operating Systems: Internals and Design Principles, Prentice Hall A. Tanenbaum (2007) Modern Operating Systems, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: eoin.oconnell@ul.ie","question":"What will I learn in the operating systems 2 module?","answers":"{ \"text\": [ \"Internals and Design Principles\" ], \"answer_start\": [ 1597 ] }"},{"id":"68","title ":"OPERATING_SYSTEMS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) - Be able to define the underlying concepts for computer operating system design. - Be able to identify concurrency problems in software examples and describe how they can be fixed using appropriate synchronisation mechanisms. -Compare the  features of two separate operating systems (Unix and WIN-32) by identifying the underlying  architectural and conceptual differences. so that they can compare and relate to the underlying concepts.\n-Describe the key concepts and requirements for a memory management system, including virtual memory, partitioning, paging, protection and performance. -Analyse problems that can be solved with understanding of API/libraries in an operating system context. Given a specific programming problem show, without reference to a resource, how operating system APIÆs and libraries can be used to reduce the amount of code that has to be written to solve the problem. - Develop a simple I/O device driver, know the individual steps necessary to copy the contents of a memory buffer to a physical block on a hard disk, as a formal driver. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Formal lectures, laboratory based assignments and projects, laboratory based tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nA. Silberschatz (2005) Operating System Concepts, Wiley Other Texts: W. Stallings (2008) Operating Systems: Internals and Design Principles, Prentice Hall A. Tanenbaum (2007) Modern Operating Systems, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: eoin.oconnell@ul.ie","question":"How the operating systems 2 module will be taught?","answers":"{ \"text\": [ \"Formal lectures, laboratory based assignments and projects, laboratory based tutorials\" ], \"answer_start\": [ 1323 ] }"},{"id":"69","title ":"OPERATING_SYSTEMS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) - Be able to define the underlying concepts for computer operating system design. - Be able to identify concurrency problems in software examples and describe how they can be fixed using appropriate synchronisation mechanisms. -Compare the  features of two separate operating systems (Unix and WIN-32) by identifying the underlying  architectural and conceptual differences. so that they can compare and relate to the underlying concepts.\n-Describe the key concepts and requirements for a memory management system, including virtual memory, partitioning, paging, protection and performance. -Analyse problems that can be solved with understanding of API/libraries in an operating system context. Given a specific programming problem show, without reference to a resource, how operating system APIÆs and libraries can be used to reduce the amount of code that has to be written to solve the problem. - Develop a simple I/O device driver, know the individual steps necessary to copy the contents of a memory buffer to a physical block on a hard disk, as a formal driver. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Formal lectures, laboratory based assignments and projects, laboratory based tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nA. Silberschatz (2005) Operating System Concepts, Wiley Other Texts: W. Stallings (2008) Operating Systems: Internals and Design Principles, Prentice Hall A. Tanenbaum (2007) Modern Operating Systems, Prentice Hall Programmes Semester(s) Module is Offered:\nModule Leader: eoin.oconnell@ul.ie","question":"How can I contact the lecturer for the operating systems 2 module?","answers":"{ \"text\": [ \"eoin.oconnell@ul.ie\" ], \"answer_start\": [ 1761 ] }"},{"id":"70","title ":"DISTRIBUTED_SYSTEMS","context":"Module Code - Title: CE4208 - DISTRIBUTED SYSTEMS Prerequisite Modules: CE4607 CE4206 Rationale and Purpose of the Module: This module is designed to provide students with a framework for comparing emerging distributed systems, as well as an understanding of the algorithms necessary to support a distributed system. Computing models and data communications will be studied, as well as software development issues relating to the development of distributed applications. Syllabus: To introduces application design principles and techniques using  available web-based technologies. (e.g SOAP, Microsoft.NET, Java Services). Reliability and security issues of distributed applications are addressed. Use of cookies and the covert use of applications to provide a community-wide service. Characterization of Distributed Systems. Tools and technologies used to develop distributed applications. Mechanisms to secure applications from malicious attacks and errant processes. Component based software development (e.g. CORBA, JavaBeans). Service portability via virtual servers. Replication and Fault Tolerance. Study of evolving Web services. The role of the hidden internet for intelligence gathering. Remotely hosted application environments.","question":"What is the code for the distributed systems module?","answers":"{ \"text\": [ \"CE4208\" ], \"answer_start\": [ 21 ] }"},{"id":"71","title ":"DISTRIBUTED_SYSTEMS","context":"Module Code - Title: CE4208 - DISTRIBUTED SYSTEMS Prerequisite Modules: CE4607 CE4206 Rationale and Purpose of the Module: This module is designed to provide students with a framework for comparing emerging distributed systems, as well as an understanding of the algorithms necessary to support a distributed system. Computing models and data communications will be studied, as well as software development issues relating to the development of distributed applications. Syllabus: To introduces application design principles and techniques using  available web-based technologies. (e.g SOAP, Microsoft.NET, Java Services). Reliability and security issues of distributed applications are addressed. Use of cookies and the covert use of applications to provide a community-wide service. Characterization of Distributed Systems. Tools and technologies used to develop distributed applications. Mechanisms to secure applications from malicious attacks and errant processes. Component based software development (e.g. CORBA, JavaBeans). Service portability via virtual servers. Replication and Fault Tolerance. Study of evolving Web services. The role of the hidden internet for intelligence gathering. Remotely hosted application environments.","question":"Are there any prerequisite modules for the distributed systems module?","answers":"{ \"text\": [ \"CE4607 CE4206\" ], \"answer_start\": [ 72 ] }"},{"id":"72","title ":"DISTRIBUTED_SYSTEMS","context":"Module Code - Title: CE4208 - DISTRIBUTED SYSTEMS Prerequisite Modules: CE4607 CE4206 Rationale and Purpose of the Module: This module is designed to provide students with a framework for comparing emerging distributed systems, as well as an understanding of the algorithms necessary to support a distributed system. Computing models and data communications will be studied, as well as software development issues relating to the development of distributed applications. Syllabus: To introduces application design principles and techniques using  available web-based technologies. (e.g SOAP, Microsoft.NET, Java Services). Reliability and security issues of distributed applications are addressed. Use of cookies and the covert use of applications to provide a community-wide service. Characterization of Distributed Systems. Tools and technologies used to develop distributed applications. Mechanisms to secure applications from malicious attacks and errant processes. Component based software development (e.g. CORBA, JavaBeans). Service portability via virtual servers. Replication and Fault Tolerance. Study of evolving Web services. The role of the hidden internet for intelligence gathering. Remotely hosted application environments.","question":"What technologies will I learn about in the distributed systems module?","answers":"{ \"text\": [ \"Computing models and data communications\" ], \"answer_start\": [ 317 ] }"},{"id":"73","title ":"DISTRIBUTED_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Design at a high level a distributed application that meets given performance, security and reliability criteria Critically review existing web service frameworks (e.g SOAP, Microsift.Net) Identify potential threats to a company implementing a distributed application- based on web services Develop a list of design requirements for a distributed application to ensure that a companys assets are protected. Show an understanding of the capabilities of the various web service technologies that are available commercially or provided by the research community. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Tanenbaum A., & van Steen M (2007) Distributed Systems ¿ Principles and Design 2e, Prentice Hall Other Texts: Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"How will the distributed systems module be taught and delivered?","answers":"{ \"text\": [ \"Lectures, Labs and Tutorials\" ], \"answer_start\": [ 814 ] }"},{"id":"74","title ":"DISTRIBUTED_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Design at a high level a distributed application that meets given performance, security and reliability criteria Critically review existing web service frameworks (e.g SOAP, Microsift.Net) Identify potential threats to a company implementing a distributed application- based on web services Develop a list of design requirements for a distributed application to ensure that a companys assets are protected. Show an understanding of the capabilities of the various web service technologies that are available commercially or provided by the research community. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Tanenbaum A., & van Steen M (2007) Distributed Systems ¿ Principles and Design 2e, Prentice Hall Other Texts: Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"What book I need for the distributed systems module?","answers":"{ \"text\": [ \"Principles and Design 2e\" ], \"answer_start\": [ 978 ] }"},{"id":"75","title ":"DISTRIBUTED_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Design at a high level a distributed application that meets given performance, security and reliability criteria Critically review existing web service frameworks (e.g SOAP, Microsift.Net) Identify potential threats to a company implementing a distributed application- based on web services Develop a list of design requirements for a distributed application to ensure that a companys assets are protected. Show an understanding of the capabilities of the various web service technologies that are available commercially or provided by the research community. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Tanenbaum A., & van Steen M (2007) Distributed Systems ¿ Principles and Design 2e, Prentice Hall Other Texts: Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the distributed systems module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1088 ] }"},{"id":"76","title ":"COMPUTER_ARCHITECTURE","context":"Module Code - Title: CE4518 - COMPUTER ARCHITECTURE Prerequisite Modules: CE4517 Rationale and Purpose of the Module:\nTo provide a grounding in the analytic study of computer architecture and an introduction to various architectural styles, e.g., CISC, RISC, and variousnon-von Neumann architectures. Syllabus: Review of Von-Neumann architecture: Brief discussion of evolution in processor design from 1940's to today.  Computer classifications. Flynn's taxonomy: SISD, SIMD, MIMD. Computer performance measurement: Execution time and clock cycles per instruction (CPI). MIPs, MFLOPs.  Benchmarks: Dhrystone, Whetstone. Kernels: Livermore loops, Linpack, SPECmarks. Floating point arithmetic: IEEE 754.  Addition.  Rounding. Denormalised numbers.  Multiplication.  Iterative  division. Precision. Instruction set design and architecture: Classification.  Register machines.  Addressing modes.  The role of high-level languages and compilers in determining instruction set architecture, \"semantic gap\", \"high-level language architecture\", CISC and RISC architectures. Processor implementation techniques: Datapath.  Execution steps.  Control: hardwired, microcoded.  Handling exceptions. Pipelining: Hazards in pipelines.  CISC and RISC pipelines.  Multicycle pipelines (superpipelining).  Dynamic scheduling.  Scoreboarding.  Tomasulo's algorithm.  Instruction level parallelism.  Superscalar architecture.  VLIW. Software pipelining and trace scheduling. Memory hierarchy design: Register windows.  Caches: strategies, replacement policies, block size.  Main memory: width, interleaving.  Virtual memory: page tables, translation lookaside buffers.","question":"What is the code for the computer architecture module?","answers":"{ \"text\": [ \"CE4518\" ], \"answer_start\": [ 21 ] }"},{"id":"77","title ":"COMPUTER_ARCHITECTURE","context":"Module Code - Title: CE4518 - COMPUTER ARCHITECTURE Prerequisite Modules: CE4517 Rationale and Purpose of the Module:\nTo provide a grounding in the analytic study of computer architecture and an introduction to various architectural styles, e.g., CISC, RISC, and variousnon-von Neumann architectures. Syllabus: Review of Von-Neumann architecture: Brief discussion of evolution in processor design from 1940's to today.  Computer classifications. Flynn's taxonomy: SISD, SIMD, MIMD. Computer performance measurement: Execution time and clock cycles per instruction (CPI). MIPs, MFLOPs.  Benchmarks: Dhrystone, Whetstone. Kernels: Livermore loops, Linpack, SPECmarks. Floating point arithmetic: IEEE 754.  Addition.  Rounding. Denormalised numbers.  Multiplication.  Iterative  division. Precision. Instruction set design and architecture: Classification.  Register machines.  Addressing modes.  The role of high-level languages and compilers in determining instruction set architecture, \"semantic gap\", \"high-level language architecture\", CISC and RISC architectures. Processor implementation techniques: Datapath.  Execution steps.  Control: hardwired, microcoded.  Handling exceptions. Pipelining: Hazards in pipelines.  CISC and RISC pipelines.  Multicycle pipelines (superpipelining).  Dynamic scheduling.  Scoreboarding.  Tomasulo's algorithm.  Instruction level parallelism.  Superscalar architecture.  VLIW. Software pipelining and trace scheduling. Memory hierarchy design: Register windows.  Caches: strategies, replacement policies, block size.  Main memory: width, interleaving.  Virtual memory: page tables, translation lookaside buffers.","question":"Are there any prerequisite modules for the computer architecture module?","answers":"{ \"text\": [ \"CE4517\" ], \"answer_start\": [ 74 ] }"},{"id":"78","title ":"COMPUTER_ARCHITECTURE","context":"Module Code - Title: CE4518 - COMPUTER ARCHITECTURE Prerequisite Modules: CE4517 Rationale and Purpose of the Module:\nTo provide a grounding in the analytic study of computer architecture and an introduction to various architectural styles, e.g., CISC, RISC, and variousnon-von Neumann architectures. Syllabus: Review of Von-Neumann architecture: Brief discussion of evolution in processor design from 1940's to today.  Computer classifications. Flynn's taxonomy: SISD, SIMD, MIMD. Computer performance measurement: Execution time and clock cycles per instruction (CPI). MIPs, MFLOPs.  Benchmarks: Dhrystone, Whetstone. Kernels: Livermore loops, Linpack, SPECmarks. Floating point arithmetic: IEEE 754.  Addition.  Rounding. Denormalised numbers.  Multiplication.  Iterative  division. Precision. Instruction set design and architecture: Classification.  Register machines.  Addressing modes.  The role of high-level languages and compilers in determining instruction set architecture, \"semantic gap\", \"high-level language architecture\", CISC and RISC architectures. Processor implementation techniques: Datapath.  Execution steps.  Control: hardwired, microcoded.  Handling exceptions. Pipelining: Hazards in pipelines.  CISC and RISC pipelines.  Multicycle pipelines (superpipelining).  Dynamic scheduling.  Scoreboarding.  Tomasulo's algorithm.  Instruction level parallelism.  Superscalar architecture.  VLIW. Software pipelining and trace scheduling. Memory hierarchy design: Register windows.  Caches: strategies, replacement policies, block size.  Main memory: width, interleaving.  Virtual memory: page tables, translation lookaside buffers.","question":"What is the purpose of the computer architecture module?","answers":"{ \"text\": [ \"To provide a grounding in the analytic study of computer architecture\" ], \"answer_start\": [ 118 ] }"},{"id":"79","title ":"COMPUTER_ARCHITECTURE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Evaluate the impact on CPU performance of instruction set design 2. Evaluate the merits and demerits of various computer performance benchmarks  3. Evaluate the performance characteristics of computer arithmetic algorithms 4. Analyse and compare the performance of various caching algorithms 5. Describe the structure of pipelined and superscalar CPU microarchitectures Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Hennessy, J.L. & Patterson, D.A. (2007) Computer Architecture: A Quantitative Approach, 4th ed., Elsevier Patterson, D.A. & Hennessy, J.L. (2005) Computer Organization & Design, 3rd ed., Elsevier Other Texts: Fisher, J.A. Faraboschi, P. & Young C. (2005) Embedded Computing: A VLIW Approach to ARchitecture, Compilers & Tools, Elsevier Shen, J.P. & Lipasti, M.H. (2005) Modern Processor Design: Fundamentals of Superscalar Processors, McGraw-Hill Ercegovac, M.D. & Lang, T. (2004) Digital Arithmetic, Elsevier Stines, J.E. (2004) Digital Computer Arithmetic Datapath Design Using Verilog HDL, Kluwer Lee, S. & Sjoholm, S. (2003) Design of Computers and Other Complex Digital Devices with VHDL for Designers, Prentice Hall Koren, I. (2002) Computer Arithmetic Algorithms, 2nd ed., A K Peters Ltd Shriver, B. & Smith, B. (1998) The Anatomy of a High-Performance Microprocessor, IEEE Computer Society Press Programmes\nSemester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"What will I learn in the computer architecture module?","answers":"{ \"text\": [ \"The Anatomy of a High-Performance Microprocessor\" ], \"answer_start\": [ 1555 ] }"},{"id":"80","title ":"COMPUTER_ARCHITECTURE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Evaluate the impact on CPU performance of instruction set design 2. Evaluate the merits and demerits of various computer performance benchmarks  3. Evaluate the performance characteristics of computer arithmetic algorithms 4. Analyse and compare the performance of various caching algorithms 5. Describe the structure of pipelined and superscalar CPU microarchitectures Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Hennessy, J.L. & Patterson, D.A. (2007) Computer Architecture: A Quantitative Approach, 4th ed., Elsevier Patterson, D.A. & Hennessy, J.L. (2005) Computer Organization & Design, 3rd ed., Elsevier Other Texts: Fisher, J.A. Faraboschi, P. & Young C. (2005) Embedded Computing: A VLIW Approach to ARchitecture, Compilers & Tools, Elsevier Shen, J.P. & Lipasti, M.H. (2005) Modern Processor Design: Fundamentals of Superscalar Processors, McGraw-Hill Ercegovac, M.D. & Lang, T. (2004) Digital Arithmetic, Elsevier Stines, J.E. (2004) Digital Computer Arithmetic Datapath Design Using Verilog HDL, Kluwer Lee, S. & Sjoholm, S. (2003) Design of Computers and Other Complex Digital Devices with VHDL for Designers, Prentice Hall Koren, I. (2002) Computer Arithmetic Algorithms, 2nd ed., A K Peters Ltd Shriver, B. & Smith, B. (1998) The Anatomy of a High-Performance Microprocessor, IEEE Computer Society Press Programmes\nSemester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"What textbook I need to read for the computer architecture module?","answers":"{ \"text\": [ \"A Quantitative Approach\" ], \"answer_start\": [ 792 ] }"},{"id":"81","title ":"COMPUTER_ARCHITECTURE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Evaluate the impact on CPU performance of instruction set design 2. Evaluate the merits and demerits of various computer performance benchmarks  3. Evaluate the performance characteristics of computer arithmetic algorithms 4. Analyse and compare the performance of various caching algorithms 5. Describe the structure of pipelined and superscalar CPU microarchitectures Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Hennessy, J.L. & Patterson, D.A. (2007) Computer Architecture: A Quantitative Approach, 4th ed., Elsevier Patterson, D.A. & Hennessy, J.L. (2005) Computer Organization & Design, 3rd ed., Elsevier Other Texts: Fisher, J.A. Faraboschi, P. & Young C. (2005) Embedded Computing: A VLIW Approach to ARchitecture, Compilers & Tools, Elsevier Shen, J.P. & Lipasti, M.H. (2005) Modern Processor Design: Fundamentals of Superscalar Processors, McGraw-Hill Ercegovac, M.D. & Lang, T. (2004) Digital Arithmetic, Elsevier Stines, J.E. (2004) Digital Computer Arithmetic Datapath Design Using Verilog HDL, Kluwer Lee, S. & Sjoholm, S. (2003) Design of Computers and Other Complex Digital Devices with VHDL for Designers, Prentice Hall Koren, I. (2002) Computer Arithmetic Algorithms, 2nd ed., A K Peters Ltd Shriver, B. & Smith, B. (1998) The Anatomy of a High-Performance Microprocessor, IEEE Computer Society Press Programmes\nSemester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"How can I contact the lecturer for the computer architecture module?","answers":"{ \"text\": [ \"Colin.Flanagan@ul.ie\" ], \"answer_start\": [ 1690 ] }"},{"id":"82","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: CE4607 - COMPUTER NETWORKS 1 Prerequisite Modules: EE4616 Rationale and Purpose of the Module:\nThis module provides a unified view of the field of computer communications and networks.  The module seeks to integrate a number of topics introduced in earlier parts of the course and addresses the analysis, design and performance evaluation of data communication systems.  The module covers communications within and between computer systems, and communications protocols and standards. Syllabus: *  [Introduction to Data and Computer Communications] Communications tasks; Protocol elements, characteristics, and functions; Protocol architectures; Reference communications models overview: OSI vs. TCP/IP (layersÆ description and functions, PDU encapsulation). *  [Physical Transmission] Transmission modes (simplex, half duplex, full duplex) and transmission types (baseband, broadband); Analogue and digital signals; Transmission impairments (attenuation, delay distortion, noise); Channel capacity; Data encoding and modulation; Physical interfacing; Asynchronous & synchronous transmission; Transmission media; Multiplexing techniques (FDM, TDM, WDM). *  [Link-by-Link Communication] Line disciplines (ENQ/ACK, poll/select);  Framing; Frame synchronization & data transparency, Flow control; Error control; Addressing; Link management; Protocol examples (character-oriented, byte-count, bit-oriented). *  [Network Services] Switching (circuit-, message-, packet switching); Addressing (classful vs. classless IP addressing); NAT operation (static and dynamic); IP subnetting and supernetting; Routing (concepts and principles; routing algorithms û flooding, static, dynamic; central and distributed control; distance vector vs. link state routing; hierarchical routing; routing protocols examples: interior vs. exterior); Congestion control; QoS provision; IP protocol: main functions and operation (IPv4 vs. IPv6); Mobile IP; Address resolution with ARP and RARP; Internet multicasting (MBone operation) and group management (IGMP protocol); Control and assistance mechanisms (ICMP protocol: v4 vs. v6). Modular design of protocols. *  [Transport Services] Overview (connection-oriented vs. connectionless; segmentation and re-assembly; end-to-end delivery, flow control & buffering; crash recovery); Unreliable datagram transport with UDP; Real-time transport with RTP and RTCP; Reliable connection-oriented transport with TCP and SCTP; Wireless TCP; Modular design of protocols. *  [End-to-End Communication] Session management (SIP and SDP protocols); Data presentation (ASN.1 and NVT); Client-server communication model; Domain Name System (DNS); TCP/IP configuration: static (BOOTP protocol) vs. dynamic (DHCP protocol); Terminal networking with Telnet; File transfer with FTP and TFTP; E-mail service (SMTP, POP, IMAP protocols); Browsing with HTTP; Network management with SNMP. *  [Practical Implementation] Building and testing different types of patch cables; Serial interface configuration; Device configuration: IOS software, managing configuration files, updating software; Router configuration: initialisation, commands and modes of operation; Routing protocolsÆ configuration, operation and evaluation: RIP, IGRP etc.; Network configuration: testing established connectivity and routes. Analysing and interpreting IP addresses and subnets; Scaling the IP address space: CIDR, private addressing, secondary IP addressing, MTU and fragmentation; NAT configuration; TCP/IP protocols configuration and operation.","question":"What is the code for the computer networks 1 module?","answers":"{ \"text\": [ \"CE4607\" ], \"answer_start\": [ 21 ] }"},{"id":"83","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: CE4607 - COMPUTER NETWORKS 1 Prerequisite Modules: EE4616 Rationale and Purpose of the Module:\nThis module provides a unified view of the field of computer communications and networks.  The module seeks to integrate a number of topics introduced in earlier parts of the course and addresses the analysis, design and performance evaluation of data communication systems.  The module covers communications within and between computer systems, and communications protocols and standards. Syllabus: *  [Introduction to Data and Computer Communications] Communications tasks; Protocol elements, characteristics, and functions; Protocol architectures; Reference communications models overview: OSI vs. TCP/IP (layersÆ description and functions, PDU encapsulation). *  [Physical Transmission] Transmission modes (simplex, half duplex, full duplex) and transmission types (baseband, broadband); Analogue and digital signals; Transmission impairments (attenuation, delay distortion, noise); Channel capacity; Data encoding and modulation; Physical interfacing; Asynchronous & synchronous transmission; Transmission media; Multiplexing techniques (FDM, TDM, WDM). *  [Link-by-Link Communication] Line disciplines (ENQ/ACK, poll/select);  Framing; Frame synchronization & data transparency, Flow control; Error control; Addressing; Link management; Protocol examples (character-oriented, byte-count, bit-oriented). *  [Network Services] Switching (circuit-, message-, packet switching); Addressing (classful vs. classless IP addressing); NAT operation (static and dynamic); IP subnetting and supernetting; Routing (concepts and principles; routing algorithms û flooding, static, dynamic; central and distributed control; distance vector vs. link state routing; hierarchical routing; routing protocols examples: interior vs. exterior); Congestion control; QoS provision; IP protocol: main functions and operation (IPv4 vs. IPv6); Mobile IP; Address resolution with ARP and RARP; Internet multicasting (MBone operation) and group management (IGMP protocol); Control and assistance mechanisms (ICMP protocol: v4 vs. v6). Modular design of protocols. *  [Transport Services] Overview (connection-oriented vs. connectionless; segmentation and re-assembly; end-to-end delivery, flow control & buffering; crash recovery); Unreliable datagram transport with UDP; Real-time transport with RTP and RTCP; Reliable connection-oriented transport with TCP and SCTP; Wireless TCP; Modular design of protocols. *  [End-to-End Communication] Session management (SIP and SDP protocols); Data presentation (ASN.1 and NVT); Client-server communication model; Domain Name System (DNS); TCP/IP configuration: static (BOOTP protocol) vs. dynamic (DHCP protocol); Terminal networking with Telnet; File transfer with FTP and TFTP; E-mail service (SMTP, POP, IMAP protocols); Browsing with HTTP; Network management with SNMP. *  [Practical Implementation] Building and testing different types of patch cables; Serial interface configuration; Device configuration: IOS software, managing configuration files, updating software; Router configuration: initialisation, commands and modes of operation; Routing protocolsÆ configuration, operation and evaluation: RIP, IGRP etc.; Network configuration: testing established connectivity and routes. Analysing and interpreting IP addresses and subnets; Scaling the IP address space: CIDR, private addressing, secondary IP addressing, MTU and fragmentation; NAT configuration; TCP/IP protocols configuration and operation.","question":"What are the prerequisite modules for the computer networks 1 module?","answers":"{ \"text\": [ \"EE4616 Rationale and Purpose of the Module\" ], \"answer_start\": [ 72 ] }"},{"id":"84","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: CE4607 - COMPUTER NETWORKS 1 Prerequisite Modules: EE4616 Rationale and Purpose of the Module:\nThis module provides a unified view of the field of computer communications and networks.  The module seeks to integrate a number of topics introduced in earlier parts of the course and addresses the analysis, design and performance evaluation of data communication systems.  The module covers communications within and between computer systems, and communications protocols and standards. Syllabus: *  [Introduction to Data and Computer Communications] Communications tasks; Protocol elements, characteristics, and functions; Protocol architectures; Reference communications models overview: OSI vs. TCP/IP (layersÆ description and functions, PDU encapsulation). *  [Physical Transmission] Transmission modes (simplex, half duplex, full duplex) and transmission types (baseband, broadband); Analogue and digital signals; Transmission impairments (attenuation, delay distortion, noise); Channel capacity; Data encoding and modulation; Physical interfacing; Asynchronous & synchronous transmission; Transmission media; Multiplexing techniques (FDM, TDM, WDM). *  [Link-by-Link Communication] Line disciplines (ENQ/ACK, poll/select);  Framing; Frame synchronization & data transparency, Flow control; Error control; Addressing; Link management; Protocol examples (character-oriented, byte-count, bit-oriented). *  [Network Services] Switching (circuit-, message-, packet switching); Addressing (classful vs. classless IP addressing); NAT operation (static and dynamic); IP subnetting and supernetting; Routing (concepts and principles; routing algorithms û flooding, static, dynamic; central and distributed control; distance vector vs. link state routing; hierarchical routing; routing protocols examples: interior vs. exterior); Congestion control; QoS provision; IP protocol: main functions and operation (IPv4 vs. IPv6); Mobile IP; Address resolution with ARP and RARP; Internet multicasting (MBone operation) and group management (IGMP protocol); Control and assistance mechanisms (ICMP protocol: v4 vs. v6). Modular design of protocols. *  [Transport Services] Overview (connection-oriented vs. connectionless; segmentation and re-assembly; end-to-end delivery, flow control & buffering; crash recovery); Unreliable datagram transport with UDP; Real-time transport with RTP and RTCP; Reliable connection-oriented transport with TCP and SCTP; Wireless TCP; Modular design of protocols. *  [End-to-End Communication] Session management (SIP and SDP protocols); Data presentation (ASN.1 and NVT); Client-server communication model; Domain Name System (DNS); TCP/IP configuration: static (BOOTP protocol) vs. dynamic (DHCP protocol); Terminal networking with Telnet; File transfer with FTP and TFTP; E-mail service (SMTP, POP, IMAP protocols); Browsing with HTTP; Network management with SNMP. *  [Practical Implementation] Building and testing different types of patch cables; Serial interface configuration; Device configuration: IOS software, managing configuration files, updating software; Router configuration: initialisation, commands and modes of operation; Routing protocolsÆ configuration, operation and evaluation: RIP, IGRP etc.; Network configuration: testing established connectivity and routes. Analysing and interpreting IP addresses and subnets; Scaling the IP address space: CIDR, private addressing, secondary IP addressing, MTU and fragmentation; NAT configuration; TCP/IP protocols configuration and operation.","question":"What does the computer networks 1 module cover?","answers":"{ \"text\": [ \"communications within and between computer systems, and communications protocols and standards\" ], \"answer_start\": [ 410 ] }"},{"id":"85","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Locate, analyse and assess different elements of communication protocols used in computer networks. 2. Differentiate between different communication services and identify suitable ones for use in computer networks. 3. Given requirements for computer network, find correct solutions for internetworking / interoperability, including subnetting and supernetting, verification of addresses, and traffic filtering. 4. Given a computer (inter)network topology, identify problems that a routing algorithm may encounter, describe techniques to reduce these problems, construct correct routing tables (find optimal path between any two end points) without reference to a source. 5. Given requirements for performance and reliability of computer network, define, categorise, discuss and employ different techniques for error control, flow control, QoS control, and congestion control. Affective (Attitudes and Values) Psychomotor (Physical Skills) 1. Load with software and configure layer 2 & 3 networking devices, i.e. switches and routers. 2. Understand how to configure, connect, and troubleshoot IP networks. How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:Tanenbaum A.S. (2003) Computer Networks, 4th  ed., Prentice Hall\nStallings, W. (2007) Data and Computer Communications, 8th ed., Prentice Hall Other Texts: Forouzan B.A. (2005) TCP/IP Protocol Suit, 2nd updated ed., McGraw-Hill Forouzan B.A. (2007) Data Communications and Networking, 4th ed., McGraw-Hill Programmes\nSemester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"What will I be able to do in the computer networks 1 module?","answers":"{ \"text\": [ \"Understand how to configure, connect, and troubleshoot IP networks\" ], \"answer_start\": [ 1142 ] }"},{"id":"86","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Locate, analyse and assess different elements of communication protocols used in computer networks. 2. Differentiate between different communication services and identify suitable ones for use in computer networks. 3. Given requirements for computer network, find correct solutions for internetworking / interoperability, including subnetting and supernetting, verification of addresses, and traffic filtering. 4. Given a computer (inter)network topology, identify problems that a routing algorithm may encounter, describe techniques to reduce these problems, construct correct routing tables (find optimal path between any two end points) without reference to a source. 5. Given requirements for performance and reliability of computer network, define, categorise, discuss and employ different techniques for error control, flow control, QoS control, and congestion control. Affective (Attitudes and Values) Psychomotor (Physical Skills) 1. Load with software and configure layer 2 & 3 networking devices, i.e. switches and routers. 2. Understand how to configure, connect, and troubleshoot IP networks. How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:Tanenbaum A.S. (2003) Computer Networks, 4th  ed., Prentice Hall\nStallings, W. (2007) Data and Computer Communications, 8th ed., Prentice Hall Other Texts: Forouzan B.A. (2005) TCP/IP Protocol Suit, 2nd updated ed., McGraw-Hill Forouzan B.A. (2007) Data Communications and Networking, 4th ed., McGraw-Hill Programmes\nSemester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"What are the prime texts that I need to read for the computer networks 1 module?","answers":"{ \"text\": [ \"Data and Computer Communications\" ], \"answer_start\": [ 1462 ] }"},{"id":"87","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Locate, analyse and assess different elements of communication protocols used in computer networks. 2. Differentiate between different communication services and identify suitable ones for use in computer networks. 3. Given requirements for computer network, find correct solutions for internetworking / interoperability, including subnetting and supernetting, verification of addresses, and traffic filtering. 4. Given a computer (inter)network topology, identify problems that a routing algorithm may encounter, describe techniques to reduce these problems, construct correct routing tables (find optimal path between any two end points) without reference to a source. 5. Given requirements for performance and reliability of computer network, define, categorise, discuss and employ different techniques for error control, flow control, QoS control, and congestion control. Affective (Attitudes and Values) Psychomotor (Physical Skills) 1. Load with software and configure layer 2 & 3 networking devices, i.e. switches and routers. 2. Understand how to configure, connect, and troubleshoot IP networks. How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:Tanenbaum A.S. (2003) Computer Networks, 4th  ed., Prentice Hall\nStallings, W. (2007) Data and Computer Communications, 8th ed., Prentice Hall Other Texts: Forouzan B.A. (2005) TCP/IP Protocol Suit, 2nd updated ed., McGraw-Hill Forouzan B.A. (2007) Data Communications and Networking, 4th ed., McGraw-Hill Programmes\nSemester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"How can I contact the lecturer for the computer networks 1 module?","answers":"{ \"text\": [ \"eoin.oconnell@ul.ie\" ], \"answer_start\": [ 1739 ] }"},{"id":"88","title ":"COMPUTER_SOFTWARE_1","context":"Module Code - Title: CE4701 - COMPUTER SOFTWARE 1 Prerequisite Modules: Rationale and Purpose of the Module: Introduce students to a high level object-oriented programming language and its software development environment Syllabus: The focus of this module is to introduce a modern high level object-oriented programming language to enable the student to develop the programming skills necessary to write simple but useful applications. The following topics will be covered:  Introduction to software development.\nShort comparative study of different programming languages. Simple program design techniques e.g. flowcharts, Basic data types, control statements, methods, scope. Relationship between the program, the run time environment and the operating system. Introduction to programming language documentation. Introduction to Class Libraries. Interactive Development Environments.\nIntroduction and demonstration of a low level graphics toolkit. Basic test practices and test case definition.","question":"What is the code for the computer software 1 module?","answers":"{ \"text\": [ \"CE4701\" ], \"answer_start\": [ 21 ] }"},{"id":"89","title ":"COMPUTER_SOFTWARE_1","context":"Module Code - Title: CE4701 - COMPUTER SOFTWARE 1 Prerequisite Modules: Rationale and Purpose of the Module: Introduce students to a high level object-oriented programming language and its software development environment Syllabus: The focus of this module is to introduce a modern high level object-oriented programming language to enable the student to develop the programming skills necessary to write simple but useful applications. The following topics will be covered:  Introduction to software development.\nShort comparative study of different programming languages. Simple program design techniques e.g. flowcharts, Basic data types, control statements, methods, scope. Relationship between the program, the run time environment and the operating system. Introduction to programming language documentation. Introduction to Class Libraries. Interactive Development Environments.\nIntroduction and demonstration of a low level graphics toolkit. Basic test practices and test case definition.","question":"What is the purpose of the computer software 1 module?","answers":"{ \"text\": [ \"Introduce students to a high level object-oriented programming language\" ], \"answer_start\": [ 109 ] }"},{"id":"90","title ":"COMPUTER_SOFTWARE_1","context":"Module Code - Title: CE4701 - COMPUTER SOFTWARE 1 Prerequisite Modules: Rationale and Purpose of the Module: Introduce students to a high level object-oriented programming language and its software development environment Syllabus: The focus of this module is to introduce a modern high level object-oriented programming language to enable the student to develop the programming skills necessary to write simple but useful applications. The following topics will be covered:  Introduction to software development.\nShort comparative study of different programming languages. Simple program design techniques e.g. flowcharts, Basic data types, control statements, methods, scope. Relationship between the program, the run time environment and the operating system. Introduction to programming language documentation. Introduction to Class Libraries. Interactive Development Environments.\nIntroduction and demonstration of a low level graphics toolkit. Basic test practices and test case definition.","question":"What program design techniques will I learn in the computer software 1 module?","answers":"{ \"text\": [ \"flowcharts, Basic data types, control statements, methods, scope\" ], \"answer_start\": [ 612 ] }"},{"id":"91","title ":"COMPUTER_SOFTWARE_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a problem definition, formulate an algorithm to provide a solution. 2. Describe an algorithm using pseudocode. 3. Code a program solution using structured programming constructs. 4. Test and debug a program 5. Apply top-down design and modular design to a problem and employ this structure in a program. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and individual software assignments Research Findings Incorporated in to the Syllabus (If Relevant):  Prime Texts: Other Texts: Deitel P. & Deitel H. (2017) Java-How to Program, Early Objects, 11e (8e+ will suffice), Pearson Liang, Y. D. (2020) Introduction to Java Programming, Pearson Savitch W. (2018) Java: An Introduction to Problem Solving and Programming, Pearson Malik D. S & Nair P. S. (2012) Java Programming: From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"What will I be able to do in the computer software 1 module?","answers":"{ \"text\": [ \"Test and debug\" ], \"answer_start\": [ 293 ] }"},{"id":"92","title ":"COMPUTER_SOFTWARE_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a problem definition, formulate an algorithm to provide a solution. 2. Describe an algorithm using pseudocode. 3. Code a program solution using structured programming constructs. 4. Test and debug a program 5. Apply top-down design and modular design to a problem and employ this structure in a program. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and individual software assignments Research Findings Incorporated in to the Syllabus (If Relevant):  Prime Texts: Other Texts: Deitel P. & Deitel H. (2017) Java-How to Program, Early Objects, 11e (8e+ will suffice), Pearson Liang, Y. D. (2020) Introduction to Java Programming, Pearson Savitch W. (2018) Java: An Introduction to Problem Solving and Programming, Pearson Malik D. S & Nair P. S. (2012) Java Programming: From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"How will the computer software 1 module be taught and delivered?","answers":"{ \"text\": [ \"Lectures, Labs\" ], \"answer_start\": [ 567 ] }"},{"id":"93","title ":"COMPUTER_SOFTWARE_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a problem definition, formulate an algorithm to provide a solution. 2. Describe an algorithm using pseudocode. 3. Code a program solution using structured programming constructs. 4. Test and debug a program 5. Apply top-down design and modular design to a problem and employ this structure in a program. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and individual software assignments Research Findings Incorporated in to the Syllabus (If Relevant):  Prime Texts: Other Texts: Deitel P. & Deitel H. (2017) Java-How to Program, Early Objects, 11e (8e+ will suffice), Pearson Liang, Y. D. (2020) Introduction to Java Programming, Pearson Savitch W. (2018) Java: An Introduction to Problem Solving and Programming, Pearson Malik D. S & Nair P. S. (2012) Java Programming: From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"How do I contact the lecturer for the computer software 1 module?","answers":"{ \"text\": [ \"John.Nelson@ul.ie \" ], \"answer_start\": [ 1110 ] }"},{"id":"94","title ":"COMPUTER_SOFTWARE_2","context":"Module Code - Title: CE4702 - COMPUTER SOFTWARE 2 Prerequisite Modules: CE4701 Rationale and Purpose of the Module:\nFurther the students knowledge of a modern object oriented programming language with particular emphasis on classes, objects and Graphical User Interfaces.  Understand the concepts of inheritance and polymorphism. Develop the ability to produce moderately complex event driven programs with user interfaces developed using a graphical toolbox. Syllabus: The following topics will be covered: In depth study of the object oriented principles, abstraction, inheritance and polymorphism.  Abstract data types including interfaces, abstract classes. Input and output including files and streams. Introduction to the use of regular expressions to manipulate text files Introduction to algorithms - efficiency, simple analysis and comparison Error handling techniques Binary trees Recursion Graphical user interfaces and development of event driven applications Unique global class naming and creation of class libraries\nCode documentation and code reviews Use case analysis","question":"What is the code for the computer software 2 module?","answers":"{ \"text\": [ \"CE4702\" ], \"answer_start\": [ 21 ] }"},{"id":"95","title ":"COMPUTER_SOFTWARE_2","context":"Module Code - Title: CE4702 - COMPUTER SOFTWARE 2 Prerequisite Modules: CE4701 Rationale and Purpose of the Module:\nFurther the students knowledge of a modern object oriented programming language with particular emphasis on classes, objects and Graphical User Interfaces.  Understand the concepts of inheritance and polymorphism. Develop the ability to produce moderately complex event driven programs with user interfaces developed using a graphical toolbox. Syllabus: The following topics will be covered: In depth study of the object oriented principles, abstraction, inheritance and polymorphism.  Abstract data types including interfaces, abstract classes. Input and output including files and streams. Introduction to the use of regular expressions to manipulate text files Introduction to algorithms - efficiency, simple analysis and comparison Error handling techniques Binary trees Recursion Graphical user interfaces and development of event driven applications Unique global class naming and creation of class libraries\nCode documentation and code reviews Use case analysis","question":"What are the prerequisite modules for the computer software 2 module?","answers":"{ \"text\": [ \"CE4701\" ], \"answer_start\": [ 72 ] }"},{"id":"96","title ":"COMPUTER_SOFTWARE_2","context":"Module Code - Title: CE4702 - COMPUTER SOFTWARE 2 Prerequisite Modules: CE4701 Rationale and Purpose of the Module:\nFurther the students knowledge of a modern object oriented programming language with particular emphasis on classes, objects and Graphical User Interfaces.  Understand the concepts of inheritance and polymorphism. Develop the ability to produce moderately complex event driven programs with user interfaces developed using a graphical toolbox. Syllabus: The following topics will be covered: In depth study of the object oriented principles, abstraction, inheritance and polymorphism.  Abstract data types including interfaces, abstract classes. Input and output including files and streams. Introduction to the use of regular expressions to manipulate text files Introduction to algorithms - efficiency, simple analysis and comparison Error handling techniques Binary trees Recursion Graphical user interfaces and development of event driven applications Unique global class naming and creation of class libraries\nCode documentation and code reviews Use case analysis","question":"What is the purpose of the computer software 2 module?","answers":"{ \"text\": [ \"Further the students knowledge of a modern object oriented programming language\" ], \"answer_start\": [ 120 ] }"},{"id":"97","title ":"COMPUTER_SOFTWARE_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Decompose a problem into a set of classes, using the concepts of inheritance and polymorphism 2. Construct code, using existing class libraries, to implement specific programming problems 3.  Demonstrate the use of regular expressions, error handling techniques and recursion. \n4. Implement programs that manage dynamic data structures. 5. Implement applications with graphical user interfaces to accept dynamic data and modify the gui in response to an input  6. Demonstrate the use of software structuring techniques including use case analysis, code documentation and code reviews  Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Dietel and Dietel (2020) Java - How to Program, Early Objects, 11e editions (8e+ suffices), Pearson Liang, Y. D. () Introduction to Java Programming, Pearson Savitch W. () Java: An Introduction to Problem Solving and Programming, Pearson Malik DS and Nair PS () Java Programming, From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"What will I be able to do in the computer software 2 module?","answers":"{ \"text\": [ \"Construct code\" ], \"answer_start\": [ 207 ] }"},{"id":"98","title ":"COMPUTER_SOFTWARE_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Decompose a problem into a set of classes, using the concepts of inheritance and polymorphism 2. Construct code, using existing class libraries, to implement specific programming problems 3.  Demonstrate the use of regular expressions, error handling techniques and recursion. \n4. Implement programs that manage dynamic data structures. 5. Implement applications with graphical user interfaces to accept dynamic data and modify the gui in response to an input  6. Demonstrate the use of software structuring techniques including use case analysis, code documentation and code reviews  Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Dietel and Dietel (2020) Java - How to Program, Early Objects, 11e editions (8e+ suffices), Pearson Liang, Y. D. () Introduction to Java Programming, Pearson Savitch W. () Java: An Introduction to Problem Solving and Programming, Pearson Malik DS and Nair PS () Java Programming, From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"What will I demonstrate in the computer software 2 module?","answers":"{ \"text\": [ \"use case analysis, code documentation and code reviews\" ], \"answer_start\": [ 638 ] }"},{"id":"99","title ":"COMPUTER_SOFTWARE_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Decompose a problem into a set of classes, using the concepts of inheritance and polymorphism 2. Construct code, using existing class libraries, to implement specific programming problems 3.  Demonstrate the use of regular expressions, error handling techniques and recursion. \n4. Implement programs that manage dynamic data structures. 5. Implement applications with graphical user interfaces to accept dynamic data and modify the gui in response to an input  6. Demonstrate the use of software structuring techniques including use case analysis, code documentation and code reviews  Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Dietel and Dietel (2020) Java - How to Program, Early Objects, 11e editions (8e+ suffices), Pearson Liang, Y. D. () Introduction to Java Programming, Pearson Savitch W. () Java: An Introduction to Problem Solving and Programming, Pearson Malik DS and Nair PS () Java Programming, From Problem Analysis to Program Design, Thomson Programmes Semester(s) Module is Offered: Module Leader: John.Nelson@ul.ie","question":"How can I contact the lecturer for the computer software 2 module?","answers":"{ \"text\": [ \"John.Nelson@ul.ie\" ], \"answer_start\": [ 1371 ] }"},{"id":"100","title ":"COMPUTER_SOFTWARE_3","context":"Module Code - Title: CE4703 - COMPUTER SOFTWARE 3 Prerequisite Modules: CE4702 Rationale and Purpose of the Module:\r\nTo introduce the student to algorithms and dynamic data structures (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application\r\nSyllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Project","question":"What is the code for the computer software 3 module?","answers":"{ \"text\": [ \"CE4703\" ], \"answer_start\": [ 25 ] }"},{"id":"101","title ":"COMPUTER_SOFTWARE_3","context":"Module Code - Title: CE4703 - COMPUTER SOFTWARE 3 Prerequisite Modules: CE4702 Rationale and Purpose of the Module:\nTo introduce the student to algorithms and dynamic data structures (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application\nSyllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Project","question":"What are the prerequisite modules for the computer software 3 module?","answers":"{ \"text\": [ \"CE4702 Rationale and Purpose of the Module\" ], \"answer_start\": [ 76 ] }"},{"id":"102","title ":"COMPUTER_SOFTWARE_3","context":"Module Code - Title: CE4703 - COMPUTER SOFTWARE 3 Prerequisite Modules: CE4702 Rationale and Purpose of the Module:\nTo introduce the student to algorithms and dynamic data structures (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application\nSyllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Project","question":"What is the purpose of the computer software 3 module?","answers":"{ \"text\": [ \"To introduce the student to algorithms and dynamic data structures\" ], \"answer_start\": [ 116 ] }"},{"id":"103","title ":"COMPUTER_SOFTWARE_3","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Dietel and Dietel (2007) Java - How to Program,  7th ed, Prentice hall Cormen, T. H., Leiserson, C.E., Rivest, R. L., Stein (2001) Introduction to Algorithms 2e, MIT Press Other Texts: 1 Liang, Y. D. (2007) Introduction to Java Programming 6e, Pearson Malik DS and Nair PS (2006) Java Programming, From Problem Analysis to Program Design (2e), Thompson Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"What will I be able to do in the computer software 3 module?","answers":"{ \"text\": [ \"Demonstrate the use of hash functions and search minimisation techniques\" ], \"answer_start\": [ 202 ] }"},{"id":"104","title ":"COMPUTER_SOFTWARE_3","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Dietel and Dietel (2007) Java - How to Program,  7th ed, Prentice hall Cormen, T. H., Leiserson, C.E., Rivest, R. L., Stein (2001) Introduction to Algorithms 2e, MIT Press Other Texts: 1 Liang, Y. D. (2007) Introduction to Java Programming 6e, Pearson Malik DS and Nair PS (2006) Java Programming, From Problem Analysis to Program Design (2e), Thompson Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"How will the computer software 3 module be taught?","answers":"{ \"text\": [ \"Lectures\" ], \"answer_start\": [ 634 ] }"},{"id":"105","title ":"COMPUTER_SOFTWARE_3","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Dietel and Dietel (2007) Java - How to Program,  7th ed, Prentice hall Cormen, T. H., Leiserson, C.E., Rivest, R. L., Stein (2001) Introduction to Algorithms 2e, MIT Press Other Texts: 1 Liang, Y. D. (2007) Introduction to Java Programming 6e, Pearson Malik DS and Nair PS (2006) Java Programming, From Problem Analysis to Program Design (2e), Thompson Programmes Semester(s) Module is Offered: Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the computer software 3 module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1368 ] }"},{"id":"106","title ":"SOFTWARE_ENGINEERING_1","context":"Module Code - Title: CE4706 - SOFTWARE ENGINEERING 1 Prerequisite Modules: Rationale and Purpose of the Module:\r\n- To introduce the domain of software engineering from a programmers perspective focusing on object oriented analysis, design and programming. - To revisit and develop existing computer software skills and competence. - To emphasise good Software Engineering Practices - To enhance individual and team working skills Syllabus: Introduction to Software Engineering.  Software Development Paradigms.Software Evolution and Reliability.  Human Factors in Software Engineering.Software Specification, System Modelling.  Requirements Definition/Specification.Software Design: Modularity, Cohesion, Coupling.Function Oriented Design. Diagramming Techniques. Structured Design.Software Reviewing and Testing.  Software Quality Assurance and metrics.More ADTs and algorithms.  Introduction to Object Oriented Analysis/Design and Programming Programming Languages Programming Practice: Coding, Style, DocumentationThe C++ Programming Language (continued):C++ versus C, Objects and Classes, Function and Operator Overloading, Inheritance and Polymorphism, Input and Output, Memory Management, Templates. Development Environments: Debuggers, Profilers, Browsers.Individual and Team Project/Case Study.","question":"What is the code for the software engineering 1 module?","answers":"{ \"text\": [ \"CE4706\" ], \"answer_start\": [ 21 ] }"},{"id":"107","title ":"SOFTWARE_ENGINEERING_1","context":"Module Code - Title: CE4706 - SOFTWARE ENGINEERING 1 Prerequisite Modules: Rationale and Purpose of the Module:\n- To introduce the domain of software engineering from a programmers perspective focusing on object oriented analysis, design and programming. - To revisit and develop existing computer software skills and competence. - To emphasise good Software Engineering Practices - To enhance individual and team working skills Syllabus: Introduction to Software Engineering.  Software Development Paradigms.Software Evolution and Reliability.  Human Factors in Software Engineering.Software Specification, System Modelling.  Requirements Definition/Specification.Software Design: Modularity, Cohesion, Coupling.Function Oriented Design. Diagramming Techniques. Structured Design.Software Reviewing and Testing.  Software Quality Assurance and metrics.More ADTs and algorithms.  Introduction to Object Oriented Analysis/Design and Programming Programming Languages Programming Practice: Coding, Style, DocumentationThe C++ Programming Language (continued):C++ versus C, Objects and Classes, Function and Operator Overloading, Inheritance and Polymorphism, Input and Output, Memory Management, Templates. Development Environments: Debuggers, Profilers, Browsers.Individual and Team Project/Case Study.","question":"What will I learn in the software engineering 1 module?","answers":"{ \"text\": [ \"object oriented analysis, design and programming\" ], \"answer_start\": [ 72 ] }"},{"id":"108","title ":"SOFTWARE_ENGINEERING_1","context":"Module Code - Title: CE4706 - SOFTWARE ENGINEERING 1 Prerequisite Modules: Rationale and Purpose of the Module:\r\n- To introduce the domain of software engineering from a programmers perspective focusing on object oriented analysis, design and programming. - To revisit and develop existing computer software skills and competence. - To emphasise good Software Engineering Practices - To enhance individual and team working skills Syllabus: Introduction to Software Engineering.  Software Development Paradigms.Software Evolution and Reliability.  Human Factors in Software Engineering.Software Specification, System Modelling.  Requirements Definition/Specification.Software Design: Modularity, Cohesion, Coupling.Function Oriented Design. Diagramming Techniques. Structured Design.Software Reviewing and Testing.  Software Quality Assurance and metrics.More ADTs and algorithms.  Introduction to Object Oriented Analysis/Design and Programming Programming Languages Programming Practice: Coding, Style, DocumentationThe C++ Programming Language (continued):C++ versus C, Objects and Classes, Function and Operator Overloading, Inheritance and Polymorphism, Input and Output, Memory Management, Templates. Development Environments: Debuggers, Profilers, Browsers.Individual and Team Project/Case Study.","question":"What is the purpose of the software engineering 1 module?","answers":"{ \"text\": [ \"To introduce the domain of software engineering from a programmers perspective\" ], \"answer_start\": [ 116 ] }"},{"id":"109","title ":"SOFTWARE_ENGINEERING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will: Apply basic software engineering concepts and techniques to the software development process. Design Abstract Data Types (ADTs). Create computer programs to implement and test them using a language such as C++. Use UML diagrams for the specification, visualization, construction and documentation of software artefacts. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system and its associated documentation. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values). Psychomotor (Physical Skills).How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials and Project Work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pressman R.S. (2015) Software Engineering - A practitioners approach, 8th Ed, McGraw-Hill Sommerville I. (2016) Software Engineering, 10th Ed, Addison Wesley 3. Deitel H.M. & P.J. Deitel (2007) C++ How to Program, Prentice Hall Other Texts: Kruchten, P (2004) The Rational Unified Process: An Introduction, Addison-Wesley Fowler, M. (2003) UML Distilled, Addison-Wesley Booch, Rumbaugh, Jacobson (2005) UML User Guide, Addison-Wesley Rumbaugh, Blaha, Premerlani, Eddy, Lorensen (1991) Object-Oriented Modeling and Design, Prentice Hall Programmes Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"What will I be able to do in the software engineering 1 module?","answers":"{ \"text\": [ \"Apply basic software engineering concepts and techniques to the software development process\" ], \"answer_start\": [ 286 ] }"},{"id":"110","title ":"SOFTWARE_ENGINEERING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will: Apply basic software engineering concepts and techniques to the software development process. Design Abstract Data Types (ADTs). Create computer programs to implement and test them using a language such as C++. Use UML diagrams for the specification, visualization, construction and documentation of software artefacts. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system and its associated documentation. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values). Psychomotor (Physical Skills).How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials and Project Work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pressman R.S. (2015) Software Engineering - A practitioners approach, 8th Ed, McGraw-Hill Sommerville I. (2016) Software Engineering, 10th Ed, Addison Wesley 3. Deitel H.M. & P.J. Deitel (2007) C++ How to Program, Prentice Hall Other Texts: Kruchten, P (2004) The Rational Unified Process: An Introduction, Addison-Wesley Fowler, M. (2003) UML Distilled, Addison-Wesley Booch, Rumbaugh, Jacobson (2005) UML User Guide, Addison-Wesley Rumbaugh, Blaha, Premerlani, Eddy, Lorensen (1991) Object-Oriented Modeling and Design, Prentice Hall Programmes Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"What are the prime texts that I need for the software engineering 1 module?","answers":"{ \"text\": [ \"C++ How to Program\" ], \"answer_start\": [ 743 ] }"},{"id":"111","title ":"SOFTWARE_ENGINEERING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will: Apply basic software engineering concepts and techniques to the software development process. Design Abstract Data Types (ADTs). Create computer programs to implement and test them using a language such as C++. Use UML diagrams for the specification, visualization, construction and documentation of software artefacts. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system and its associated documentation. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values). Psychomotor (Physical Skills).How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials and Project Work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pressman R.S. (2015) Software Engineering - A practitioners approach, 8th Ed, McGraw-Hill Sommerville I. (2016) Software Engineering, 10th Ed, Addison Wesley 3. Deitel H.M. & P.J. Deitel (2007) C++ How to Program, Prentice Hall Other Texts: Kruchten, P (2004) The Rational Unified Process: An Introduction, Addison-Wesley Fowler, M. (2003) UML Distilled, Addison-Wesley Booch, Rumbaugh, Jacobson (2005) UML User Guide, Addison-Wesley Rumbaugh, Blaha, Premerlani, Eddy, Lorensen (1991) Object-Oriented Modeling and Design, Prentice Hall Programmes Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"How can I contact the lecturer for the software engineering 1 module?","answers":"{ \"text\": [ \"kevin.murphy@ul.ie\" ], \"answer_start\": [ 1280 ] }"},{"id":"112","title ":"LANGUAGE_PROCESSORS","context":"Module Code - Title: CE4717 - LANGUAGE PROCESSORS Prerequisite Modules: CE4703 Rationale and Purpose of the Module:\nTo introduce the theory of compiler design and show its application in a simple compiler. An important part of the module is the implementation of a compiler for a simple, Pascal-like, language. Syllabus: Compiler structure: Definition of terms.  Source, object and executable files.  Symbols, definition and resolution. Phases of a compiler and their functions. Single and multi-pass compilation.  Cross-compilation, interpreters and pseudo-machines. Grammars: Mathematical grammars for language definition.  BNF and EBNF notations.  Parse trees. Properties of grammars.  The Chomsky hierarchy.  Syntax diagrams.  Restrictions on grammars. Parsing: Top-down parsing.  Lookahead. Recursive descent.  LL(l) grammars.  First, follow and predict sets. Syntactic error detection and recovery for recursive descent parsers. Semantic processing: The symbol table. Handling semantic errors. Code generation for a simple stack machine: Translation of expressions to reverse-Polish form.  Procedure calls and block structure.  Static and dynamic scope.  Storage management for modern languages. Scanning: Regular expressions.  State machine implementation. Nondeterministic automata and translation to deterministic automata.  The use of a scanner generator such as LEX. Table-driven parsing techniques: LL(l) table-driven parsers. Shift-reduce parsers.  LR parsing.  The LR(0)  Characteristic Finite State Machine.  LR(l). SLR. LALR(l).  The use of a parser generator such as yacc. Code generation for register architectures.  Introduction to code optimisation techniques.","question":"What is the code for the language processors module?","answers":"{ \"text\": [ \"CE4717\" ], \"answer_start\": [ 21 ] }"},{"id":"113","title ":"LANGUAGE_PROCESSORS","context":"Module Code - Title: CE4717 - LANGUAGE PROCESSORS Prerequisite Modules: CE4703 Rationale and Purpose of the Module:\nTo introduce the theory of compiler design and show its application in a simple compiler. An important part of the module is the implementation of a compiler for a simple, Pascal-like, language. Syllabus: Compiler structure: Definition of terms.  Source, object and executable files.  Symbols, definition and resolution. Phases of a compiler and their functions. Single and multi-pass compilation.  Cross-compilation, interpreters and pseudo-machines. Grammars: Mathematical grammars for language definition.  BNF and EBNF notations.  Parse trees. Properties of grammars.  The Chomsky hierarchy.  Syntax diagrams.  Restrictions on grammars. Parsing: Top-down parsing.  Lookahead. Recursive descent.  LL(l) grammars.  First, follow and predict sets. Syntactic error detection and recovery for recursive descent parsers. Semantic processing: The symbol table. Handling semantic errors. Code generation for a simple stack machine: Translation of expressions to reverse-Polish form.  Procedure calls and block structure.  Static and dynamic scope.  Storage management for modern languages. Scanning: Regular expressions.  State machine implementation. Nondeterministic automata and translation to deterministic automata.  The use of a scanner generator such as LEX. Table-driven parsing techniques: LL(l) table-driven parsers. Shift-reduce parsers.  LR parsing.  The LR(0)  Characteristic Finite State Machine.  LR(l). SLR. LALR(l).  The use of a parser generator such as yacc. Code generation for register architectures.  Introduction to code optimisation techniques.","question":"What are the prerequisite modules for the language processors module?","answers":"{ \"text\": [ \"CE4703 Rationale and Purpose of the Module\" ], \"answer_start\": [ 205 ] }"},{"id":"114","title ":"LANGUAGE_PROCESSORS","context":"Module Code - Title: CE4717 - LANGUAGE PROCESSORS Prerequisite Modules: CE4703 Rationale and Purpose of the Module:\nTo introduce the theory of compiler design and show its application in a simple compiler. An important part of the module is the implementation of a compiler for a simple, Pascal-like, language. Syllabus: Compiler structure: Definition of terms.  Source, object and executable files.  Symbols, definition and resolution. Phases of a compiler and their functions. Single and multi-pass compilation.  Cross-compilation, interpreters and pseudo-machines. Grammars: Mathematical grammars for language definition.  BNF and EBNF notations.  Parse trees. Properties of grammars.  The Chomsky hierarchy.  Syntax diagrams.  Restrictions on grammars. Parsing: Top-down parsing.  Lookahead. Recursive descent.  LL(l) grammars.  First, follow and predict sets. Syntactic error detection and recovery for recursive descent parsers. Semantic processing: The symbol table. Handling semantic errors. Code generation for a simple stack machine: Translation of expressions to reverse-Polish form.  Procedure calls and block structure.  Static and dynamic scope.  Storage management for modern languages. Scanning: Regular expressions.  State machine implementation. Nondeterministic automata and translation to deterministic automata.  The use of a scanner generator such as LEX. Table-driven parsing techniques: LL(l) table-driven parsers. Shift-reduce parsers.  LR parsing.  The LR(0)  Characteristic Finite State Machine.  LR(l). SLR. LALR(l).  The use of a parser generator such as yacc. Code generation for register architectures.  Introduction to code optimisation techniques.","question":"What will I learn in the language processors module?","answers":"{ \"text\": [ \"code optimisation techniques\" ], \"answer_start\": [ 115 ] }"},{"id":"115","title ":"LANGUAGE_PROCESSORS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the structure, phases, major data structures and algorithms of a compiler. 2. Given a formal EBNF grammar for a computer language, construct a parser program for that language. 3. Given examples of syntactic structures, design appropriate formal grammar constructs describing them. 4. Analyse a grammar in terms of the LL(1), LR(0), SLR &LALR(1) criteria. 5. Create (by hand) scanning and parsing automata for simple grammars. 6. Use scanner and parser synthesis tools such as lex and yacc. 7. Construct a compiler for a simple computer language. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nTerry, P. (2005) Compiling with C# and Java, Pearson Appel, A.W. (2002) Modern Compiler Implementation in Java, Cambridge\nOther Texts: Aho, A.V., Lam, M.S., Sethi, R. & Ullman, J.D. (2007) Compilers: Principles, Techniques, & Tools, 2nd ed., Pearson\nParr, T. (2007) The Definitive ANTLR Reference, Pragmatic Bookshelf Cooper, K.D. & L. Torczon (2004) Engineering a Compiler, Morgan Kaufmann Grune, D., H.E. Bal, C.J.H. Jacobs & K.G. Langendoen (2001) Modern Compiler Design, Wiley Waite, W.M. & L.R. Carter (1993) An Introduction to Compiler Construction, Harper Collins Holub, A.I. (1990) Compiler Design in C, Prentice Hall Programmes Semester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"What will I be able to do in the language processors module?","answers":"{ \"text\": [ \"Compiler Design\" ], \"answer_start\": [ 158 ] }"},{"id":"116","title ":"LANGUAGE_PROCESSORS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the structure, phases, major data structures and algorithms of a compiler. 2. Given a formal EBNF grammar for a computer language, construct a parser program for that language. 3. Given examples of syntactic structures, design appropriate formal grammar constructs describing them. 4. Analyse a grammar in terms of the LL(1), LR(0), SLR &LALR(1) criteria. 5. Create (by hand) scanning and parsing automata for simple grammars. 6. Use scanner and parser synthesis tools such as lex and yacc. 7. Construct a compiler for a simple computer language. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nTerry, P. (2005) Compiling with C# and Java, Pearson Appel, A.W. (2002) Modern Compiler Implementation in Java, Cambridge\nOther Texts: Aho, A.V., Lam, M.S., Sethi, R. & Ullman, J.D. (2007) Compilers: Principles, Techniques, & Tools, 2nd ed., Pearson\nParr, T. (2007) The Definitive ANTLR Reference, Pragmatic Bookshelf Cooper, K.D. & L. Torczon (2004) Engineering a Compiler, Morgan Kaufmann Grune, D., H.E. Bal, C.J.H. Jacobs & K.G. Langendoen (2001) Modern Compiler Design, Wiley Waite, W.M. & L.R. Carter (1993) An Introduction to Compiler Construction, Harper Collins Holub, A.I. (1990) Compiler Design in C, Prentice Hall Programmes Semester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"What are the prime texts that I need for the language processors module?","answers":"{ \"text\": [ \"Terry, P. (2005) Compiling with C# and Java\" ], \"answer_start\": [ 1270 ] }"},{"id":"117","title ":"LANGUAGE_PROCESSORS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the structure, phases, major data structures and algorithms of a compiler. 2. Given a formal EBNF grammar for a computer language, construct a parser program for that language. 3. Given examples of syntactic structures, design appropriate formal grammar constructs describing them. 4. Analyse a grammar in terms of the LL(1), LR(0), SLR &LALR(1) criteria. 5. Create (by hand) scanning and parsing automata for simple grammars. 6. Use scanner and parser synthesis tools such as lex and yacc. 7. Construct a compiler for a simple computer language. Affective (Attitudes and Values) Psychomotor (Physical Skills) How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\r\nTerry, P. (2005) Compiling with C# and Java, Pearson Appel, A.W. (2002) Modern Compiler Implementation in Java, Cambridge\r\nOther Texts: Aho, A.V., Lam, M.S., Sethi, R. & Ullman, J.D. (2007) Compilers: Principles, Techniques, & Tools, 2nd ed., Pearson\r\nParr, T. (2007) The Definitive ANTLR Reference, Pragmatic Bookshelf Cooper, K.D. & L. Torczon (2004) Engineering a Compiler, Morgan Kaufmann Grune, D., H.E. Bal, C.J.H. Jacobs & K.G. Langendoen (2001) Modern Compiler Design, Wiley Waite, W.M. & L.R. Carter (1993) An Introduction to Compiler Construction, Harper Collins Holub, A.I. (1990) Compiler Design in C, Prentice Hall Programmes Semester(s) Module is Offered: Module Leader: Colin.Flanagan@ul.ie","question":"How can I contact the lecturer for the language processors module?","answers":"{ \"text\": [ \"Colin.Flanagan@ul.ie\" ], \"answer_start\": [ 1676 ] }"},{"id":"118","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Module Code - Title: CE4817 - DIGITAL SIGNAL PROCESSING 1 Prerequisite Modules: EE4816 Rationale and Purpose of the Module: This module provides practical coverage of the fundamentals of digital signal processing, with emphasis on the following key topics: the discrete Fourier transform, the z-transform and digital filter design. Syllabus: TRANSFORMS: Review of the Fourier transform, its properties and the more general Laplace transform. Sampling and Railings leading to the z-transform for discrete signals. The DFT and its relationship to these transforms. SYSTEMS: Difference equations and the z-transform. Recursive and non-recursive systems and their z-plane descriptions. Examples: averaging filter, integrator, differentiator. Important properties; linear phase systems, all pass systems. SIGNAL WINDOWING: Choice of windows for reduced spectral leakage. The DFT as a signal analyser. Windowing in the DFT context. Padding with zeros to reduce picket-fence effect. NON-RECURSIVE FILTERS: Design by windowing methods. Sample design. RECURSIVE FILTERS: Design based on analogue prototypes. Bi-linear mapping approach and Impulse-invariant approach, their areas of suitability. Case studies. FILTER TRANSFORMATION: Transformations for BP and HP filters. Analogue and digital approaches. NOISE: Overview of noise issues and the correlation method. RATE CONVERSION: Introduction to up-sampling and down-sampling.SIGMA-DELTA methods in A/D and D/A conversion.","question":"What is the code for the digital signal processing 1 module?","answers":"{ \"text\": [ \"CE4817\" ], \"answer_start\": [ 21 ] }"},{"id":"119","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Module Code - Title: CE4817 - DIGITAL SIGNAL PROCESSING 1 Prerequisite Modules: EE4816 Rationale and Purpose of the Module: This module provides practical coverage of the fundamentals of digital signal processing, with emphasis on the following key topics: the discrete Fourier transform, the z-transform and digital filter design. Syllabus: TRANSFORMS: Review of the Fourier transform, its properties and the more general Laplace transform. Sampling and Railings leading to the z-transform for discrete signals. The DFT and its relationship to these transforms. SYSTEMS: Difference equations and the z-transform. Recursive and non-recursive systems and their z-plane descriptions. Examples: averaging filter, integrator, differentiator. Important properties; linear phase systems, all pass systems. SIGNAL WINDOWING: Choice of windows for reduced spectral leakage. The DFT as a signal analyser. Windowing in the DFT context. Padding with zeros to reduce picket-fence effect. NON-RECURSIVE FILTERS: Design by windowing methods. Sample design. RECURSIVE FILTERS: Design based on analogue prototypes. Bi-linear mapping approach and Impulse-invariant approach, their areas of suitability. Case studies. FILTER TRANSFORMATION: Transformations for BP and HP filters. Analogue and digital approaches. NOISE: Overview of noise issues and the correlation method. RATE CONVERSION: Introduction to up-sampling and down-sampling.SIGMA-DELTA methods in A/D and D/A conversion.","question":"What are the prerequisite modules for the digital signal processing 1 module?","answers":"{ \"text\": [ \"EE4816 Rationale and Purpose of the Module\" ], \"answer_start\": [ 72 ] }"},{"id":"120","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Module Code - Title: CE4817 - DIGITAL SIGNAL PROCESSING 1 Prerequisite Modules: EE4816 Rationale and Purpose of the Module: This module provides practical coverage of the fundamentals of digital signal processing, with emphasis on the following key topics: the discrete Fourier transform, the z-transform and digital filter design. Syllabus: TRANSFORMS: Review of the Fourier transform, its properties and the more general Laplace transform. Sampling and Railings leading to the z-transform for discrete signals. The DFT and its relationship to these transforms. SYSTEMS: Difference equations and the z-transform. Recursive and non-recursive systems and their z-plane descriptions. Examples: averaging filter, integrator, differentiator. Important properties; linear phase systems, all pass systems. SIGNAL WINDOWING: Choice of windows for reduced spectral leakage. The DFT as a signal analyser. Windowing in the DFT context. Padding with zeros to reduce picket-fence effect. NON-RECURSIVE FILTERS: Design by windowing methods. Sample design. RECURSIVE FILTERS: Design based on analogue prototypes. Bi-linear mapping approach and Impulse-invariant approach, their areas of suitability. Case studies. FILTER TRANSFORMATION: Transformations for BP and HP filters. Analogue and digital approaches. NOISE: Overview of noise issues and the correlation method. RATE CONVERSION: Introduction to up-sampling and down-sampling.SIGMA-DELTA methods in A/D and D/A conversion.","question":"What is the purpose of the digital signal processing 1 module?","answers":"{ \"text\": [ \"provides practical coverage of the fundamentals\" ], \"answer_start\": [ 1651 ] }"},{"id":"121","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) *  Examine the various components of a typical DSP system and identify factors that influence their functionality, specifications and choice *  Demonstrate how digital signal and data are represented in time and frequency domains, and deal with related qunatisation issues *  Recognise, predict and quantify sources and levels of noise in DSP systems, and devise means to reduce noise effect *  Apply the FFT and a choice of tapered windows to monitor and analyse signals correctly while minimising errors due to leakage and with due compensation for tapered window properties *  Carry out various numerical computations related to implementation and analysis of key DSP operations, such as convolution and domain transformation *  Recognise how key DSP algorithms are implemented for real-time applications and evaluate the effects of qunatisation and finite-word length Affective (Attitudes and Values) Psychomotor (Physical Skills) *  Examine the behaviour of linear time-invariant systems as frequency selective-filters using convolution and FFT-based techniques *  Design and model FIR and IIR digital filters to meet a given frequency response specification using the Window and Biline How the Module will be Taught and what will be the Learning Experiences of the Students: The module is delivered via 2 lecture hours and 2 laboratory hours per week over 12 teaching weeks. Assessment is based 30% coursework and 70% final exam. Coursework comprises 3 lab-based assignments (20%) whereby students work in groups on a number of problems related to linear filtering of different types of signals, such as images and speech, and a mid-term test (10%). The main focus of the mid-tern test is on analysis and design problems and associated numerical computation. The lab assignments are designed to assess how the students select an approach, formulate an algorithm and implement it, using Matlab environment. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ifeachor, E. C. and Jervis, B. W (2002) Digital Signal Processing: A Practical Approach, 2/E, Prentice Hall, Essex, UK. Diniz, P. S. R., de Silva, E. A. B. and Netto, S. (2006) Digital Signal Processing: System Analysis and Design, Cambridge University Press, Cambridge, UK. Other Texts: Mitra, S. K. (2006) Digital Signal Processing: A Computer Based Approach, 3/E, McGraw-Hill, Boston, Massachusetts. McClellan, J. H., Schafer, R. W. and Yoder, M. A. (2003) Signal Processing First, Pearson Education - Prentice Hall, NJ. Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING\nSemester(s) Module is Offered: Autumn Module Leader: Brendan.Mullane@ul.ie","question":"What will I be able to do in the digital signal processing 1 module?","answers":"{ \"text\": [ \"Demonstrate how digital signal and data are represented in time and frequency domains\" ], \"answer_start\": [ 1363 ] }"},{"id":"122","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) *  Examine the various components of a typical DSP system and identify factors that influence their functionality, specifications and choice *  Demonstrate how digital signal and data are represented in time and frequency domains, and deal with related qunatisation issues *  Recognise, predict and quantify sources and levels of noise in DSP systems, and devise means to reduce noise effect *  Apply the FFT and a choice of tapered windows to monitor and analyse signals correctly while minimising errors due to leakage and with due compensation for tapered window properties *  Carry out various numerical computations related to implementation and analysis of key DSP operations, such as convolution and domain transformation *  Recognise how key DSP algorithms are implemented for real-time applications and evaluate the effects of qunatisation and finite-word length Affective (Attitudes and Values) Psychomotor (Physical Skills) *  Examine the behaviour of linear time-invariant systems as frequency selective-filters using convolution and FFT-based techniques *  Design and model FIR and IIR digital filters to meet a given frequency response specification using the Window and Biline How the Module will be Taught and what will be the Learning Experiences of the Students: The module is delivered via 2 lecture hours and 2 laboratory hours per week over 12 teaching weeks. Assessment is based 30% coursework and 70% final exam. Coursework comprises 3 lab-based assignments (20%) whereby students work in groups on a number of problems related to linear filtering of different types of signals, such as images and speech, and a mid-term test (10%). The main focus of the mid-tern test is on analysis and design problems and associated numerical computation. The lab assignments are designed to assess how the students select an approach, formulate an algorithm and implement it, using Matlab environment. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ifeachor, E. C. and Jervis, B. W (2002) Digital Signal Processing: A Practical Approach, 2/E, Prentice Hall, Essex, UK. Diniz, P. S. R., de Silva, E. A. B. and Netto, S. (2006) Digital Signal Processing: System Analysis and Design, Cambridge University Press, Cambridge, UK. Other Texts: Mitra, S. K. (2006) Digital Signal Processing: A Computer Based Approach, 3/E, McGraw-Hill, Boston, Massachusetts. McClellan, J. H., Schafer, R. W. and Yoder, M. A. (2003) Signal Processing First, Pearson Education - Prentice Hall, NJ. Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING\nSemester(s) Module is Offered: Autumn Module Leader: Brendan.Mullane@ul.ie","question":"How will the digital signal processing 1 module be taught and delivered?","answers":"{ \"text\": [ \"via 2 lecture hours and 2 laboratory hours per week\" ], \"answer_start\": [ 905 ] }"},{"id":"123","title ":"DIGITAL_SIGNAL_PROCESSING_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) *  Examine the various components of a typical DSP system and identify factors that influence their functionality, specifications and choice *  Demonstrate how digital signal and data are represented in time and frequency domains, and deal with related qunatisation issues *  Recognise, predict and quantify sources and levels of noise in DSP systems, and devise means to reduce noise effect *  Apply the FFT and a choice of tapered windows to monitor and analyse signals correctly while minimising errors due to leakage and with due compensation for tapered window properties *  Carry out various numerical computations related to implementation and analysis of key DSP operations, such as convolution and domain transformation *  Recognise how key DSP algorithms are implemented for real-time applications and evaluate the effects of qunatisation and finite-word length Affective (Attitudes and Values) Psychomotor (Physical Skills) *  Examine the behaviour of linear time-invariant systems as frequency selective-filters using convolution and FFT-based techniques *  Design and model FIR and IIR digital filters to meet a given frequency response specification using the Window and Biline How the Module will be Taught and what will be the Learning Experiences of the Students: The module is delivered via 2 lecture hours and 2 laboratory hours per week over 12 teaching weeks. Assessment is based 30% coursework and 70% final exam. Coursework comprises 3 lab-based assignments (20%) whereby students work in groups on a number of problems related to linear filtering of different types of signals, such as images and speech, and a mid-term test (10%). The main focus of the mid-tern test is on analysis and design problems and associated numerical computation. The lab assignments are designed to assess how the students select an approach, formulate an algorithm and implement it, using Matlab environment. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ifeachor, E. C. and Jervis, B. W (2002) Digital Signal Processing: A Practical Approach, 2/E, Prentice Hall, Essex, UK. Diniz, P. S. R., de Silva, E. A. B. and Netto, S. (2006) Digital Signal Processing: System Analysis and Design, Cambridge University Press, Cambridge, UK. Other Texts: Mitra, S. K. (2006) Digital Signal Processing: A Computer Based Approach, 3/E, McGraw-Hill, Boston, Massachusetts. McClellan, J. H., Schafer, R. W. and Yoder, M. A. (2003) Signal Processing First, Pearson Education - Prentice Hall, NJ. Programmes BEECENUFA - ELECTRONIC AND COMPUTER ENGINEERING\nSemester(s) Module is Offered: Autumn Module Leader: Brendan.Mullane@ul.ie","question":"How can I contact the lecturer for the digital signal processing 1 module?","answers":"{ \"text\": [ \"Brendan.Mullane@ul.ie\" ], \"answer_start\": [ 1591 ] }"},{"id":"124","title ":"INTRODUCTION_TO_VISION","context":"Module Code - Title: CE5001 - INTRODUCTION TO VISION Prerequisite Modules: Rationale and Purpose of the Module:\nThis module will introduce students to the principles of Machine & Computer Vision. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications.  Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\nPrinciple Component Analysis and Eigenfaces & Fisher faces. 4. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 5. Introduction to use of Deep Learning in Machine & Computer Vision.","question":"What is the code for the introduction to vision module?","answers":"{ \"text\": [ \"CE5001\" ], \"answer_start\": [ 21 ] }"},{"id":"125","title ":"INTRODUCTION_TO_VISION","context":"Module Code - Title: CE5001 - INTRODUCTION TO VISION Prerequisite Modules: Rationale and Purpose of the Module:\r\nThis module will introduce students to the principles of Machine & Computer Vision. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications.  Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\r\nPrinciple Component Analysis and Eigenfaces & Fisher faces. 4. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 5. Introduction to use of Deep Learning in Machine & Computer Vision.","question":"What is the purpose of the introduction to vision module?","answers":"{ \"text\": [ \"This module will introduce students to the principles of Machine & Computer Vision\" ], \"answer_start\": [ 80 ] }"},{"id":"126","title ":"INTRODUCTION_TO_VISION","context":"Module Code - Title: CE5001 - INTRODUCTION TO VISION Prerequisite Modules: Rationale and Purpose of the Module:\r\nThis module will introduce students to the principles of Machine & Computer Vision. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications.  Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\r\nPrinciple Component Analysis and Eigenfaces & Fisher faces. 4. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 5. Introduction to use of Deep Learning in Machine & Computer Vision.","question":"What will I learn in the introduction to vision module?","answers":"{ \"text\": [ \"linear image processing, feature detection and basic object detection\" ], \"answer_start\": [ 136 ] }"},{"id":"127","title ":"INTRODUCTION_TO_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Demonstrate an understanding of the reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Demonstrate an understanding of basic principles of machine learning and it's application to machine vision.  4. Apply sliding window based object detection algorithms to different tasks.  5. Be aware of the application of Deep learning to key problems in machine vision. 6. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Formulate approaches utilising computer vision techniques to industrial machine vision problems. 2. Contribute meaningfully to engineering team project development on machine vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D. A. Forsyth and J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition), Prentice Hall, R. Szeliski (2021) Computer Vision: Algorithms & Applications 2nd ed., Springer Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"How is the introduction to vision module taught?","answers":"{ \"text\": [ \"online pre-recorded video lectures and live interactive Q+A tutorials\" ], \"answer_start\": [ 246 ] }"},{"id":"128","title ":"INTRODUCTION_TO_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Demonstrate an understanding of the reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Demonstrate an understanding of basic principles of machine learning and it's application to machine vision.  4. Apply sliding window based object detection algorithms to different tasks.  5. Be aware of the application of Deep learning to key problems in machine vision. 6. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Formulate approaches utilising computer vision techniques to industrial machine vision problems. 2. Contribute meaningfully to engineering team project development on machine vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D. A. Forsyth and J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition), Prentice Hall, R. Szeliski (2021) Computer Vision: Algorithms & Applications 2nd ed., Springer Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"What book I need to read for the introduction to vision module?","answers":"{ \"text\": [ \"Computer Vision: A Modern Approach\" ], \"answer_start\": [ 1407 ] }"},{"id":"129","title ":"INTRODUCTION_TO_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Demonstrate an understanding of the reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Demonstrate an understanding of basic principles of machine learning and it's application to machine vision.  4. Apply sliding window based object detection algorithms to different tasks.  5. Be aware of the application of Deep learning to key problems in machine vision. 6. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Formulate approaches utilising computer vision techniques to industrial machine vision problems. 2. Contribute meaningfully to engineering team project development on machine vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D. A. Forsyth and J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition), Prentice Hall, R. Szeliski (2021) Computer Vision: Algorithms & Applications 2nd ed., Springer Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"How can I contact the lecturer for the introduction to vision module?","answers":"{ \"text\": [ \"eoin.grua@ul.ie\" ], \"answer_start\": [ 2728 ] }"},{"id":"130","title ":"GEOMETRIC_COMPUTER_VISION","context":"Module Code - Title: CE5002 - GEOMETRIC COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module:\nHumans perceive a lot of information about the three-dimensional structure in their environment by moving around it. When the observer moves, objects around them move different amounts depending on their distance from the observer. This is known as motion parallax, and from this depth information can be used to generate an accurate 3D representation of the world around them.\nIn computer vision, we replicate this through geometric processing. Geometry is used to describe the structure and shape of the environment in which a camera is located. Geometric computer vision is, therefore, the process of determining the structure of the environment, and the position and orientation of the camera, and how the camera moves, with respect to the environment, through the analysis of camera image streams. It is commonly used in mobile robotics, vehicle autonomy and augmented reality. The module builds upon the machine vision modules already taught in the ECE department and complements the modules that teach semantic reasoning through machine learning. This module will be offered on the newly proposed part-time PPD in Computer Vision Systems (ID: 1681). In future, the module will be offered on a Part MEng in Intelligent Visual System and a Part MEng in Cognitive Robotics.Syllabus: Recap of Linear Algebra: Projective Geometry and Homogenous Coordinates Feature/point Correspondences Camera models and image formation Applications of Multiple View Geometry - Automotive, Drone Flight, etc. Epipolar Geometry and the Essential Matrix Visual Odometry - Estimation and Properties of the Essential Matrix, 8-point algorithm, RANSAC 3D Reconstruction of the scene - Midpoint, Direct Linear, \"Optimal\" The uncalibrated camera case: Fundamental Matrix - generalization of the essential matrix, Euclidian/Metric/Affine/Projective reconstruction Visual Simultaneous Localisation and Mapping Introduction to optimisation algorithms, e.g. Levenberg Marquardt Bundle Adjustment - multiple rays, multiple camera positions, builds from multiple view geometry Windowed bundle adjustment, global bundle adjustment Loop Closure - Bag of Words Stereo Vision","question":"What is the code for the geometric computer vision module?","answers":"{ \"text\": [ \"CE5002\" ], \"answer_start\": [ 21 ] }"},{"id":"131","title ":"GEOMETRIC_COMPUTER_VISION","context":"Module Code - Title: CE5002 - GEOMETRIC COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module:\nHumans perceive a lot of information about the three-dimensional structure in their environment by moving around it. When the observer moves, objects around them move different amounts depending on their distance from the observer. This is known as motion parallax, and from this depth information can be used to generate an accurate 3D representation of the world around them.\nIn computer vision, we replicate this through geometric processing. Geometry is used to describe the structure and shape of the environment in which a camera is located. Geometric computer vision is, therefore, the process of determining the structure of the environment, and the position and orientation of the camera, and how the camera moves, with respect to the environment, through the analysis of camera image streams. It is commonly used in mobile robotics, vehicle autonomy and augmented reality. The module builds upon the machine vision modules already taught in the ECE department and complements the modules that teach semantic reasoning through machine learning. This module will be offered on the newly proposed part-time PPD in Computer Vision Systems (ID: 1681). In future, the module will be offered on a Part MEng in Intelligent Visual System and a Part MEng in Cognitive Robotics.Syllabus: Recap of Linear Algebra: Projective Geometry and Homogenous Coordinates Feature/point Correspondences Camera models and image formation Applications of Multiple View Geometry - Automotive, Drone Flight, etc. Epipolar Geometry and the Essential Matrix Visual Odometry - Estimation and Properties of the Essential Matrix, 8-point algorithm, RANSAC 3D Reconstruction of the scene - Midpoint, Direct Linear, \"Optimal\" The uncalibrated camera case: Fundamental Matrix - generalization of the essential matrix, Euclidian/Metric/Affine/Projective reconstruction Visual Simultaneous Localisation and Mapping Introduction to optimisation algorithms, e.g. Levenberg Marquardt Bundle Adjustment - multiple rays, multiple camera positions, builds from multiple view geometry Windowed bundle adjustment, global bundle adjustment Loop Closure - Bag of Words Stereo Vision","question":"What is the purpose of the geometric computer vision module?","answers":"{ \"text\": [ \"determining the structure of the environment\" ], \"answer_start\": [ 113 ] }"},{"id":"132","title ":"GEOMETRIC_COMPUTER_VISION","context":"Module Code - Title: CE5002 - GEOMETRIC COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module:\nHumans perceive a lot of information about the three-dimensional structure in their environment by moving around it. When the observer moves, objects around them move different amounts depending on their distance from the observer. This is known as motion parallax, and from this depth information can be used to generate an accurate 3D representation of the world around them.\nIn computer vision, we replicate this through geometric processing. Geometry is used to describe the structure and shape of the environment in which a camera is located. Geometric computer vision is, therefore, the process of determining the structure of the environment, and the position and orientation of the camera, and how the camera moves, with respect to the environment, through the analysis of camera image streams. It is commonly used in mobile robotics, vehicle autonomy and augmented reality. The module builds upon the machine vision modules already taught in the ECE department and complements the modules that teach semantic reasoning through machine learning. This module will be offered on the newly proposed part-time PPD in Computer Vision Systems (ID: 1681). In future, the module will be offered on a Part MEng in Intelligent Visual System and a Part MEng in Cognitive Robotics.Syllabus: Recap of Linear Algebra: Projective Geometry and Homogenous Coordinates Feature/point Correspondences Camera models and image formation Applications of Multiple View Geometry - Automotive, Drone Flight, etc. Epipolar Geometry and the Essential Matrix Visual Odometry - Estimation and Properties of the Essential Matrix, 8-point algorithm, RANSAC 3D Reconstruction of the scene - Midpoint, Direct Linear, \"Optimal\" The uncalibrated camera case: Fundamental Matrix - generalization of the essential matrix, Euclidian/Metric/Affine/Projective reconstruction Visual Simultaneous Localisation and Mapping Introduction to optimisation algorithms, e.g. Levenberg Marquardt Bundle Adjustment - multiple rays, multiple camera positions, builds from multiple view geometry Windowed bundle adjustment, global bundle adjustment Loop Closure - Bag of Words Stereo Vision","question":"What will I learn in the geometric computer vision module?","answers":"{ \"text\": [ \"semantic reasoning\" ], \"answer_start\": [ 216 ] }"},{"id":"133","title ":"GEOMETRIC_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of the fundamentals of camera projections and multiple view geometry 2. Demonstrate an understanding of visual simultaneous localization and mapping in applications such as mobile autonomous robotics 3. Critically evaluate different approaches in geometric computer vision for the task at hand 4. Demonstrate an understanding of the main areas in which geometric computer vision plays an important role Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Differentiate from various design techniques that could be used and be able to justify an appropriate technique from geometric computer vision  2. Practice an objective approach to the selection of geometric computer vision methodologies to solve specific problems. 3. Effect a design of a geometric computer vision system to solve problems in robotics and vehicle autonomy 4. Contribute meaningfully to an engineering team project development on geometric computer vision systems Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nRichard Szeliski  (2011) Computer Vision: Algorithms and Applications, Springer Jana Ko&scaron;ecká, Yi Ma, Stefano Soatto, S. Shankar Sastry  (2003) An Invitation to 3D Vision, Springer Other Texts: Richard Hartley, Andrew Zisserman  (2003) Multiple View Geometry in Computer Vision, Cambridge Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"What will I be able to do in the geometric computer vision module?","answers":"{ \"text\": [ \"Demonstrate an understanding of the fundamentals of camera projections and multiple view geometry\" ], \"answer_start\": [ 1359 ] }"},{"id":"134","title ":"GEOMETRIC_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of the fundamentals of camera projections and multiple view geometry 2. Demonstrate an understanding of visual simultaneous localization and mapping in applications such as mobile autonomous robotics 3. Critically evaluate different approaches in geometric computer vision for the task at hand 4. Demonstrate an understanding of the main areas in which geometric computer vision plays an important role Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Differentiate from various design techniques that could be used and be able to justify an appropriate technique from geometric computer vision  2. Practice an objective approach to the selection of geometric computer vision methodologies to solve specific problems. 3. Effect a design of a geometric computer vision system to solve problems in robotics and vehicle autonomy 4. Contribute meaningfully to an engineering team project development on geometric computer vision systems Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nRichard Szeliski  (2011) Computer Vision: Algorithms and Applications, Springer Jana Ko&scaron;ecká, Yi Ma, Stefano Soatto, S. Shankar Sastry  (2003) An Invitation to 3D Vision, Springer Other Texts: Richard Hartley, Andrew Zisserman  (2003) Multiple View Geometry in Computer Vision, Cambridge Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"What book I need for the geometric computer vision module?","answers":"{ \"text\": [ \"An Invitation to 3D Vision\" ], \"answer_start\": [ 1647 ] }"},{"id":"135","title ":"GEOMETRIC_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of the fundamentals of camera projections and multiple view geometry 2. Demonstrate an understanding of visual simultaneous localization and mapping in applications such as mobile autonomous robotics 3. Critically evaluate different approaches in geometric computer vision for the task at hand 4. Demonstrate an understanding of the main areas in which geometric computer vision plays an important role Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Differentiate from various design techniques that could be used and be able to justify an appropriate technique from geometric computer vision  2. Practice an objective approach to the selection of geometric computer vision methodologies to solve specific problems. 3. Effect a design of a geometric computer vision system to solve problems in robotics and vehicle autonomy 4. Contribute meaningfully to an engineering team project development on geometric computer vision systems Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nRichard Szeliski  (2011) Computer Vision: Algorithms and Applications, Springer Jana Ko&scaron;ecká, Yi Ma, Stefano Soatto, S. Shankar Sastry  (2003) An Invitation to 3D Vision, Springer Other Texts: Richard Hartley, Andrew Zisserman  (2003) Multiple View Geometry in Computer Vision, Cambridge Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"How can I contact the lecturer for the geometric computer vision module?","answers":"{ \"text\": [ \"ciaran.eising@ul.ie\" ], \"answer_start\": [ 1869 ] }"},{"id":"136","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Module Code - Title: CE5011 - MACHINE VISION & IMAGE PROCESSING Prerequisite Modules: Rationale and Purpose of the Module: This module will introduce students to the principles of Machine Vision & Image Processing. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. This module acts as a precursor to advanced vision modules which require a good understanding of these key principles. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications. Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\nPrinciple Component Analysis and Eigenfaces & Fisher faces. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 4. Introduction to use of Deep Learning in Machine & Computer Vision","question":"What is the code for the machine vision and image processing module?","answers":"{ \"text\": [ \"CE5011\" ], \"answer_start\": [ 21 ] }"},{"id":"137","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Module Code - Title: CE5011 - MACHINE VISION & IMAGE PROCESSING Prerequisite Modules: Rationale and Purpose of the Module: This module will introduce students to the principles of Machine Vision & Image Processing. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. This module acts as a precursor to advanced vision modules which require a good understanding of these key principles. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications. Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\nPrinciple Component Analysis and Eigenfaces & Fisher faces. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 4. Introduction to use of Deep Learning in Machine & Computer Vision","question":"What is the aim of the machine vision and image processing module?","answers":"{ \"text\": [ \"introduce students to the principles\" ], \"answer_start\": [ 719 ] }"},{"id":"138","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Module Code - Title: CE5011 - MACHINE VISION & IMAGE PROCESSING Prerequisite Modules: Rationale and Purpose of the Module: This module will introduce students to the principles of Machine Vision & Image Processing. Key topics such as linear image processing, feature detection and basic object detection are introduced. Practical examples of these techniques are included in the laboratories for this module to increase student engagement with this material. This module acts as a precursor to advanced vision modules which require a good understanding of these key principles. Syllabus: 1. Introduction to Machine/Computer Vision. Image formation, camera basics, computer representation of images. Linear Image processing, morphology operations & basic edge detection. Canny Edge Detection and Hough Transform. Clustering and Image Segmentation (K-means, Watershed & Mean shift Algorithms). Case studies of Automated Inspection with Machine Vision. 2. Feature Detection, Descriptors and applications. Corner Detection (Harris Algorithm) Laplacian of Gaussian and blob detectors. Feature Descriptors (SIFT & binary descriptors) Feature Matching with Descriptors. 3. Basics of Machine Learning for vision. Machine Learning Introduction (Types of Classifiers SVM, CNN)\nPrinciple Component Analysis and Eigenfaces & Fisher faces. Classical Methods of Object Detection. Sliding window based Viola Jones & Histogram of Orientated Gradients algorithms. Bag of Features for image classification and retrieval. 4. Introduction to use of Deep Learning in Machine & Computer Vision","question":"What will I learn in the machine vision and image processing module?","answers":"{ \"text\": [ \"linear image processing, feature detection and basic object detection\" ], \"answer_start\": [ 1124 ] }"},{"id":"139","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Understand reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Understand basic principles of machine learning and its application to machine vision. 4. Apply sliding window based object detection algorithms to different tasks. 5. Be aware of the application of Deep learning to key problems in machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Determine how to apply computer vision techniques to a machine vision problem. 2. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a online learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D.A. Forsyth, J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition),, Prentice Hall R. Szeliski (2010) Computer Vision: Algorithms & Applications 2nd ed., https://szeliski.org/Book/ Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"What will I be able to do in the machine vision and image processing module?","answers":"{ \"text\": [ \"Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms\" ], \"answer_start\": [ 172 ] }"},{"id":"140","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Understand reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Understand basic principles of machine learning and its application to machine vision. 4. Apply sliding window based object detection algorithms to different tasks. 5. Be aware of the application of Deep learning to key problems in machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Determine how to apply computer vision techniques to a machine vision problem. 2. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a online learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D.A. Forsyth, J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition),, Prentice Hall R. Szeliski (2010) Computer Vision: Algorithms & Applications 2nd ed., https://szeliski.org/Book/ Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"What book I need for the machine vision and image processing module?","answers":"{ \"text\": [ \"Computer Vision: Algorithms & Applications\" ], \"answer_start\": [ 1811 ] }"},{"id":"141","title ":"MACHINE_VISION_&_IMAGE_PROCESSING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of basic image processing, morphology operations and edge detection algorithms. 2. Understand reasons for feature detection, basic detector algorithms and the application of these detectors. 3. Understand basic principles of machine learning and its application to machine vision. 4. Apply sliding window based object detection algorithms to different tasks. 5. Be aware of the application of Deep learning to key problems in machine vision. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Determine how to apply computer vision techniques to a machine vision problem. 2. Be able to effectively use python packages (OpenCV and SKLearn) for machine vision. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a online learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in in their own time with online moderator support. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: D.A. Forsyth, J. Ponce (2011) Computer Vision: A Modern Approach (2nd Edition),, Prentice Hall R. Szeliski (2010) Computer Vision: Algorithms & Applications 2nd ed., https://szeliski.org/Book/ Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Module Leader: eoin.grua@ul.ie","question":"How can I contact the lecturer for the machine vision and image processing module?","answers":"{ \"text\": [ \"eoin.grua@ul.ie\" ], \"answer_start\": [ 2020 ] }"},{"id":"142","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Module Code - Title: CE5012 - INTELLIGENT VISUAL COMPUTING & APPLICATIONS Prerequisite Modules: Rationale and Purpose of the Module: This module will focus on the use of state-of-the art Deep Learning techniques in specific Machine/Computer vision applications. This model follows on from previous Machine Vision and Geometric Computer Vision modules where students have previously studied traditional machine/computer vision methods and have also been introduced to the standard deep learning vision applications (classification, object detection and semantic segmentation). This model enables students to obtain broader understanding of practical applications of deep learning techniques in vision, through a series of lectures, student engagement activities and completion of coding tasks.  Syllabus: Section 1: State of the art computer vision: Facial Detection & Deep Metric Learning approach to Facial Recognition. Generative models for vision. (Image cleaning/reconstruction, synthetic data generation.)Capsule & Transformer networks. Section 2: Application of Reinforcement Learning to Vision. Use of Reinforcement learning in object detection & grasping. Future directions of Deep Reinforcement Learning in Vision & Sensing. Section 3: 3D Visual Processing. Depth Estimation and Visual Odometry with Deep Learning. Deep learning for 3D classification (Point clouds). Visual Simultaneous Localisation and Mapping.","question":"What is the code for the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"CE5012\" ], \"answer_start\": [ 21 ] }"},{"id":"143","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Module Code - Title: CE5012 - INTELLIGENT VISUAL COMPUTING & APPLICATIONS Prerequisite Modules: Rationale and Purpose of the Module: This module will focus on the use of state-of-the art Deep Learning techniques in specific Machine/Computer vision applications. This model follows on from previous Machine Vision and Geometric Computer Vision modules where students have previously studied traditional machine/computer vision methods and have also been introduced to the standard deep learning vision applications (classification, object detection and semantic segmentation). This model enables students to obtain broader understanding of practical applications of deep learning techniques in vision, through a series of lectures, student engagement activities and completion of coding tasks.  Syllabus: Section 1: State of the art computer vision: Facial Detection & Deep Metric Learning approach to Facial Recognition. Generative models for vision. (Image cleaning/reconstruction, synthetic data generation.)Capsule & Transformer networks. Section 2: Application of Reinforcement Learning to Vision. Use of Reinforcement learning in object detection & grasping. Future directions of Deep Reinforcement Learning in Vision & Sensing. Section 3: 3D Visual Processing. Depth Estimation and Visual Odometry with Deep Learning. Deep learning for 3D classification (Point clouds). Visual Simultaneous Localisation and Mapping.","question":"What is the aim of the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"use of state-of-the art Deep Learning techniques\" ], \"answer_start\": [ 140 ] }"},{"id":"144","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Module Code - Title: CE5012 - INTELLIGENT VISUAL COMPUTING & APPLICATIONS Prerequisite Modules: Rationale and Purpose of the Module: This module will focus on the use of state-of-the art Deep Learning techniques in specific Machine/Computer vision applications. This model follows on from previous Machine Vision and Geometric Computer Vision modules where students have previously studied traditional machine/computer vision methods and have also been introduced to the standard deep learning vision applications (classification, object detection and semantic segmentation). This model enables students to obtain broader understanding of practical applications of deep learning techniques in vision, through a series of lectures, student engagement activities and completion of coding tasks.  Syllabus: Section 1: State of the art computer vision: Facial Detection & Deep Metric Learning approach to Facial Recognition. Generative models for vision. (Image cleaning/reconstruction, synthetic data generation.)Capsule & Transformer networks. Section 2: Application of Reinforcement Learning to Vision. Use of Reinforcement learning in object detection & grasping. Future directions of Deep Reinforcement Learning in Vision & Sensing. Section 3: 3D Visual Processing. Depth Estimation and Visual Odometry with Deep Learning. Deep learning for 3D classification (Point clouds). Visual Simultaneous Localisation and Mapping.","question":"What will I learn in the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"Deep Learning techniques\" ], \"answer_start\": [ 234 ] }"},{"id":"145","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of state of the art techniques in key computer vision tasks, such as Facial detection & recognition. 2. Demonstrate an understanding of the principles of reinforcement learning and its application to machine vision tasks. 3. Demonstrate an understanding of the use of deep learning in 3D vision processing and applications.  4. Be able to effectively code high level deep learning algorithms for vision applications using Tensorflow. 5. Determine if a Deep learning solution can be appropriately applied to a machine vision problem. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Contribute meaningfully to engineering team project development with Deep Learning based Vision Systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support.\nResearch Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: R. Sutton and A. Barto (2018) Reinforcement Learning: An Introduction (second edition), MIT Press Russell, Stuart J., and Peter Norvig (2016) Artificial intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader:\nTony.Scanlan@ul.ie","question":"What will I be able to do in the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"Demonstrate an understanding of the use of deep learning\" ], \"answer_start\": [ 172 ] }"},{"id":"146","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of state of the art techniques in key computer vision tasks, such as Facial detection & recognition. 2. Demonstrate an understanding of the principles of reinforcement learning and its application to machine vision tasks. 3. Demonstrate an understanding of the use of deep learning in 3D vision processing and applications.  4. Be able to effectively code high level deep learning algorithms for vision applications using Tensorflow. 5. Determine if a Deep learning solution can be appropriately applied to a machine vision problem. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Contribute meaningfully to engineering team project development with Deep Learning based Vision Systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support.\nResearch Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: R. Sutton and A. Barto (2018) Reinforcement Learning: An Introduction (second edition), MIT Press Russell, Stuart J., and Peter Norvig (2016) Artificial intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader:\nTony.Scanlan@ul.ie","question":"What book do I need for the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"Reinforcement Learning: An Introduction\" ], \"answer_start\": [ 1543 ] }"},{"id":"147","title ":"INTELLIGENT_VISUAL_COMPUTING_& _APPLICATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Demonstrate an understanding of state of the art techniques in key computer vision tasks, such as Facial detection & recognition. 2. Demonstrate an understanding of the principles of reinforcement learning and its application to machine vision tasks. 3. Demonstrate an understanding of the use of deep learning in 3D vision processing and applications.  4. Be able to effectively code high level deep learning algorithms for vision applications using Tensorflow. 5. Determine if a Deep learning solution can be appropriately applied to a machine vision problem. Affective (Attitudes and Values)\nOn successful completion of this module, students will be able to: 1. Contribute meaningfully to engineering team project development with Deep Learning based Vision Systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered to part-time students in a completely online learning format, with online pre-recorded video lectures and live interactive Q+A tutorials. The students also complete a series of coding exercises in their own time with online moderator support.\nResearch Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: R. Sutton and A. Barto (2018) Reinforcement Learning: An Introduction (second edition), MIT Press Russell, Stuart J., and Peter Norvig (2016) Artificial intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader:\nTony.Scanlan@ul.ie","question":"How do I contact the lecturer for the intelligent visual computing and applications module?","answers":"{ \"text\": [ \"Tony.Scanlan@ul.ie\" ], \"answer_start\": [ 1735 ] }"},{"id":"148","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Module Code - Title: CE5021 - DEEP LEARNING FOR COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module: Deep learning has become the dominant approach to designing solutions for many common computer vision tasks. In this module the application of deep learning to the key computer vision tasks of image classification, object detection, semantic segmentation and facial recognition is discussed in detail. Fundamental concepts in the design and structure of deep neural networks will also be discussed, so students gain a full understanding of how to design and build networks for their own applications. Syllabus: Introduction to Deep Learning   Convolution Neural Networks (Padding, Pooling, Receptive Field, Convolution with multiple kernels)  Image Classification with Deep CNNs (AlexNet, VGG, GoogLeNet)   Advanced Networks for Image Classification (ResNets, SE-Net, DenseNet)  Training Deep Networks with Keras/Tensorflow/Pytorch Visualising Neural Networks  Transfer Learning & Applications Region Proposals Networks for Object detection (RCNN & Derivatives) Single Stage Object detection (Yolo, SSD) Semantic Segmentation (Full Convolutional Networks, Transpose Convolution, DeepLab) Introduction to Facial Recognition  Metric learning for facial recognition with DNNs. ","question":"What is the code for the deep learning for computer vision module?","answers":"{ \"text\": [ \"CE5021\" ], \"answer_start\": [ 21 ] }"},{"id":"149","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Module Code - Title: CE5021 - DEEP LEARNING FOR COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module: Deep learning has become the dominant approach to designing solutions for many common computer vision tasks. In this module the application of deep learning to the key computer vision tasks of image classification, object detection, semantic segmentation and facial recognition is discussed in detail. Fundamental concepts in the design and structure of deep neural networks will also be discussed, so students gain a full understanding of how to design and build networks for their own applications. Syllabus: Introduction to Deep Learning   Convolution Neural Networks (Padding, Pooling, Receptive Field, Convolution with multiple kernels)  Image Classification with Deep CNNs (AlexNet, VGG, GoogLeNet)   Advanced Networks for Image Classification (ResNets, SE-Net, DenseNet)  Training Deep Networks with Keras/Tensorflow/Pytorch Visualising Neural Networks  Transfer Learning & Applications Region Proposals Networks for Object detection (RCNN & Derivatives) Single Stage Object detection (Yolo, SSD) Semantic Segmentation (Full Convolutional Networks, Transpose Convolution, DeepLab) Introduction to Facial Recognition  Metric learning for facial recognition with DNNs. ","question":"What is the aim of the deep learning for computer vision module?","answers":"{ \"text\": [ \"designing solutions\" ], \"answer_start\": [ 163 ] }"},{"id":"150","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Module Code - Title: CE5021 - DEEP LEARNING FOR COMPUTER VISION Prerequisite Modules: Rationale and Purpose of the Module: Deep learning has become the dominant approach to designing solutions for many common computer vision tasks. In this module the application of deep learning to the key computer vision tasks of image classification, object detection, semantic segmentation and facial recognition is discussed in detail. Fundamental concepts in the design and structure of deep neural networks will also be discussed, so students gain a full understanding of how to design and build networks for their own applications. Syllabus: Introduction to Deep Learning   Convolution Neural Networks (Padding, Pooling, Receptive Field, Convolution with multiple kernels)  Image Classification with Deep CNNs (AlexNet, VGG, GoogLeNet)   Advanced Networks for Image Classification (ResNets, SE-Net, DenseNet)  Training Deep Networks with Keras/Tensorflow/Pytorch Visualising Neural Networks  Transfer Learning & Applications Region Proposals Networks for Object detection (RCNN & Derivatives) Single Stage Object detection (Yolo, SSD) Semantic Segmentation (Full Convolutional Networks, Transpose Convolution, DeepLab) Introduction to Facial Recognition  Metric learning for facial recognition with DNNs. ","question":"What will I learn in the deep learning for computer vision module?","answers":"{ \"text\": [ \"image classification, object detection, semantic segmentation and facial recognition\" ], \"answer_start\": [ 187 ] }"},{"id":"151","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Demonstrate an understanding of a deep learning approach compared to classical approaches to image classification and object detection.  Demonstrate an understanding of recent advances in neural networks for image classification, object detection, semantic segmentation, and other tasks  Demonstrate an understanding of the application of transfer learning to developing deep learning based systems for object detection, semantic segmentation and facial recognition. Demonstrate an ability to design and implement neural networks for computer vision tasks using the Tensorflow Keras or Pytorch APIs. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given a computer vision problem, identify and defend an appropriate technique to tackle it. Contribute meaningfully to an engineering team project development on deep learning based computer vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in an online and/or blended learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in a supervised lab setting (Full time cohort) or in their own time with online moderator support (Part Time cohort). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Russell, Stuart J. and P. Norvig (2016) Artificial Intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Spring Module Leader: Tony.Scanlan@ul.ie","question":"What will I be able to do in the deep learning for computer vision module?","answers":"{ \"text\": [ \"Demonstrate an understanding of a deep learning approach\" ], \"answer_start\": [ 426 ] }"},{"id":"152","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Demonstrate an understanding of a deep learning approach compared to classical approaches to image classification and object detection.  Demonstrate an understanding of recent advances in neural networks for image classification, object detection, semantic segmentation, and other tasks  Demonstrate an understanding of the application of transfer learning to developing deep learning based systems for object detection, semantic segmentation and facial recognition. Demonstrate an ability to design and implement neural networks for computer vision tasks using the Tensorflow Keras or Pytorch APIs. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given a computer vision problem, identify and defend an appropriate technique to tackle it. Contribute meaningfully to an engineering team project development on deep learning based computer vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in an online and/or blended learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in a supervised lab setting (Full time cohort) or in their own time with online moderator support (Part Time cohort). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Russell, Stuart J. and P. Norvig (2016) Artificial Intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Spring Module Leader: Tony.Scanlan@ul.ie","question":"When does the deep learning for computer vision module take place?","answers":"{ \"text\": [ \"Autumn Spring\" ], \"answer_start\": [ 1512 ] }"},{"id":"153","title ":"DEEP_LEARNING_FOR_COMPUTER_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Demonstrate an understanding of a deep learning approach compared to classical approaches to image classification and object detection.  Demonstrate an understanding of recent advances in neural networks for image classification, object detection, semantic segmentation, and other tasks  Demonstrate an understanding of the application of transfer learning to developing deep learning based systems for object detection, semantic segmentation and facial recognition. Demonstrate an ability to design and implement neural networks for computer vision tasks using the Tensorflow Keras or Pytorch APIs. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Given a computer vision problem, identify and defend an appropriate technique to tackle it. Contribute meaningfully to an engineering team project development on deep learning based computer vision systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: n/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in an online and/or blended learning format, with online pre-recorded video lectures and interactive Q+A tutorials. The students will also complete a series of coding exercises either in a supervised lab setting (Full time cohort) or in their own time with online moderator support (Part Time cohort). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Russell, Stuart J. and P. Norvig (2016) Artificial Intelligence: a modern approach, Pearson Education Limited, 2016 Other Texts: Programmes PDCVSYTPA - Computer Vision Systems Semester(s) Module is Offered: Autumn Spring Module Leader: Tony.Scanlan@ul.ie","question":"How can I contact the lecturer for the deep learning for computer vision module?","answers":"{ \"text\": [ \"Tony.Scanlan@ul.ie\" ], \"answer_start\": [ 1777 ] }"},{"id":"154","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Module Code - Title: CE5022 - LOG FILES AND EVENT ANALYSIS Prerequisite Modules: Rationale and Purpose of the Module: Log files contain valuable information for infrastructure management as most malicious exploits and intrusions leave their fingerprints all over log files and system performance issues can be identified from analyzing specific log data. In this module, the learner will evaluate log files and learn tools to extract associated valuable data for detecting cyber threats and system performance issues. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Log Files What are log files and what data do they contain? Types of log files. What type of information regarding the wellbeing and efficiency of the system do they contain? Log data transmission and collection. What collects log data (OS, applications, etc.) Extracting diagnostic data and capabilities from log data. Linux Log files and diagnostic data (grep), Application log files, Windows log files (event viewer), MAC log files (Console), Android log files (Android Studio), firewall logs (e.g. Windows Defender Firewall with Advanced Security). Reading log files using text editors and advanced read log software. Log formats. Log Security (access, data recording, configuration, etc.) Log File Access and Analysis Log File Access and Analysis Log file analysis - why is it important? Log file analysis use cases. Log file analysis best practices and tools- prioritization, filtering, criticality determination, the need for context and unclear messages. How do log files specify changes that have occurred? How are incident causes extracted from log files? How to log data points out red flags in systems: unusual behaviour, unauthorized access, extreme traffic, suspicious changes, etc. How to extract useful information and how to search log data by implementing regex and grep tools. Detect corruption of log files.Log Management Systems\nWhat is a log management system and how does it fit into the overall security architecture (Defense in Depth). Parameters of a complete log management system: Collection, Storage, Search, Correlation and Output. Why is log management important? Why does it make log file analysis more feasible? Management of log file data in embedded/resource constrained devices. Impact of flash based systems on ability to log \"everything\" continuously.SIEM What are system information and event management (SIEM) tools? How SIEM software operates to collect log and event data generated by different applications, security devices and host systems and collates it together into a single centralized platform. How SIEMs are used with YARA and Sigma rules to identify indicators of compromise to manage security for a large or diverse IT infrastructure. SIEM real-time threat analysis that provides real-time visibility across an organizations information security systems. Investigating an Incident - Developing the correct Mindset Analyzing how log management and analysis plays a crucial role during a security incident and identifying system performance issues. Determine normal behaviour (daily basis, by the hour, monthly, longer) and triggers. How Log files (and associated data) are leveraged for fighting cybercrime. Identify the logs where malicious exploits and intrusions have left their fingerprints. How to develop a log file analysis mindset for cybersecurity and system performance.  ","question":"What is the code for the log files and event analysis module?","answers":"{ \"text\": [ \"CE5022\" ], \"answer_start\": [ 21 ] }"},{"id":"155","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Module Code - Title: CE5022 - LOG FILES AND EVENT ANALYSIS Prerequisite Modules: Rationale and Purpose of the Module: Log files contain valuable information for infrastructure management as most malicious exploits and intrusions leave their fingerprints all over log files and system performance issues can be identified from analyzing specific log data. In this module, the learner will evaluate log files and learn tools to extract associated valuable data for detecting cyber threats and system performance issues. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Log Files What are log files and what data do they contain? Types of log files. What type of information regarding the wellbeing and efficiency of the system do they contain? Log data transmission and collection. What collects log data (OS, applications, etc.) Extracting diagnostic data and capabilities from log data. Linux Log files and diagnostic data (grep), Application log files, Windows log files (event viewer), MAC log files (Console), Android log files (Android Studio), firewall logs (e.g. Windows Defender Firewall with Advanced Security). Reading log files using text editors and advanced read log software. Log formats. Log Security (access, data recording, configuration, etc.) Log File Access and Analysis Log File Access and Analysis Log file analysis - why is it important? Log file analysis use cases. Log file analysis best practices and tools- prioritization, filtering, criticality determination, the need for context and unclear messages. How do log files specify changes that have occurred? How are incident causes extracted from log files? How to log data points out red flags in systems: unusual behaviour, unauthorized access, extreme traffic, suspicious changes, etc. How to extract useful information and how to search log data by implementing regex and grep tools. Detect corruption of log files.Log Management Systems\nWhat is a log management system and how does it fit into the overall security architecture (Defense in Depth). Parameters of a complete log management system: Collection, Storage, Search, Correlation and Output. Why is log management important? Why does it make log file analysis more feasible? Management of log file data in embedded/resource constrained devices. Impact of flash based systems on ability to log \"everything\" continuously.SIEM What are system information and event management (SIEM) tools? How SIEM software operates to collect log and event data generated by different applications, security devices and host systems and collates it together into a single centralized platform. How SIEMs are used with YARA and Sigma rules to identify indicators of compromise to manage security for a large or diverse IT infrastructure. SIEM real-time threat analysis that provides real-time visibility across an organizations information security systems. Investigating an Incident - Developing the correct Mindset Analyzing how log management and analysis plays a crucial role during a security incident and identifying system performance issues. Determine normal behaviour (daily basis, by the hour, monthly, longer) and triggers. How Log files (and associated data) are leveraged for fighting cybercrime. Identify the logs where malicious exploits and intrusions have left their fingerprints. How to develop a log file analysis mindset for cybersecurity and system performance.  ","question":"What is the aim of the log files and event analysis module?","answers":"{ \"text\": [ \"detecting cyber threats and system performance issues\" ], \"answer_start\": [ 173 ] }"},{"id":"156","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Module Code - Title: CE5022 - LOG FILES AND EVENT ANALYSIS Prerequisite Modules: Rationale and Purpose of the Module: Log files contain valuable information for infrastructure management as most malicious exploits and intrusions leave their fingerprints all over log files and system performance issues can be identified from analyzing specific log data. In this module, the learner will evaluate log files and learn tools to extract associated valuable data for detecting cyber threats and system performance issues. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Log Files What are log files and what data do they contain? Types of log files. What type of information regarding the wellbeing and efficiency of the system do they contain? Log data transmission and collection. What collects log data (OS, applications, etc.) Extracting diagnostic data and capabilities from log data. Linux Log files and diagnostic data (grep), Application log files, Windows log files (event viewer), MAC log files (Console), Android log files (Android Studio), firewall logs (e.g. Windows Defender Firewall with Advanced Security). Reading log files using text editors and advanced read log software. Log formats. Log Security (access, data recording, configuration, etc.) Log File Access and Analysis Log File Access and Analysis Log file analysis - why is it important? Log file analysis use cases. Log file analysis best practices and tools- prioritization, filtering, criticality determination, the need for context and unclear messages. How do log files specify changes that have occurred? How are incident causes extracted from log files? How to log data points out red flags in systems: unusual behaviour, unauthorized access, extreme traffic, suspicious changes, etc. How to extract useful information and how to search log data by implementing regex and grep tools. Detect corruption of log files.Log Management Systems\nWhat is a log management system and how does it fit into the overall security architecture (Defense in Depth). Parameters of a complete log management system: Collection, Storage, Search, Correlation and Output. Why is log management important? Why does it make log file analysis more feasible? Management of log file data in embedded/resource constrained devices. Impact of flash based systems on ability to log \"everything\" continuously.SIEM What are system information and event management (SIEM) tools? How SIEM software operates to collect log and event data generated by different applications, security devices and host systems and collates it together into a single centralized platform. How SIEMs are used with YARA and Sigma rules to identify indicators of compromise to manage security for a large or diverse IT infrastructure. SIEM real-time threat analysis that provides real-time visibility across an organizations information security systems. Investigating an Incident - Developing the correct Mindset Analyzing how log management and analysis plays a crucial role during a security incident and identifying system performance issues. Determine normal behaviour (daily basis, by the hour, monthly, longer) and triggers. How Log files (and associated data) are leveraged for fighting cybercrime. Identify the logs where malicious exploits and intrusions have left their fingerprints. How to develop a log file analysis mindset for cybersecurity and system performance.  ","question":"What will I learn in the log files and event analysis module?","answers":"{ \"text\": [ \"tools to extract associated valuable data for detecting cyber threats and system performance issues\" ], \"answer_start\": [ 316 ] }"},{"id":"157","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate log files, the associated data and accessing and search mechanisms LO2: Interpret valuable data from log files for cybersecurity and system performance purposes by applying best practices and tools.  LO3: Implement a log management system using security information and event management (SIEM) tools for use in infrastructure management. LO4: Analyse log files from multiple devices and applications utilising log aggregation techniques and SIEM tools to identify indicators of compromise in ill-defined contexts. LO5: Apply a log file analysis mindset for cyber security and system performance to the effective communication of incident reports. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO6: Value and accept the importance of log files and the information they contain regarding the system state. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:\nThis module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its log files we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying/Analysing and Managing log files for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"What skills will I learn in the log files and event analysis module?","answers":"{ \"text\": [ \"proactive, creative and articulate\" ], \"answer_start\": [ 169 ] }"},{"id":"158","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate log files, the associated data and accessing and search mechanisms LO2: Interpret valuable data from log files for cybersecurity and system performance purposes by applying best practices and tools.  LO3: Implement a log management system using security information and event management (SIEM) tools for use in infrastructure management. LO4: Analyse log files from multiple devices and applications utilising log aggregation techniques and SIEM tools to identify indicators of compromise in ill-defined contexts. LO5: Apply a log file analysis mindset for cyber security and system performance to the effective communication of incident reports. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO6: Value and accept the importance of log files and the information they contain regarding the system state. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:\nThis module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its log files we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying/Analysing and Managing log files for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"How the log files and event analysis module will be delivered?","answers":"{ \"text\": [ \"online in a blended fashion\" ], \"answer_start\": [ 1882 ] }"},{"id":"159","title ":"LOG_FILES_AND_EVENT_ANALYSIS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate log files, the associated data and accessing and search mechanisms LO2: Interpret valuable data from log files for cybersecurity and system performance purposes by applying best practices and tools.  LO3: Implement a log management system using security information and event management (SIEM) tools for use in infrastructure management. LO4: Analyse log files from multiple devices and applications utilising log aggregation techniques and SIEM tools to identify indicators of compromise in ill-defined contexts. LO5: Apply a log file analysis mindset for cyber security and system performance to the effective communication of incident reports. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO6: Value and accept the importance of log files and the information they contain regarding the system state. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:\nThis module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its log files we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying/Analysing and Managing log files for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"What is the email of the lecturer for the log files and event analysis module?","answers":"{ \"text\": [ \"muzaffar.rao@ul.ie\" ], \"answer_start\": [ 1911 ] }"},{"id":"160","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Module Code - Title: CE5031 - OT/ICS NETWORKS AND PROTOCOLS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to provide knowledge, skills and abilities related to communication networks and protocols used in Operational Technology (OT), and the interconnections between them in Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. The module is aimed at helping students to better understand them and be prepared to integrate the systems into IT systems. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Industrial control systems  ICS architecture - PLC, HMI, SCADA, DCS, SIS. ICS functions - view, monitor and control. Purdue Model for ICS. ICS zones and levels, enterprise, industrial demilitarized, and industrial zones. ICS Media and Protocols Regular IT Network Protocols -HTTP, HTTPS, DNS, SMTP, FTP, SNMP, DHCP etc. Process Automation Protocols - Profibus, DeviceNet, ControlNet, Modbus, CIP. ICS Protocols - OLE for Process Control (OPC). OPC Unified Architecture. Building Automation Protocols - BACnet, C-Bus, Modbus, Zigbee, Z-Wave. Communication protocols mapped to different zones. AMI and the smart grid. Industrial Protocol Simulators for Modbus, DNP, OPC etc. Ethernet/IP and CIP. Availability and Resilience - Resilient Ethernet Protocol, Media Redundancy Protocol. ICS Network Topologies & Services Common Topologies - star, bus, mesh, wireless mesh, tree, ring, dual homing. Network Segmentation, VLANs, physical and logical segmentation. Network services - DNS, DHCP, IAM etc. Network tools - wire shark, SIEM ICS Network Configuration  Modbus Serial Slave and master. PROFINET - device roles, configuration, troubleshooting. Ethernet/Industrial Protocol (IP). Current state of secure implementations of the OT network space Secure extensions of ProfiNet, Ethercat etc. ","question":"What is the code for the OT/ICS networks and protocols module?","answers":"{ \"text\": [ \"CE5031\" ], \"answer_start\": [ 21 ] }"},{"id":"161","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Module Code - Title: CE5031 - OT/ICS NETWORKS AND PROTOCOLS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to provide knowledge, skills and abilities related to communication networks and protocols used in Operational Technology (OT), and the interconnections between them in Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. The module is aimed at helping students to better understand them and be prepared to integrate the systems into IT systems. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Industrial control systems  ICS architecture - PLC, HMI, SCADA, DCS, SIS. ICS functions - view, monitor and control. Purdue Model for ICS. ICS zones and levels, enterprise, industrial demilitarized, and industrial zones. ICS Media and Protocols Regular IT Network Protocols -HTTP, HTTPS, DNS, SMTP, FTP, SNMP, DHCP etc. Process Automation Protocols - Profibus, DeviceNet, ControlNet, Modbus, CIP. ICS Protocols - OLE for Process Control (OPC). OPC Unified Architecture. Building Automation Protocols - BACnet, C-Bus, Modbus, Zigbee, Z-Wave. Communication protocols mapped to different zones. AMI and the smart grid. Industrial Protocol Simulators for Modbus, DNP, OPC etc. Ethernet/IP and CIP. Availability and Resilience - Resilient Ethernet Protocol, Media Redundancy Protocol. ICS Network Topologies & Services Common Topologies - star, bus, mesh, wireless mesh, tree, ring, dual homing. Network Segmentation, VLANs, physical and logical segmentation. Network services - DNS, DHCP, IAM etc. Network tools - wire shark, SIEM ICS Network Configuration  Modbus Serial Slave and master. PROFINET - device roles, configuration, troubleshooting. Ethernet/Industrial Protocol (IP). Current state of secure implementations of the OT network space Secure extensions of ProfiNet, Ethercat etc. ","question":"What is the aim of the OT/ICS networks and protocols module?","answers":"{ \"text\": [ \"to provide knowledge, skills and abilities\" ], \"answer_start\": [ 463 ] }"},{"id":"162","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Module Code - Title: CE5031 - OT/ICS NETWORKS AND PROTOCOLS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to provide knowledge, skills and abilities related to communication networks and protocols used in Operational Technology (OT), and the interconnections between them in Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. The module is aimed at helping students to better understand them and be prepared to integrate the systems into IT systems. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Industrial control systems  ICS architecture - PLC, HMI, SCADA, DCS, SIS. ICS functions - view, monitor and control. Purdue Model for ICS. ICS zones and levels, enterprise, industrial demilitarized, and industrial zones. ICS Media and Protocols Regular IT Network Protocols -HTTP, HTTPS, DNS, SMTP, FTP, SNMP, DHCP etc. Process Automation Protocols - Profibus, DeviceNet, ControlNet, Modbus, CIP. ICS Protocols - OLE for Process Control (OPC). OPC Unified Architecture. Building Automation Protocols - BACnet, C-Bus, Modbus, Zigbee, Z-Wave. Communication protocols mapped to different zones. AMI and the smart grid. Industrial Protocol Simulators for Modbus, DNP, OPC etc. Ethernet/IP and CIP. Availability and Resilience - Resilient Ethernet Protocol, Media Redundancy Protocol. ICS Network Topologies & Services Common Topologies - star, bus, mesh, wireless mesh, tree, ring, dual homing. Network Segmentation, VLANs, physical and logical segmentation. Network services - DNS, DHCP, IAM etc. Network tools - wire shark, SIEM ICS Network Configuration  Modbus Serial Slave and master. PROFINET - device roles, configuration, troubleshooting. Ethernet/Industrial Protocol (IP). Current state of secure implementations of the OT network space Secure extensions of ProfiNet, Ethercat etc. ","question":"What are the main subjects in the OT/ICS networks and protocols module?","answers":"{ \"text\": [ \"Modbus, CIP\" ], \"answer_start\": [ 417 ] }"},{"id":"163","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate network architectures and protocols used for Industrial Control Systems (ICS) LO2: Evaluate and assess the interdependencies that can be found in ICS/Supervisory Control and Data Acquisition (SCADA) networks. LO3: Recommend the most suitable standard industrial communication protocol for an application. LO4: Demonstrate an understanding of good practices in ICS networking. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of good practices that promote security in  Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS networks and their protocols we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: muzaffar.rao@ul.ie","question":"How the OT/ICS networks and protocols module will be delivered?","answers":"{ \"text\": [ \"online in a blended fashion\" ], \"answer_start\": [ 1585 ] }"},{"id":"164","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate network architectures and protocols used for Industrial Control Systems (ICS) LO2: Evaluate and assess the interdependencies that can be found in ICS/Supervisory Control and Data Acquisition (SCADA) networks. LO3: Recommend the most suitable standard industrial communication protocol for an application. LO4: Demonstrate an understanding of good practices in ICS networking. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of good practices that promote security in  Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS networks and their protocols we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: muzaffar.rao@ul.ie","question":"What skills will I learn in the OT/ICS networks and protocols module?","answers":"{ \"text\": [ \"knowledgeable, proactive, creative and articulate\" ], \"answer_start\": [ 1257 ] }"},{"id":"165","title ":"OT/ICS_NETWORKS_AND_PROTOCOLS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Evaluate network architectures and protocols used for Industrial Control Systems (ICS) LO2: Evaluate and assess the interdependencies that can be found in ICS/Supervisory Control and Data Acquisition (SCADA) networks. LO3: Recommend the most suitable standard industrial communication protocol for an application. LO4: Demonstrate an understanding of good practices in ICS networking. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of good practices that promote security in  Industrial Control Systems (ICS)/Supervisory Control and Data Acquisition (SCADA) systems. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students:This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS networks and their protocols we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Eric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: muzaffar.rao@ul.ie","question":"What is the email of the lecturer for the OT/ICS networks and protocols module?","answers":"{ \"text\": [ \"muzaffar.rao@ul.ie\" ], \"answer_start\": [ 2406 ] }"},{"id":"166","title ":"SECURE_OT/ICS_NETWORKS","context":"Module Code - Title: CE5032 - SECURE OT/ICS NETWORKS Prerequisite Modules: Rationale and Purpose of the Module:\nThe aim of the module is to enable students to understand the differences between IT and OT security risks, the impacts of users behaviour and how to establish a Cyber Security Management System (CSMS).  This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Cyber Threats, vulnerabilities and attack vectors Importance of securing ICS. Threat landscape - Malware, exploits, APTs, insider threats, hacktivism, cybercrime, cyber terrorism, cyber war. Threat actors. Threat Intelligence and sharing. CIA triad. Vulnerabilities in ICS. Vulnerability assessment. Penetration testing. Vulnerability database. Common Vulnerability Scoring System (CVSS). Risk ranking - DREAD Model. The OT concept of Asset/vulnerability management Lots of legacy equipment, fear of IT intrusion etc. \nCS Security Architecture Defence in Depth. Physical, Network, Computer, Application & Device Security. Security architecture for ICS. Security Architecture Patterns - access controls, network security, log management and remote access. Security Principles - Zones & Network Segmentation. establishing zones and conduits. Relationship of zones/conduits and Purdue Reference model. Zones and security device configuration.Security Principles - Firewalls and Zoning Network Segmentation. Zoning. Firewalls. Firewalls. Firewall configuration with zones. Access Control lists. VLANs. Host based Firewalls  . Application based Firewalls Security Principles - Intrusion Detection & Prevention Network Intrusion Detection and Protection Systems. IDS/IPS recommendations for ICS. Introduction to Security Monitoring Security information and event management (SIEM). SIEM tools. SIEM data collection - firewalls, IDS/IPS, router and switch, OS and application logs. Achieving network visibility. Behavioural anomaly detection. Whitelist configuration. Event correlation. ","question":"What is the code for the secure OT/ICS networks module?","answers":"{ \"text\": [ \"CE5032\" ], \"answer_start\": [ 21 ] }"},{"id":"167","title ":"SECURE_OT/ICS_NETWORKS","context":"Module Code - Title: CE5032 - SECURE OT/ICS NETWORKS Prerequisite Modules: Rationale and Purpose of the Module:\nThe aim of the module is to enable students to understand the differences between IT and OT security risks, the impacts of users behaviour and how to establish a Cyber Security Management System (CSMS).  This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Cyber Threats, vulnerabilities and attack vectors Importance of securing ICS. Threat landscape - Malware, exploits, APTs, insider threats, hacktivism, cybercrime, cyber terrorism, cyber war. Threat actors. Threat Intelligence and sharing. CIA triad. Vulnerabilities in ICS. Vulnerability assessment. Penetration testing. Vulnerability database. Common Vulnerability Scoring System (CVSS). Risk ranking - DREAD Model. The OT concept of Asset/vulnerability management Lots of legacy equipment, fear of IT intrusion etc. \nCS Security Architecture Defence in Depth. Physical, Network, Computer, Application & Device Security. Security architecture for ICS. Security Architecture Patterns - access controls, network security, log management and remote access. Security Principles - Zones & Network Segmentation. establishing zones and conduits. Relationship of zones/conduits and Purdue Reference model. Zones and security device configuration.Security Principles - Firewalls and Zoning Network Segmentation. Zoning. Firewalls. Firewalls. Firewall configuration with zones. Access Control lists. VLANs. Host based Firewalls  . Application based Firewalls Security Principles - Intrusion Detection & Prevention Network Intrusion Detection and Protection Systems. IDS/IPS recommendations for ICS. Introduction to Security Monitoring Security information and event management (SIEM). SIEM tools. SIEM data collection - firewalls, IDS/IPS, router and switch, OS and application logs. Achieving network visibility. Behavioural anomaly detection. Whitelist configuration. Event correlation. ","question":"What is the purpose of the secure OT/ICS networks module?","answers":"{ \"text\": [ \"Physical, Network, Computer, Application & Device Security\" ], \"answer_start\": [ 144 ] }"},{"id":"168","title ":"SECURE_OT/ICS_NETWORKS","context":"Module Code - Title: CE5032 - SECURE OT/ICS NETWORKS Prerequisite Modules: Rationale and Purpose of the Module:\nThe aim of the module is to enable students to understand the differences between IT and OT security risks, the impacts of users behaviour and how to establish a Cyber Security Management System (CSMS).  This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Cyber Threats, vulnerabilities and attack vectors Importance of securing ICS. Threat landscape - Malware, exploits, APTs, insider threats, hacktivism, cybercrime, cyber terrorism, cyber war. Threat actors. Threat Intelligence and sharing. CIA triad. Vulnerabilities in ICS. Vulnerability assessment. Penetration testing. Vulnerability database. Common Vulnerability Scoring System (CVSS). Risk ranking - DREAD Model. The OT concept of Asset/vulnerability management Lots of legacy equipment, fear of IT intrusion etc. \nCS Security Architecture Defence in Depth. Physical, Network, Computer, Application & Device Security. Security architecture for ICS. Security Architecture Patterns - access controls, network security, log management and remote access. Security Principles - Zones & Network Segmentation. establishing zones and conduits. Relationship of zones/conduits and Purdue Reference model. Zones and security device configuration.Security Principles - Firewalls and Zoning Network Segmentation. Zoning. Firewalls. Firewalls. Firewall configuration with zones. Access Control lists. VLANs. Host based Firewalls  . Application based Firewalls Security Principles - Intrusion Detection & Prevention Network Intrusion Detection and Protection Systems. IDS/IPS recommendations for ICS. Introduction to Security Monitoring Security information and event management (SIEM). SIEM tools. SIEM data collection - firewalls, IDS/IPS, router and switch, OS and application logs. Achieving network visibility. Behavioural anomaly detection. Whitelist configuration. Event correlation. ","question":"What tools will I learn in the secure OT/ICS networks module?","answers":"{ \"text\": [ \"SIEM tools\" ], \"answer_start\": [ 1048 ] }"},{"id":"169","title ":"SECURE_OT/ICS_NETWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Assess, manage and evaluate Operational Technology (OT) Security. LO2: Present mitigation strategies for OT security. LO3: Identify the differences between Information Technology (IT) and OT security. LO4:      Develop a Cyber Security Management Strategy. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of security awareness for Operational Technology (OT).  Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nEric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Other Texts: Programmes\nSemester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"What will I be able to do in the secure OT/ICS networks module?","answers":"{ \"text\": [ \"Applying and Managing\" ], \"answer_start\": [ 1046 ] }"},{"id":"170","title ":"SECURE_OT/ICS_NETWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Assess, manage and evaluate Operational Technology (OT) Security. LO2: Present mitigation strategies for OT security. LO3: Identify the differences between Information Technology (IT) and OT security. LO4:      Develop a Cyber Security Management Strategy. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of security awareness for Operational Technology (OT).  Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nEric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Other Texts: Programmes\nSemester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"How the secure OT/ICS networks module is delivered?","answers":"{ \"text\": [ \"online in a blended fashion\" ], \"answer_start\": [ 1370 ] }"},{"id":"171","title ":"SECURE_OT/ICS_NETWORKS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Assess, manage and evaluate Operational Technology (OT) Security. LO2: Present mitigation strategies for OT security. LO3: Identify the differences between Information Technology (IT) and OT security. LO4:      Develop a Cyber Security Management Strategy. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of security awareness for Operational Technology (OT).  Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nEric D. Knapp (Author), Joel Thomas Langill (Contributor).  (2014) Industrial Network Security: Securing Critical Infrastructure Networks for Smart Grid, SCADA, and Other Industrial Control Systems, Syngress Media, U.S. Pascal Ackerman (2017) Industrial Cybersecurity: Efficiently secure critical infrastructure systems, Packt Publishing Other Texts: Programmes\nSemester(s) Module is Offered: Spring Module Leader: muzaffar.rao@ul.ie","question":"What is the email of the lecturer for the secure OT/ICS networks module?","answers":"{ \"text\": [ \"muzaffar.rao@ul.ie\" ], \"answer_start\": [ 2345 ] }"},{"id":"172","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Module Code - Title: CE5041 - CYBERSECURITY LAW AND REGULATIONS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to enable students to be aware of Security Standards and associated laws and regulations for Operational Technology (OT)/Information Technology (IT) convergence. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Landscape Multi-level governance and regulatory system i.e. International standards, EU rules, Domestic Rules. Laws, Regulations & Standard Ireland and EU: EU Cybersecurity Act, Personally Identifiable Information (PII), GDPR/Statutory Data Audit, NIS. Criminal Justice (Offences Relating to Information Systems) Act 2017. USA: CFA Act, CSA Act, ECPA, GLB Act, SOX, DMCA, CCPA. Personal Health Information (PHI) Health Insurance Portability and Accountability Act of 1996 (HIPAA). ENISA Threat Landscape. The meaning of Ethics. The relationship between Law and Morality. Ethical issues in computing. Standards, Compliance & Violation Reporting standards. NIST. SSAE-16. AT-101. Federal Risk and Authorization Management Program (FedRAMP) compliance. ISO compliance. Regulatory Compliance. Reputational damage. Gambling Commission, Auditing. Skill in implementing and testing network infrastructure contingency and recovery plans.","question":"What is the code for the cybersceurity law and regulations module?","answers":"{ \"text\": [ \"CE5041\" ], \"answer_start\": [ 21 ] }"},{"id":"173","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Module Code - Title: CE5041 - CYBERSECURITY LAW AND REGULATIONS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to enable students to be aware of Security Standards and associated laws and regulations for Operational Technology (OT)/Information Technology (IT) convergence. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Landscape Multi-level governance and regulatory system i.e. International standards, EU rules, Domestic Rules. Laws, Regulations & Standard Ireland and EU: EU Cybersecurity Act, Personally Identifiable Information (PII), GDPR/Statutory Data Audit, NIS. Criminal Justice (Offences Relating to Information Systems) Act 2017. USA: CFA Act, CSA Act, ECPA, GLB Act, SOX, DMCA, CCPA. Personal Health Information (PHI) Health Insurance Portability and Accountability Act of 1996 (HIPAA). ENISA Threat Landscape. The meaning of Ethics. The relationship between Law and Morality. Ethical issues in computing. Standards, Compliance & Violation Reporting standards. NIST. SSAE-16. AT-101. Federal Risk and Authorization Management Program (FedRAMP) compliance. ISO compliance. Regulatory Compliance. Reputational damage. Gambling Commission, Auditing. Skill in implementing and testing network infrastructure contingency and recovery plans.","question":"What is the aim of the cybersceurity law and regulations module?","answers":"{ \"text\": [ \"to enable students to be aware of Security Standards\" ], \"answer_start\": [ 1014 ] }"},{"id":"174","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Module Code - Title: CE5041 - CYBERSECURITY LAW AND REGULATIONS Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to enable students to be aware of Security Standards and associated laws and regulations for Operational Technology (OT)/Information Technology (IT) convergence. This module was developed under the CyberSkills HCI Pillar 3 Project. Please refer to the consortium agreement for ownership. Syllabus: Landscape Multi-level governance and regulatory system i.e. International standards, EU rules, Domestic Rules. Laws, Regulations & Standard Ireland and EU: EU Cybersecurity Act, Personally Identifiable Information (PII), GDPR/Statutory Data Audit, NIS. Criminal Justice (Offences Relating to Information Systems) Act 2017. USA: CFA Act, CSA Act, ECPA, GLB Act, SOX, DMCA, CCPA. Personal Health Information (PHI) Health Insurance Portability and Accountability Act of 1996 (HIPAA). ENISA Threat Landscape. The meaning of Ethics. The relationship between Law and Morality. Ethical issues in computing. Standards, Compliance & Violation Reporting standards. NIST. SSAE-16. AT-101. Federal Risk and Authorization Management Program (FedRAMP) compliance. ISO compliance. Regulatory Compliance. Reputational damage. Gambling Commission, Auditing. Skill in implementing and testing network infrastructure contingency and recovery plans.","question":"What will I learn in the cybersceurity law and regulations module?","answers":"{ \"text\": [ \"Security Standards\" ], \"answer_start\": [ 1828 ] }"},{"id":"175","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Appraise the laws, regulations, policies and ethics as they relate to cyber security and privacy. LO2: Assess manage and apply the reporting standards relevant to Operational and Information Technologies. LO3: Demonstrate an understanding of the ethical issues associated with computing. LO4: Evaluate the threat landscape associated with Information Technology (IT)/Operational Technology (OT) integration. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of laws, standards and ethics in computing. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS standards and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: lubna.luxmi@ul.ie","question":"What skills will I learn in the cybersceurity law and regulations module?","answers":"{ \"text\": [ \"Knowledge, Skills and Abilities\" ], \"answer_start\": [ 1216 ] }"},{"id":"176","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Appraise the laws, regulations, policies and ethics as they relate to cyber security and privacy. LO2: Assess manage and apply the reporting standards relevant to Operational and Information Technologies. LO3: Demonstrate an understanding of the ethical issues associated with computing. LO4: Evaluate the threat landscape associated with Information Technology (IT)/Operational Technology (OT) integration. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of laws, standards and ethics in computing. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS standards and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: lubna.luxmi@ul.ie","question":"When the cybersceurity law and regulations module is offered?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 840 ] }"},{"id":"177","title ":"CYBERSECURITY_LAW_AND_REGULATIONS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: LO1: Appraise the laws, regulations, policies and ethics as they relate to cyber security and privacy. LO2: Assess manage and apply the reporting standards relevant to Operational and Information Technologies. LO3: Demonstrate an understanding of the ethical issues associated with computing. LO4: Evaluate the threat landscape associated with Information Technology (IT)/Operational Technology (OT) integration. Affective (Attitudes and Values) On successful completion of this module, students will be able to: LO5: Value and accept the importance of laws, standards and ethics in computing. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered online in a blended fashion to industry-based learners and will be scheduled in the evening time by Cyberskills. The lecturing staff will be provided by the HEA HCI Pillar 3 initiative - Cyberskills. By following recent developments with OT/ICS standards and its devices we aim to ensure that students of this module are knowledgeable, proactive, creative and articulate in relation to Applying and Managing (Secure) networking services and devices for the OT Domain. The content of the module has been determined by aligning the module syllabus with the KSAs (Knowledge, Skills and Abilities) specified in the NIST/NICE framework for the Network Services work Role - Network Operations Specialist (OM-NET-001). The module content was discussed and designed with industry panel input from Dell and ADI. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: lubna.luxmi@ul.ie","question":"How can I contact the lecturer for the cybersceurity law and regulations module?","answers":"{ \"text\": [ \"lubna.luxmi@ul.ie\" ], \"answer_start\": [ 2126 ] }"},{"id":"178","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Module Code - Title: CE6002 - ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module: Artificial Intelligence is the broader concept of machines being able to carry out tasks in a way that we would consider smart. Machine Learning is a current application of AI based around the idea that we should be able to give machines access to data and let them learn for themselves. The module covers what is is we mean by learning from data and using patterns in data to learn from it as long as we have enough data from which to learn. We will look at how to learn from data, using basic techniques and trialing them on data sets, we will look at algorithms to make machine learning better. Syllabus: 1. The learning problem: feasibility of learning, error and noise  2. Theory of generalization: Effective number of hypothesis, VC bound, sample and model complexity, approximation-generalization trade-off, bias and variance 3. Linear classification and regression, logistic regression, gradient descent and feature space transformations 4. Overfitting and regularisation 5. Validation and model selection, data snooping 6. Neural Networks: Perceptrons, Multi-Layer Perceptrons and the Back-Propagation training algorithm. 7. Optimal Margin Classifiers and Support Vector Machines. 8. Parametric vs. Non-Parametric classifiers.","question":"What is the code for the artificial intelligence and machine learning module?","answers":"{ \"text\": [ \"CE6002\" ], \"answer_start\": [ 21 ] }"},{"id":"179","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Module Code - Title: CE6002 - ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module: Artificial Intelligence is the broader concept of machines being able to carry out tasks in a way that we would consider smart. Machine Learning is a current application of AI based around the idea that we should be able to give machines access to data and let them learn for themselves. The module covers what is is we mean by learning from data and using patterns in data to learn from it as long as we have enough data from which to learn. We will look at how to learn from data, using basic techniques and trialing them on data sets, we will look at algorithms to make machine learning better. Syllabus: 1. The learning problem: feasibility of learning, error and noise  2. Theory of generalization: Effective number of hypothesis, VC bound, sample and model complexity, approximation-generalization trade-off, bias and variance 3. Linear classification and regression, logistic regression, gradient descent and feature space transformations 4. Overfitting and regularisation 5. Validation and model selection, data snooping 6. Neural Networks: Perceptrons, Multi-Layer Perceptrons and the Back-Propagation training algorithm. 7. Optimal Margin Classifiers and Support Vector Machines. 8. Parametric vs. Non-Parametric classifiers.","question":"What is the aim of the artificial intelligence and machine learning module?","answers":"{ \"text\": [ \"being able to carry out tasks in a way that we would consider smart\" ], \"answer_start\": [ 148 ] }"},{"id":"180","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Module Code - Title: CE6002 - ARTIFICIAL INTELLIGENCE AND MACHINE LEARNING Prerequisite Modules: Rationale and Purpose of the Module: Artificial Intelligence is the broader concept of machines being able to carry out tasks in a way that we would consider smart. Machine Learning is a current application of AI based around the idea that we should be able to give machines access to data and let them learn for themselves. The module covers what is is we mean by learning from data and using patterns in data to learn from it as long as we have enough data from which to learn. We will look at how to learn from data, using basic techniques and trialing them on data sets, we will look at algorithms to make machine learning better. Syllabus: 1. The learning problem: feasibility of learning, error and noise  2. Theory of generalization: Effective number of hypothesis, VC bound, sample and model complexity, approximation-generalization trade-off, bias and variance 3. Linear classification and regression, logistic regression, gradient descent and feature space transformations 4. Overfitting and regularisation 5. Validation and model selection, data snooping 6. Neural Networks: Perceptrons, Multi-Layer Perceptrons and the Back-Propagation training algorithm. 7. Optimal Margin Classifiers and Support Vector Machines. 8. Parametric vs. Non-Parametric classifiers.","question":"What will I learn in the artificial intelligence and machine learning module?","answers":"{ \"text\": [ \"algorithms to make machine learning better\" ], \"answer_start\": [ 182 ] }"},{"id":"181","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) At the end of this module students will be able to: 1. Demonstrate an understanding of the theory of generalisation and its practical implications for machine learning algorithms, the concept of model complexity, in particular the VC bound and its practical interpretation. 2. Be able to apply regularization in order to prevent overfitting. 3. Demonstrate an understanding of and be able to apply non-linear transformations to feature spaces. 4. Recognise and manage under- and overfitting.  5. Apply methods for selecting one final machine learning model from among a collection of candidate machine learning models for a training dataset. 6. Apply methods for model validation, the process where a trained model is evaluated with a testing data set. 7. Apply a number of linear and non-linear and parametric and non-parametric machine learner training models e.g. linear regression, logistic regression, feed forward neural networks and Support Vector Machines. Affective (Attitudes and Values) At the end of this module students will be able to: 1. Differentiate and critique various techniques that could be used and be able to justify an appropriate classification technique for a given a classification problem. 2. Demonstrate an awareness of and be able to implement appropriate protocols and practices to manage bias and data snooping when training a machine learner, for a given data set. 3. Demonstrate an awareness of the impact of the availability of data, for a given data set used to train the machine learner, when assessing the machine learners performance. Psychomotor (Physical Skills) N/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using using on-line lectures, virtual labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Yaser Abu Mostafa, Malik Magdon-Ismailm Hsuan-Tien Lin (2012) Learning from Data, AML Aurelien Geron (2017) Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, OReilly Andrew Ng (2020) Machine Learning Yearning, https://www.deeplearning.ai/machine-learning-yearning/ Other Texts: Andreas C. Müller and Sarah Guido (2016) Introduction to Machine Learning with Python: A Guide for Data Scientists, OReilly Trevor Hastie, Robert Tibshirani, Jerome Friedman (2009) The elements of statistical learning, Springer Programmes MSARINTPB - ARTIFICIAL INTELLIGENCE Semester(s) Module is Offered: Spring Module Leader: pepijn.vandeven@ul.ie","question":"What will I be able to do in the artificial intelligence and machine learning module?","answers":"{ \"text\": [ \"Demonstrate an understanding of the theory of generalisation\" ], \"answer_start\": [ 1540 ] }"},{"id":"182","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) At the end of this module students will be able to: 1. Demonstrate an understanding of the theory of generalisation and its practical implications for machine learning algorithms, the concept of model complexity, in particular the VC bound and its practical interpretation. 2. Be able to apply regularization in order to prevent overfitting. 3. Demonstrate an understanding of and be able to apply non-linear transformations to feature spaces. 4. Recognise and manage under- and overfitting.  5. Apply methods for selecting one final machine learning model from among a collection of candidate machine learning models for a training dataset. 6. Apply methods for model validation, the process where a trained model is evaluated with a testing data set. 7. Apply a number of linear and non-linear and parametric and non-parametric machine learner training models e.g. linear regression, logistic regression, feed forward neural networks and Support Vector Machines. Affective (Attitudes and Values) At the end of this module students will be able to: 1. Differentiate and critique various techniques that could be used and be able to justify an appropriate classification technique for a given a classification problem. 2. Demonstrate an awareness of and be able to implement appropriate protocols and practices to manage bias and data snooping when training a machine learner, for a given data set. 3. Demonstrate an awareness of the impact of the availability of data, for a given data set used to train the machine learner, when assessing the machine learners performance. Psychomotor (Physical Skills) N/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using using on-line lectures, virtual labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Yaser Abu Mostafa, Malik Magdon-Ismailm Hsuan-Tien Lin (2012) Learning from Data, AML Aurelien Geron (2017) Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, OReilly Andrew Ng (2020) Machine Learning Yearning, https://www.deeplearning.ai/machine-learning-yearning/ Other Texts: Andreas C. Müller and Sarah Guido (2016) Introduction to Machine Learning with Python: A Guide for Data Scientists, OReilly Trevor Hastie, Robert Tibshirani, Jerome Friedman (2009) The elements of statistical learning, Springer Programmes MSARINTPB - ARTIFICIAL INTELLIGENCE Semester(s) Module is Offered: Spring Module Leader: pepijn.vandeven@ul.ie","question":"How is the artificial intelligence and machine learning module delivered?","answers":"{ \"text\": [ \"using using on-line lectures\" ], \"answer_start\": [ 1915 ] }"},{"id":"183","title ":"ARTIFICIAL_INTELLIGENCE_AND_MACHINE_LEARNING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) At the end of this module students will be able to: 1. Demonstrate an understanding of the theory of generalisation and its practical implications for machine learning algorithms, the concept of model complexity, in particular the VC bound and its practical interpretation. 2. Be able to apply regularization in order to prevent overfitting. 3. Demonstrate an understanding of and be able to apply non-linear transformations to feature spaces. 4. Recognise and manage under- and overfitting.  5. Apply methods for selecting one final machine learning model from among a collection of candidate machine learning models for a training dataset. 6. Apply methods for model validation, the process where a trained model is evaluated with a testing data set. 7. Apply a number of linear and non-linear and parametric and non-parametric machine learner training models e.g. linear regression, logistic regression, feed forward neural networks and Support Vector Machines. Affective (Attitudes and Values) At the end of this module students will be able to: 1. Differentiate and critique various techniques that could be used and be able to justify an appropriate classification technique for a given a classification problem. 2. Demonstrate an awareness of and be able to implement appropriate protocols and practices to manage bias and data snooping when training a machine learner, for a given data set. 3. Demonstrate an awareness of the impact of the availability of data, for a given data set used to train the machine learner, when assessing the machine learners performance. Psychomotor (Physical Skills) N/a How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using using on-line lectures, virtual labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Yaser Abu Mostafa, Malik Magdon-Ismailm Hsuan-Tien Lin (2012) Learning from Data, AML Aurelien Geron (2017) Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, OReilly Andrew Ng (2020) Machine Learning Yearning, https://www.deeplearning.ai/machine-learning-yearning/ Other Texts: Andreas C. Müller and Sarah Guido (2016) Introduction to Machine Learning with Python: A Guide for Data Scientists, OReilly Trevor Hastie, Robert Tibshirani, Jerome Friedman (2009) The elements of statistical learning, Springer Programmes MSARINTPB - ARTIFICIAL INTELLIGENCE Semester(s) Module is Offered: Spring Module Leader: pepijn.vandeven@ul.ie","question":"How can I email the lecturer for the artificial intelligence and machine learning module?","answers":"{ \"text\": [ \"pepijn.vandeven@ul.ie\" ], \"answer_start\": [ 1937 ] }"},{"id":"184","title ":"MACHINE_VISION","context":"Module Code - Title: CE6003 - MACHINE VISION Prerequisite Modules: Rationale and Purpose of the Module: This module is a core module for the MSc in Artificial Intelligence. The aim is to gain a detailed insight into image formation, formats and processing. Syllabus: 1. Image formation: Pinhole camera, lenses, aberrations. 2. Image formats: BW, Greyscale, Colour (RGB, HSB/HSV). Image storage: lossless & lossy. 3. Point operations on images: Histograms, contrast enhancement, histogram equalization. 4. Image filtering: Linear filters, convolution, smoothing, Gaussian filters. Nonlinear filtering: median filter. 5. Finding edges: Prewitt, Sobel, Canny edge detectors. 6. Optimal binarization: Otsu thresholding. Operations on binary images. 7. Segmentation: Watershed transform. 8. Feature detection: Hough transform for lines & circles (& general shapes). 9. Finding regions of interest (corners, etc.). Harris operator. Region descriptors, region matching, image alignment. SIFT / SURF. 10. Homographies: Calculating/applying image perspective transforms.","question":"What is the code for the machine vision module?","answers":"{ \"text\": [ \"CE6003\" ], \"answer_start\": [ 21 ] }"},{"id":"185","title ":"MACHINE_VISION","context":"Module Code - Title: CE6003 - MACHINE VISION Prerequisite Modules: Rationale and Purpose of the Module: This module is a core module for the MSc in Artificial Intelligence. The aim is to gain a detailed insight into image formation, formats and processing. Syllabus: 1. Image formation: Pinhole camera, lenses, aberrations. 2. Image formats: BW, Greyscale, Colour (RGB, HSB/HSV). Image storage: lossless & lossy. 3. Point operations on images: Histograms, contrast enhancement, histogram equalization. 4. Image filtering: Linear filters, convolution, smoothing, Gaussian filters. Nonlinear filtering: median filter. 5. Finding edges: Prewitt, Sobel, Canny edge detectors. 6. Optimal binarization: Otsu thresholding. Operations on binary images. 7. Segmentation: Watershed transform. 8. Feature detection: Hough transform for lines & circles (& general shapes). 9. Finding regions of interest (corners, etc.). Harris operator. Region descriptors, region matching, image alignment. SIFT / SURF. 10. Homographies: Calculating/applying image perspective transforms.","question":"What is the aim of the machine vision module?","answers":"{ \"text\": [ \"to gain a detailed insight into image formation, formats and processing\" ], \"answer_start\": [ 193 ] }"},{"id":"186","title ":"MACHINE_VISION","context":"Module Code - Title: CE6003 - MACHINE VISION Prerequisite Modules: Rationale and Purpose of the Module: This module is a core module for the MSc in Artificial Intelligence. The aim is to gain a detailed insight into image formation, formats and processing. Syllabus: 1. Image formation: Pinhole camera, lenses, aberrations. 2. Image formats: BW, Greyscale, Colour (RGB, HSB/HSV). Image storage: lossless & lossy. 3. Point operations on images: Histograms, contrast enhancement, histogram equalization. 4. Image filtering: Linear filters, convolution, smoothing, Gaussian filters. Nonlinear filtering: median filter. 5. Finding edges: Prewitt, Sobel, Canny edge detectors. 6. Optimal binarization: Otsu thresholding. Operations on binary images. 7. Segmentation: Watershed transform. 8. Feature detection: Hough transform for lines & circles (& general shapes). 9. Finding regions of interest (corners, etc.). Harris operator. Region descriptors, region matching, image alignment. SIFT / SURF. 10. Homographies: Calculating/applying image perspective transforms.","question":"What will I learn in the machine vision module?","answers":"{ \"text\": [ \"image formation, formats and processing\" ], \"answer_start\": [ 688 ] }"},{"id":"187","title ":"MACHINE_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the major algorithms and techniques employed in machine vision systems. 2. Critique approaches to machine vision, outlining the strengths and weaknesses of common approaches. 3. Design and implement computer programs to perform low-level machine vision operations: filtering, edge-detection, thinning, photometric stereo, shape-from-shading; in a suitable computer language.\n4. Design and implement computer programs to perform high-level machine-vision operations: segmentation, labeling, classification and detection; in a suitable computer language. Affective (Attitudes and Values) 1. Given a machine vision problem, identify and defend an appropriate technique to tackle it. 2. Use an objective approach to the selection of machine vision algorithms to solve specific problems. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Gonzales & Woods (2017) Digital Image Processing, Pearson Nixon & Aguado (2012) Feature Extraction and Image Processing for Computer Vision, Academic Press Birchfield (2018) Image Processing and Analysis, Cengage Learning Other Texts: Szeliski (2011) Computer Vision: Algorithms & Applications, Springer Sonka, Hlavac, Boyle (2015) Image Processing, Analysis & Machine Vision, Cengage Learning Solomon & Breckon (2011) Fundamentals of Digital Image Processing, Wiley-Blackwell Davies (2018) Computer Vision, Academic Press Programmes Semester(s) Module is Offered: Autumn Module Leader: Tony.Scanlan@ul.ie","question":"What will I be able to do in the machine vision module?","answers":"{ \"text\": [ \"using a blended learning approach using on-line lectures, labs and tutorials\" ], \"answer_start\": [ 157 ] }"},{"id":"188","title ":"MACHINE_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the major algorithms and techniques employed in machine vision systems. 2. Critique approaches to machine vision, outlining the strengths and weaknesses of common approaches. 3. Design and implement computer programs to perform low-level machine vision operations: filtering, edge-detection, thinning, photometric stereo, shape-from-shading; in a suitable computer language.\n4. Design and implement computer programs to perform high-level machine-vision operations: segmentation, labeling, classification and detection; in a suitable computer language. Affective (Attitudes and Values) 1. Given a machine vision problem, identify and defend an appropriate technique to tackle it. 2. Use an objective approach to the selection of machine vision algorithms to solve specific problems. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Gonzales & Woods (2017) Digital Image Processing, Pearson Nixon & Aguado (2012) Feature Extraction and Image Processing for Computer Vision, Academic Press Birchfield (2018) Image Processing and Analysis, Cengage Learning Other Texts: Szeliski (2011) Computer Vision: Algorithms & Applications, Springer Sonka, Hlavac, Boyle (2015) Image Processing, Analysis & Machine Vision, Cengage Learning Solomon & Breckon (2011) Fundamentals of Digital Image Processing, Wiley-Blackwell Davies (2018) Computer Vision, Academic Press Programmes Semester(s) Module is Offered: Autumn Module Leader: Tony.Scanlan@ul.ie","question":"What are the books that I need for the machine vision module?","answers":"{ \"text\": [ \"Gonzales & Woods (2017) Digital Image Processing\" ], \"answer_start\": [ 1829 ] }"},{"id":"189","title ":"MACHINE_VISION","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Describe the major algorithms and techniques employed in machine vision systems. 2. Critique approaches to machine vision, outlining the strengths and weaknesses of common approaches. 3. Design and implement computer programs to perform low-level machine vision operations: filtering, edge-detection, thinning, photometric stereo, shape-from-shading; in a suitable computer language.\n4. Design and implement computer programs to perform high-level machine-vision operations: segmentation, labeling, classification and detection; in a suitable computer language. Affective (Attitudes and Values) 1. Given a machine vision problem, identify and defend an appropriate technique to tackle it. 2. Use an objective approach to the selection of machine vision algorithms to solve specific problems. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using a blended learning approach using on-line lectures, labs and tutorials. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Gonzales & Woods (2017) Digital Image Processing, Pearson Nixon & Aguado (2012) Feature Extraction and Image Processing for Computer Vision, Academic Press Birchfield (2018) Image Processing and Analysis, Cengage Learning Other Texts: Szeliski (2011) Computer Vision: Algorithms & Applications, Springer Sonka, Hlavac, Boyle (2015) Image Processing, Analysis & Machine Vision, Cengage Learning Solomon & Breckon (2011) Fundamentals of Digital Image Processing, Wiley-Blackwell Davies (2018) Computer Vision, Academic Press Programmes Semester(s) Module is Offered: Autumn Module Leader: Tony.Scanlan@ul.ie","question":"How can I contact the lecturer for the machine vision module?","answers":"{ \"text\": [ \"Tony.Scanlan@ul.ie\" ], \"answer_start\": [ 2651 ] }"},{"id":"190","title ":"FIELD_ROBOTICS","context":"Module Code - Title: CE6011 - FIELD ROBOTICS Prerequisite Modules: Rationale and Purpose of the Module: This module is created as a full time analogue for the Robotics module that was previously approved for the Blended All Ireland MSc programme in Renewable Energy. It will be offered in Year 1 of the ME in Electronic and Computer Engineering and also in the MSc in Artificial Intelligence and Machine Learning (Full Time) There are many and growing application domains that require the use of Field Robots, which employ combinations of Remote Piloting/Operation and Autopilot systems.  Example robot systems include: Unmanned Aerial Vehicles UAVs; Unmanned (Sea) Surface Vehicles USVs; Unmanned Underwater Vehicles (UUVs); Agricultural Robots; Robots in Mining; Robotic vehicles in space, Planetary lander/rovers.  A generic acronym for these vehicles is UXVs This module provides the necessary understanding, knowledge and skills for students of Robotics, Engineering and Artificial Intelligence to engage in the specification, operation, design and development of such robotic systems. Syllabus: [UXV systems] classification, remote sensing class, observation class, light work-class, intervention class:  electric, hydraulic, powered. [UXV sub systems] thrusters, manipulators, navigation and positioning, launch and recovery, tether management, pilot interfaces,  [UXV sensors] cameras, hyper-spectral imagers, sonar, lidar, radar. [Vehicle control] reference frames, transformations: plane rotations, earth cantered earth fixed (ECEF) to tangent plane, ECEF to geographic, vehicle to navigation frame, target referenced flight control, [Platform dynamics] 6 Degrees of Freedom (DOF) rigid body equation of motion and dynamics, hydrodynamics forces and moments, stability and control of ROVs,  state estimation, advanced control design, smart control (will AI students have the engineering background for the vehicle dynamics and control?  [UXV Applications / operations] survey, inspection, manipulation/intervention, piloting  [UXV support vessels/infrastructure  and operations] dynamic positioning - vessels and UXVs, roll/heave compensation, tether management systems, operations in challenging close quarter conditions, inspection maintenance and repair (IRM) challenges,  [Advanced Related Topics]  hardware-in-the-loop testing, survey planning and execution, maps and marine charts, reference frames, transformations, digital terrain models, [Laboratory Work] problem based laboratories will use a combination of mini UXV operation and flight control, UXV simulators, virtual and augmented reality environment, development exercises,  modelling and simulation of ROVs.","question":"What is the code for the field robotics module?","answers":"{ \"text\": [ \"CE6011\" ], \"answer_start\": [ 21 ] }"},{"id":"191","title ":"FIELD_ROBOTICS","context":"Module Code - Title: CE6011 - FIELD ROBOTICS Prerequisite Modules: Rationale and Purpose of the Module: This module is created as a full time analogue for the Robotics module that was previously approved for the Blended All Ireland MSc programme in Renewable Energy. It will be offered in Year 1 of the ME in Electronic and Computer Engineering and also in the MSc in Artificial Intelligence and Machine Learning (Full Time) There are many and growing application domains that require the use of Field Robots, which employ combinations of Remote Piloting/Operation and Autopilot systems.  Example robot systems include: Unmanned Aerial Vehicles UAVs; Unmanned (Sea) Surface Vehicles USVs; Unmanned Underwater Vehicles (UUVs); Agricultural Robots; Robots in Mining; Robotic vehicles in space, Planetary lander/rovers.  A generic acronym for these vehicles is UXVs This module provides the necessary understanding, knowledge and skills for students of Robotics, Engineering and Artificial Intelligence to engage in the specification, operation, design and development of such robotic systems. Syllabus: [UXV systems] classification, remote sensing class, observation class, light work-class, intervention class:  electric, hydraulic, powered. [UXV sub systems] thrusters, manipulators, navigation and positioning, launch and recovery, tether management, pilot interfaces,  [UXV sensors] cameras, hyper-spectral imagers, sonar, lidar, radar. [Vehicle control] reference frames, transformations: plane rotations, earth cantered earth fixed (ECEF) to tangent plane, ECEF to geographic, vehicle to navigation frame, target referenced flight control, [Platform dynamics] 6 Degrees of Freedom (DOF) rigid body equation of motion and dynamics, hydrodynamics forces and moments, stability and control of ROVs,  state estimation, advanced control design, smart control (will AI students have the engineering background for the vehicle dynamics and control?  [UXV Applications / operations] survey, inspection, manipulation/intervention, piloting  [UXV support vessels/infrastructure  and operations] dynamic positioning - vessels and UXVs, roll/heave compensation, tether management systems, operations in challenging close quarter conditions, inspection maintenance and repair (IRM) challenges,  [Advanced Related Topics]  hardware-in-the-loop testing, survey planning and execution, maps and marine charts, reference frames, transformations, digital terrain models, [Laboratory Work] problem based laboratories will use a combination of mini UXV operation and flight control, UXV simulators, virtual and augmented reality environment, development exercises,  modelling and simulation of ROVs.","question":"What robots will I build in the field robotics module?","answers":"{ \"text\": [ \"Agricultural Robots\" ], \"answer_start\": [ 184 ] }"},{"id":"192","title ":"FIELD_ROBOTICS","context":"Module Code - Title: CE6011 - FIELD ROBOTICS Prerequisite Modules: Rationale and Purpose of the Module: This module is created as a full time analogue for the Robotics module that was previously approved for the Blended All Ireland MSc programme in Renewable Energy. It will be offered in Year 1 of the ME in Electronic and Computer Engineering and also in the MSc in Artificial Intelligence and Machine Learning (Full Time) There are many and growing application domains that require the use of Field Robots, which employ combinations of Remote Piloting/Operation and Autopilot systems.  Example robot systems include: Unmanned Aerial Vehicles UAVs; Unmanned (Sea) Surface Vehicles USVs; Unmanned Underwater Vehicles (UUVs); Agricultural Robots; Robots in Mining; Robotic vehicles in space, Planetary lander/rovers.  A generic acronym for these vehicles is UXVs This module provides the necessary understanding, knowledge and skills for students of Robotics, Engineering and Artificial Intelligence to engage in the specification, operation, design and development of such robotic systems. Syllabus: [UXV systems] classification, remote sensing class, observation class, light work-class, intervention class:  electric, hydraulic, powered. [UXV sub systems] thrusters, manipulators, navigation and positioning, launch and recovery, tether management, pilot interfaces,  [UXV sensors] cameras, hyper-spectral imagers, sonar, lidar, radar. [Vehicle control] reference frames, transformations: plane rotations, earth cantered earth fixed (ECEF) to tangent plane, ECEF to geographic, vehicle to navigation frame, target referenced flight control, [Platform dynamics] 6 Degrees of Freedom (DOF) rigid body equation of motion and dynamics, hydrodynamics forces and moments, stability and control of ROVs,  state estimation, advanced control design, smart control (will AI students have the engineering background for the vehicle dynamics and control?  [UXV Applications / operations] survey, inspection, manipulation/intervention, piloting  [UXV support vessels/infrastructure  and operations] dynamic positioning - vessels and UXVs, roll/heave compensation, tether management systems, operations in challenging close quarter conditions, inspection maintenance and repair (IRM) challenges,  [Advanced Related Topics]  hardware-in-the-loop testing, survey planning and execution, maps and marine charts, reference frames, transformations, digital terrain models, [Laboratory Work] problem based laboratories will use a combination of mini UXV operation and flight control, UXV simulators, virtual and augmented reality environment, development exercises,  modelling and simulation of ROVs.","question":"What will I learn in the field robotics module?","answers":"{ \"text\": [ \"Artificial Intelligence and Machine Learning\" ], \"answer_start\": [ 216 ] }"},{"id":"193","title ":"FIELD_ROBOTICS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon successful completion of this module students should be able to: Recall and describe the function and characteristics of UXV robotic systems technology for field operations in airborne, surface, sub-sea, space domains. Describe, illustrate and evaluate UXV systems: propulsion system, navigation system, survey and inspection system, piloting and control environment.  Explain field operations support and UXV systems and background robotics technology: classes of UXV systems, Vehicle dynamics, navigation and control, Analyse UXV and support  vessel/platform system design requirements taking into account UXV dynamics, navigation and control for remote observation, inselection and intervention on stationary and  moving targets. Identify, describe and transform between different projections used in marine charting and mapping. Specify sonar/LIDAR/radar imaging and positioning system requirements for a given application.  Research, design, synthesise and demonstrate a simulated environment model of a UXV system.  Develop UXV mobilisation, deployment and inspection/intervention/survey plans. Describe and evaluate safety procedures in operations of UXV systems in the field and ethical considerations in field operations exploiting natural resources. Affective (Attitudes and Values) Upon successful completion of this module students will be able to: 1. Differentiate between various techniques for the modelling of unmanned or autonomous vehicles (UXVs)  2. Justify an appropriate technique to tackle a UXV modelling challenge. 3. Practice an objective approach to the selection of particular UXV operation and model parameters. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered normally using 2 lecture hours and 2 laboratory hours per week. Recent Research developments within the Centre for Robotics and Intelligent Systems (CRIS) will be presented during this module. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Fossen, T.I. (2012). Marine Control Rigs and Underwater Vehicles. Marine Cybernetics. Trondheim. (2012) Marine Control Systems - Guidance, Navigation and Control of Ships, Rigs and Underwater Vehicles. Marine Cybernetics, Trondheim University Press Other Texts: Farrell, J.  (2018) Aided Navigation: GPS with High Rate Sensors, McGraw Hill Professional Programmes MEECENTFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: Daniel.Toal@ul.ie","question":"What will I be able to do in the field robotics module?","answers":"{ \"text\": [ \"Recall and describe the function and characteristics of UXV robotic systems technology\" ], \"answer_start\": [ 1049 ] }"},{"id":"194","title ":"FIELD_ROBOTICS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon successful completion of this module students should be able to: Recall and describe the function and characteristics of UXV robotic systems technology for field operations in airborne, surface, sub-sea, space domains. Describe, illustrate and evaluate UXV systems: propulsion system, navigation system, survey and inspection system, piloting and control environment.  Explain field operations support and UXV systems and background robotics technology: classes of UXV systems, Vehicle dynamics, navigation and control, Analyse UXV and support  vessel/platform system design requirements taking into account UXV dynamics, navigation and control for remote observation, inselection and intervention on stationary and  moving targets. Identify, describe and transform between different projections used in marine charting and mapping. Specify sonar/LIDAR/radar imaging and positioning system requirements for a given application.  Research, design, synthesise and demonstrate a simulated environment model of a UXV system.  Develop UXV mobilisation, deployment and inspection/intervention/survey plans. Describe and evaluate safety procedures in operations of UXV systems in the field and ethical considerations in field operations exploiting natural resources. Affective (Attitudes and Values) Upon successful completion of this module students will be able to: 1. Differentiate between various techniques for the modelling of unmanned or autonomous vehicles (UXVs)  2. Justify an appropriate technique to tackle a UXV modelling challenge. 3. Practice an objective approach to the selection of particular UXV operation and model parameters. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered normally using 2 lecture hours and 2 laboratory hours per week. Recent Research developments within the Centre for Robotics and Intelligent Systems (CRIS) will be presented during this module. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Fossen, T.I. (2012). Marine Control Rigs and Underwater Vehicles. Marine Cybernetics. Trondheim. (2012) Marine Control Systems - Guidance, Navigation and Control of Ships, Rigs and Underwater Vehicles. Marine Cybernetics, Trondheim University Press Other Texts: Farrell, J.  (2018) Aided Navigation: GPS with High Rate Sensors, McGraw Hill Professional Programmes MEECENTFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: Daniel.Toal@ul.ie","question":"How the field robotics module is delivered?","answers":"{ \"text\": [ \"normally using 2 lecture hours and 2 laboratory hours per week\" ], \"answer_start\": [ 1205 ] }"},{"id":"195","title ":"FIELD_ROBOTICS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon successful completion of this module students should be able to: Recall and describe the function and characteristics of UXV robotic systems technology for field operations in airborne, surface, sub-sea, space domains. Describe, illustrate and evaluate UXV systems: propulsion system, navigation system, survey and inspection system, piloting and control environment.  Explain field operations support and UXV systems and background robotics technology: classes of UXV systems, Vehicle dynamics, navigation and control, Analyse UXV and support  vessel/platform system design requirements taking into account UXV dynamics, navigation and control for remote observation, inselection and intervention on stationary and  moving targets. Identify, describe and transform between different projections used in marine charting and mapping. Specify sonar/LIDAR/radar imaging and positioning system requirements for a given application.  Research, design, synthesise and demonstrate a simulated environment model of a UXV system.  Develop UXV mobilisation, deployment and inspection/intervention/survey plans. Describe and evaluate safety procedures in operations of UXV systems in the field and ethical considerations in field operations exploiting natural resources. Affective (Attitudes and Values) Upon successful completion of this module students will be able to: 1. Differentiate between various techniques for the modelling of unmanned or autonomous vehicles (UXVs)  2. Justify an appropriate technique to tackle a UXV modelling challenge. 3. Practice an objective approach to the selection of particular UXV operation and model parameters. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: This module will be delivered normally using 2 lecture hours and 2 laboratory hours per week. Recent Research developments within the Centre for Robotics and Intelligent Systems (CRIS) will be presented during this module. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Fossen, T.I. (2012). Marine Control Rigs and Underwater Vehicles. Marine Cybernetics. Trondheim. (2012) Marine Control Systems - Guidance, Navigation and Control of Ships, Rigs and Underwater Vehicles. Marine Cybernetics, Trondheim University Press Other Texts: Farrell, J.  (2018) Aided Navigation: GPS with High Rate Sensors, McGraw Hill Professional Programmes MEECENTFA - ELECTRONIC AND COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: Daniel.Toal@ul.ie","question":"How can I email the lecturer for the field robotics module?","answers":"{ \"text\": [ \"Daniel.Toal@ul.ie\" ], \"answer_start\": [ 1792 ] }"},{"id":"196","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Module Code - Title: CE6022 - DIGITAL TEST AND MEASUREMENT Prerequisite Modules: Rationale and Purpose of the Module: This module is aimed at meeting Continued Professional Development (CPD) needs for practicing engineers in test and test development within the semiconductor industry. This is a standalone module for engineers working in the semiconductor industry. The specific focus of the module is in digital Integrated Circuit (IC) test. The role of the test engineer is becoming ever more diverse with activities that link into design and IC fabrication. In this module, the role of test and test development engineering will be introduced and discussed in relation to their integration within a modern semiconductor company. The actions undertaken within the role of test will be discussed and the types of tests to be undertaken to identify the operation of digital ICs will be elaborated. Syllabus: IC technology: Rationale for test; Defects (spot defects and process variations); Fault modelling (Stuck-at fault, bridging fault, IDDQ fault, delay fault). Digital IC test and measurement: Functional versus structural test; Test pattern generation: manual, fault simulation, Automatic Test Pattern Generation (ATPG); Production test. Digital circuit considerations: Combinational logic test; Sequential logic test; Memory (RAM) test; Memory (ROM) test; Parametric testing (analog considerations for digital I/O and power supply current); Processor test approaches; System on a Chip (SoC) test approaches. DfT and BIST: Design for Testability (DfT); Built-In Self-Test (BIST). Key IEEE standards: 1149.1; 1149.4; 1500; 1687.","question":"What is the code for the digital test and measurement module?","answers":"{ \"text\": [ \"CE6022\" ], \"answer_start\": [ 21 ] }"},{"id":"197","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Module Code - Title: CE6022 - DIGITAL TEST AND MEASUREMENT Prerequisite Modules: Rationale and Purpose of the Module: This module is aimed at meeting Continued Professional Development (CPD) needs for practicing engineers in test and test development within the semiconductor industry. This is a standalone module for engineers working in the semiconductor industry. The specific focus of the module is in digital Integrated Circuit (IC) test. The role of the test engineer is becoming ever more diverse with activities that link into design and IC fabrication. In this module, the role of test and test development engineering will be introduced and discussed in relation to their integration within a modern semiconductor company. The actions undertaken within the role of test will be discussed and the types of tests to be undertaken to identify the operation of digital ICs will be elaborated. Syllabus: IC technology: Rationale for test; Defects (spot defects and process variations); Fault modelling (Stuck-at fault, bridging fault, IDDQ fault, delay fault). Digital IC test and measurement: Functional versus structural test; Test pattern generation: manual, fault simulation, Automatic Test Pattern Generation (ATPG); Production test. Digital circuit considerations: Combinational logic test; Sequential logic test; Memory (RAM) test; Memory (ROM) test; Parametric testing (analog considerations for digital I/O and power supply current); Processor test approaches; System on a Chip (SoC) test approaches. DfT and BIST: Design for Testability (DfT); Built-In Self-Test (BIST). Key IEEE standards: 1149.1; 1149.4; 1500; 1687.","question":"What is the aim of the digital test and measurement module?","answers":"{ \"text\": [ \"meeting Continued Professional Development (CPD) needs\" ], \"answer_start\": [ 726 ] }"},{"id":"198","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Module Code - Title: CE6022 - DIGITAL TEST AND MEASUREMENT Prerequisite Modules: Rationale and Purpose of the Module: This module is aimed at meeting Continued Professional Development (CPD) needs for practicing engineers in test and test development within the semiconductor industry. This is a standalone module for engineers working in the semiconductor industry. The specific focus of the module is in digital Integrated Circuit (IC) test. The role of the test engineer is becoming ever more diverse with activities that link into design and IC fabrication. In this module, the role of test and test development engineering will be introduced and discussed in relation to their integration within a modern semiconductor company. The actions undertaken within the role of test will be discussed and the types of tests to be undertaken to identify the operation of digital ICs will be elaborated. Syllabus: IC technology: Rationale for test; Defects (spot defects and process variations); Fault modelling (Stuck-at fault, bridging fault, IDDQ fault, delay fault). Digital IC test and measurement: Functional versus structural test; Test pattern generation: manual, fault simulation, Automatic Test Pattern Generation (ATPG); Production test. Digital circuit considerations: Combinational logic test; Sequential logic test; Memory (RAM) test; Memory (ROM) test; Parametric testing (analog considerations for digital I/O and power supply current); Processor test approaches; System on a Chip (SoC) test approaches. DfT and BIST: Design for Testability (DfT); Built-In Self-Test (BIST). Key IEEE standards: 1149.1; 1149.4; 1500; 1687.","question":"What will I learn in the digital test and measurement module?","answers":"{ \"text\": [ \"Functional versus structural test\" ], \"answer_start\": [ 368 ] }"},{"id":"199","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Discuss how electronic circuits and systems are tested. 2. Examine failure mechanisms in electronic circuits and systems. 3. Describe how test programs are developed for digital Integrated Circuits (ICs). Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Show the need for effective testing procedures and the impact of decisions on test quality and cost. 2. Acknowledge the need to develop high quality and cost-effective test procedures within an organization. 3. Discuss how real-world non-ideal electronic circuit behavior will affect the test results obtained during test program operation. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: 1. Test digital circuits using simulation models and physical prototypes. 2. Perform tests on a digital IC circuit design and analyze the results. 3. Deliver test results in a suitable manner. How the Module will be Taught and what will be the Learning Experiences of the Students: This module is offered to practicing engineers working in digital Integrated Circuit (IC) test and test development activities. The module will be taught using a blended approach using on-campus face-to-face teaching and online using an appropriate Learning Management System (LMS). The module will be run outside the normal Central Scheduling System and will be based on an initial on-campus day in week 1, online activities in weeks 2 to 14, and a final on-campus day in week 15. The required laboratory equipment to undertake the module will be provided to the participants in week 1, and this equipment will be returned after a final project presentation in week 15. The module assessment will be based on the submission of weekly reports, a project with final report and demonstration, and an end of semester examination. The end of semester examination does not require a centrally scheduled examination as this will be in the form of a test that will be undertaken alongside project presentations and will be organized within the Department of Electronic and Computer Engineering. Application to Graduate Attributes: Curious Through the range of learning activities, particularly the problem-solving laboratory and tutorial sessions, the participants would develop problem-solving skills when applying theory to practice. The presented problems would allow the participants to gain knowledge at an initial high level before developing in-depth understanding as presented problems are understood in more detail and overcome. Agile The participants would be working individually and in the main, through an online presence. As such, they would be responsible for developing independent learning portfolios which, when problem-solving, would require adaptation to the individually developed learning schedule and which would depend on the individual progress on a week-by-week basis. Courageous The participants would be working individually and in the main, through an online presence. This module would be undertaken alongside workplace commitments. Such an approach to learning would require the development of resilience in order to successfully undertake the module as well as tenaciousness in order to persist with the module requirements and successfully complete the module. Responsible As this is a CPD course for industry, the participants are employees of the companies that are sponsoring them. As such, they would naturally be responsible in their actions as the module is part of their company training programme.\nArticulate The participants would be working on the module as well as undertaking their workplace commitments. This would require the development of strong intra-personal skills in order to successfully undertake and complete the module. In addition, during the online sessions, questions arising would be formulated and communicated via the Learning Management System (LMS) Chat function. This would require the formulation of questions that are clearly defined and which would be understood by the other participants in the online sessions. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nBushnell M. and Agrawal V. (2000) Electronic Testing for Digital, Memory and Mixed Signal VLSI Circuits, Kluwer Academic Publishers IEEE (2022) Relevant IEEE standards related to IC test and measurement. Standard documents are available online via IEEE Xplore through the Glucksman Library (IEEE Std 1149.1, IEEE Std 1149.4, IEEE Std 1500, IEEE Std 1687), IEEE IEEE (2022) Relevant IEEE conference and journal papers available online via IEEE Xplore through the Glucksman Library., IEEE Other Texts: Laung-Terng Wang, Cheng-Wen Wu, Xiaoqing Wen (2006) VLSI Test Principles and Archiectures, Elsevier Inc. Programmes Semester(s) Module is Offered: Autumn Spring Module Leader: Ian.Grout@ul.ie","question":"What skills will I learn in the digital test and measurement module?","answers":"{ \"text\": [ \"intra-personal skills\" ], \"answer_start\": [ 172 ] }"},{"id":"200","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Discuss how electronic circuits and systems are tested. 2. Examine failure mechanisms in electronic circuits and systems. 3. Describe how test programs are developed for digital Integrated Circuits (ICs). Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Show the need for effective testing procedures and the impact of decisions on test quality and cost. 2. Acknowledge the need to develop high quality and cost-effective test procedures within an organization. 3. Discuss how real-world non-ideal electronic circuit behavior will affect the test results obtained during test program operation. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: 1. Test digital circuits using simulation models and physical prototypes. 2. Perform tests on a digital IC circuit design and analyze the results. 3. Deliver test results in a suitable manner. How the Module will be Taught and what will be the Learning Experiences of the Students: This module is offered to practicing engineers working in digital Integrated Circuit (IC) test and test development activities. The module will be taught using a blended approach using on-campus face-to-face teaching and online using an appropriate Learning Management System (LMS). The module will be run outside the normal Central Scheduling System and will be based on an initial on-campus day in week 1, online activities in weeks 2 to 14, and a final on-campus day in week 15. The required laboratory equipment to undertake the module will be provided to the participants in week 1, and this equipment will be returned after a final project presentation in week 15. The module assessment will be based on the submission of weekly reports, a project with final report and demonstration, and an end of semester examination. The end of semester examination does not require a centrally scheduled examination as this will be in the form of a test that will be undertaken alongside project presentations and will be organized within the Department of Electronic and Computer Engineering. Application to Graduate Attributes: Curious Through the range of learning activities, particularly the problem-solving laboratory and tutorial sessions, the participants would develop problem-solving skills when applying theory to practice. The presented problems would allow the participants to gain knowledge at an initial high level before developing in-depth understanding as presented problems are understood in more detail and overcome. Agile The participants would be working individually and in the main, through an online presence. As such, they would be responsible for developing independent learning portfolios which, when problem-solving, would require adaptation to the individually developed learning schedule and which would depend on the individual progress on a week-by-week basis. Courageous The participants would be working individually and in the main, through an online presence. This module would be undertaken alongside workplace commitments. Such an approach to learning would require the development of resilience in order to successfully undertake the module as well as tenaciousness in order to persist with the module requirements and successfully complete the module. Responsible As this is a CPD course for industry, the participants are employees of the companies that are sponsoring them. As such, they would naturally be responsible in their actions as the module is part of their company training programme.\nArticulate The participants would be working on the module as well as undertaking their workplace commitments. This would require the development of strong intra-personal skills in order to successfully undertake and complete the module. In addition, during the online sessions, questions arising would be formulated and communicated via the Learning Management System (LMS) Chat function. This would require the formulation of questions that are clearly defined and which would be understood by the other participants in the online sessions. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nBushnell M. and Agrawal V. (2000) Electronic Testing for Digital, Memory and Mixed Signal VLSI Circuits, Kluwer Academic Publishers IEEE (2022) Relevant IEEE standards related to IC test and measurement. Standard documents are available online via IEEE Xplore through the Glucksman Library (IEEE Std 1149.1, IEEE Std 1149.4, IEEE Std 1500, IEEE Std 1687), IEEE IEEE (2022) Relevant IEEE conference and journal papers available online via IEEE Xplore through the Glucksman Library., IEEE Other Texts: Laung-Terng Wang, Cheng-Wen Wu, Xiaoqing Wen (2006) VLSI Test Principles and Archiectures, Elsevier Inc. Programmes Semester(s) Module is Offered: Autumn Spring Module Leader: Ian.Grout@ul.ie","question":"How the digital test and measurement module is delivered?","answers":"{ \"text\": [ \"on-campus face-to-face teaching\" ], \"answer_start\": [ 1900 ] }"},{"id":"201","title ":"DIGITAL_TEST_AND_MEASUREMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Discuss how electronic circuits and systems are tested. 2. Examine failure mechanisms in electronic circuits and systems. 3. Describe how test programs are developed for digital Integrated Circuits (ICs). Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Show the need for effective testing procedures and the impact of decisions on test quality and cost. 2. Acknowledge the need to develop high quality and cost-effective test procedures within an organization. 3. Discuss how real-world non-ideal electronic circuit behavior will affect the test results obtained during test program operation. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: 1. Test digital circuits using simulation models and physical prototypes. 2. Perform tests on a digital IC circuit design and analyze the results. 3. Deliver test results in a suitable manner. How the Module will be Taught and what will be the Learning Experiences of the Students: This module is offered to practicing engineers working in digital Integrated Circuit (IC) test and test development activities. The module will be taught using a blended approach using on-campus face-to-face teaching and online using an appropriate Learning Management System (LMS). The module will be run outside the normal Central Scheduling System and will be based on an initial on-campus day in week 1, online activities in weeks 2 to 14, and a final on-campus day in week 15. The required laboratory equipment to undertake the module will be provided to the participants in week 1, and this equipment will be returned after a final project presentation in week 15. The module assessment will be based on the submission of weekly reports, a project with final report and demonstration, and an end of semester examination. The end of semester examination does not require a centrally scheduled examination as this will be in the form of a test that will be undertaken alongside project presentations and will be organized within the Department of Electronic and Computer Engineering. Application to Graduate Attributes: Curious Through the range of learning activities, particularly the problem-solving laboratory and tutorial sessions, the participants would develop problem-solving skills when applying theory to practice. The presented problems would allow the participants to gain knowledge at an initial high level before developing in-depth understanding as presented problems are understood in more detail and overcome. Agile The participants would be working individually and in the main, through an online presence. As such, they would be responsible for developing independent learning portfolios which, when problem-solving, would require adaptation to the individually developed learning schedule and which would depend on the individual progress on a week-by-week basis. Courageous The participants would be working individually and in the main, through an online presence. This module would be undertaken alongside workplace commitments. Such an approach to learning would require the development of resilience in order to successfully undertake the module as well as tenaciousness in order to persist with the module requirements and successfully complete the module. Responsible As this is a CPD course for industry, the participants are employees of the companies that are sponsoring them. As such, they would naturally be responsible in their actions as the module is part of their company training programme.\nArticulate The participants would be working on the module as well as undertaking their workplace commitments. This would require the development of strong intra-personal skills in order to successfully undertake and complete the module. In addition, during the online sessions, questions arising would be formulated and communicated via the Learning Management System (LMS) Chat function. This would require the formulation of questions that are clearly defined and which would be understood by the other participants in the online sessions. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nBushnell M. and Agrawal V. (2000) Electronic Testing for Digital, Memory and Mixed Signal VLSI Circuits, Kluwer Academic Publishers IEEE (2022) Relevant IEEE standards related to IC test and measurement. Standard documents are available online via IEEE Xplore through the Glucksman Library (IEEE Std 1149.1, IEEE Std 1149.4, IEEE Std 1500, IEEE Std 1687), IEEE IEEE (2022) Relevant IEEE conference and journal papers available online via IEEE Xplore through the Glucksman Library., IEEE Other Texts: Laung-Terng Wang, Cheng-Wen Wu, Xiaoqing Wen (2006) VLSI Test Principles and Archiectures, Elsevier Inc. Programmes Semester(s) Module is Offered: Autumn Spring Module Leader: Ian.Grout@ul.ie","question":"What tools will I learn in the digital test and measurement module?","answers":"{ \"text\": [ \"simulation models and physical prototypes\" ], \"answer_start\": [ 2636 ] }"},{"id":"202","title ":"COMPUTER_VISION_SYSTEMS","context":"Module Code - Title: CE6023 - COMPUTER VISION SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module:\nThis module equips the student with an understanding of and associated skills for the development of real-world robust computer vision systems. This will also bridge the gap between domain knowledge and the successful application of that knowledge in computer vision. Syllabus: Part 1: Architectural Design Elements of all Computer Vision Systems (Basic component selection and video chain) Part 2: Camera Design Basics of optics: how does a lens work? Application Field of View (wide automotive, narrow industrial or medical) Lighting and light sources (controlled or uncontrolled?) The image sensor: How does an image sensor work, colour, Colour Filter Arrays (including Bayer pattern and hyperspectral), CMOS and CCD, electronic shutter, Rolling vs Global Shutter, SPAD, noise and sensitivity considerations, pixel resolutions, IR/hybrid spectral architectures, matching a sensor to an application Image Signal Processing: ADC, Exposure, Gain, Demosaicking, Denoise, Edge Enhancement, Control Loop structuring Part 3: The transmission medium  Digital and analogue: PAL/NTSC, Serialisation/Deserialisation, LVDS, Bandwidths, Slew, EMC, Shielding, Bit depth, bandwidths Transmission formats: components of an analogue signal, components of a digital signal, Interlaced/progressive/flyback, resolutions, security, encryption, Transmission over ethernet: compression (do we need all the bits?), internet connected camera, lock-loss, lock loss handling, IEEE1722 multimedia handling Part 4: The central processing hub Types of processing: image enhancement - example image filters, computer vision - example face detection, image rendering, high dynamic range (HDR) imaging - example automotive top view, augmented reality Image processing units - GPUs, DSPs, SoCs, host control, diagnostics Memory consideration - memory bandwidth, memory size, hierarchical memories Latency - how fast do you need to act on image data? Part 5: The onward interface (Human Viewing and Computer Vision)  Display technology, rendering for human consumption (images + overlays), human vision system (HVS), perception Computer Vision considerations - calibration, dropout handling, determination of KPIs for an application in the context of the vision system  Storage - for many applications, we record the image for later use and consumption Control signals - robotic, automotive control  Part 6 : Computer Vision System Design Functional Requirements Engineering for a Computer Vision System Hierarchical Design considerations for generation of Non-Functional Requirements and Test Cases, HLDs/LLDs, Standards and SIL considerations Stakeholders, Planning and RASICs Part 7: Formalisms of Computer Vision System Tuning, Verification, Validation, Debugging, Releasing Reviews, Testing and Debugging - DVP&R, FMEA, PDCA, Change Requests, Sign-off, Maintenance","question":"What is the code for the computer vision systems module?","answers":"{ \"text\": [ \"CE6023\" ], \"answer_start\": [ 21 ] }"},{"id":"203","title ":"COMPUTER_VISION_SYSTEMS","context":"Module Code - Title: CE6023 - COMPUTER VISION SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module:\nThis module equips the student with an understanding of and associated skills for the development of real-world robust computer vision systems. This will also bridge the gap between domain knowledge and the successful application of that knowledge in computer vision. Syllabus: Part 1: Architectural Design Elements of all Computer Vision Systems (Basic component selection and video chain) Part 2: Camera Design Basics of optics: how does a lens work? Application Field of View (wide automotive, narrow industrial or medical) Lighting and light sources (controlled or uncontrolled?) The image sensor: How does an image sensor work, colour, Colour Filter Arrays (including Bayer pattern and hyperspectral), CMOS and CCD, electronic shutter, Rolling vs Global Shutter, SPAD, noise and sensitivity considerations, pixel resolutions, IR/hybrid spectral architectures, matching a sensor to an application Image Signal Processing: ADC, Exposure, Gain, Demosaicking, Denoise, Edge Enhancement, Control Loop structuring Part 3: The transmission medium  Digital and analogue: PAL/NTSC, Serialisation/Deserialisation, LVDS, Bandwidths, Slew, EMC, Shielding, Bit depth, bandwidths Transmission formats: components of an analogue signal, components of a digital signal, Interlaced/progressive/flyback, resolutions, security, encryption, Transmission over ethernet: compression (do we need all the bits?), internet connected camera, lock-loss, lock loss handling, IEEE1722 multimedia handling Part 4: The central processing hub Types of processing: image enhancement - example image filters, computer vision - example face detection, image rendering, high dynamic range (HDR) imaging - example automotive top view, augmented reality Image processing units - GPUs, DSPs, SoCs, host control, diagnostics Memory consideration - memory bandwidth, memory size, hierarchical memories Latency - how fast do you need to act on image data? Part 5: The onward interface (Human Viewing and Computer Vision)  Display technology, rendering for human consumption (images + overlays), human vision system (HVS), perception Computer Vision considerations - calibration, dropout handling, determination of KPIs for an application in the context of the vision system  Storage - for many applications, we record the image for later use and consumption Control signals - robotic, automotive control  Part 6 : Computer Vision System Design Functional Requirements Engineering for a Computer Vision System Hierarchical Design considerations for generation of Non-Functional Requirements and Test Cases, HLDs/LLDs, Standards and SIL considerations Stakeholders, Planning and RASICs Part 7: Formalisms of Computer Vision System Tuning, Verification, Validation, Debugging, Releasing Reviews, Testing and Debugging - DVP&R, FMEA, PDCA, Change Requests, Sign-off, Maintenance","question":"What is the aim of the computer vision systems module?","answers":"{ \"text\": [ \"equips the student with an understanding of and associated skills\" ], \"answer_start\": [ 142 ] }"},{"id":"204","title ":"COMPUTER_VISION_SYSTEMS","context":"Module Code - Title: CE6023 - COMPUTER VISION SYSTEMS Prerequisite Modules: Rationale and Purpose of the Module:\nThis module equips the student with an understanding of and associated skills for the development of real-world robust computer vision systems. This will also bridge the gap between domain knowledge and the successful application of that knowledge in computer vision. Syllabus: Part 1: Architectural Design Elements of all Computer Vision Systems (Basic component selection and video chain) Part 2: Camera Design Basics of optics: how does a lens work? Application Field of View (wide automotive, narrow industrial or medical) Lighting and light sources (controlled or uncontrolled?) The image sensor: How does an image sensor work, colour, Colour Filter Arrays (including Bayer pattern and hyperspectral), CMOS and CCD, electronic shutter, Rolling vs Global Shutter, SPAD, noise and sensitivity considerations, pixel resolutions, IR/hybrid spectral architectures, matching a sensor to an application Image Signal Processing: ADC, Exposure, Gain, Demosaicking, Denoise, Edge Enhancement, Control Loop structuring Part 3: The transmission medium  Digital and analogue: PAL/NTSC, Serialisation/Deserialisation, LVDS, Bandwidths, Slew, EMC, Shielding, Bit depth, bandwidths Transmission formats: components of an analogue signal, components of a digital signal, Interlaced/progressive/flyback, resolutions, security, encryption, Transmission over ethernet: compression (do we need all the bits?), internet connected camera, lock-loss, lock loss handling, IEEE1722 multimedia handling Part 4: The central processing hub Types of processing: image enhancement - example image filters, computer vision - example face detection, image rendering, high dynamic range (HDR) imaging - example automotive top view, augmented reality Image processing units - GPUs, DSPs, SoCs, host control, diagnostics Memory consideration - memory bandwidth, memory size, hierarchical memories Latency - how fast do you need to act on image data? Part 5: The onward interface (Human Viewing and Computer Vision)  Display technology, rendering for human consumption (images + overlays), human vision system (HVS), perception Computer Vision considerations - calibration, dropout handling, determination of KPIs for an application in the context of the vision system  Storage - for many applications, we record the image for later use and consumption Control signals - robotic, automotive control  Part 6 : Computer Vision System Design Functional Requirements Engineering for a Computer Vision System Hierarchical Design considerations for generation of Non-Functional Requirements and Test Cases, HLDs/LLDs, Standards and SIL considerations Stakeholders, Planning and RASICs Part 7: Formalisms of Computer Vision System Tuning, Verification, Validation, Debugging, Releasing Reviews, Testing and Debugging - DVP&R, FMEA, PDCA, Change Requests, Sign-off, Maintenance","question":"What will I learn in the computer vision systems module?","answers":"{ \"text\": [ \"understanding of and associated skills\" ], \"answer_start\": [ 1099 ] }"},{"id":"205","title ":"COMPUTER_VISION_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: - Develop and validate computer vision system elements for a variety of applications ranging from industrial machine vision, robotics and automotive self-driving to medical, marine and aerospace. - Contribute directly to the development of robust real-world production-level computer vision systems - Collaborate on a computer vision system development team through an understanding and appreciation of the contributions of other computer vision system stakeholders - Perform critical evaluations of the trade-offs and choices of system elements for a computer vision system application Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Contribute productively on a computer vision system development team to create computer vision systems for robotics, automated driving, marine, medical and aerospace applications Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be developed with a blended approach, with a combination of recorded lectures and seminars, and face-to-face lab and tutorial work. The form will be 2 hours of recorded lectures per week. Face to face time will be in a 2 hour lab and 1 hour tutorial format. There will also be contributions from other experts in the field as a supporting activity in the seminar/Q&A phases. It is intended to revisit the syllabus after first delivery of the module. The module will be designed for first delivery according to the current syllabus Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: INCOSE (2012) Systems Engineering Handbook: A Guide for System Life Cycle Processes and Activities, version 3.2.2.,  International Council on Systems Engineering (INCOSE) Eugene Hecht (2017) Optics, Pearson Education Holst & Lomheim (2011) CMOS/CCD Sensors and Camera Systems, SPIE Charles Poynton (2007) Digital Video and HDTV - Algorithms and Interfaces, Morgan Kaufman Publishers Malepati (2010) Digital Media Processing - DSP Algorithms Using C, Newnes Elsevier Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Generic PRS","question":"What will I be able to do in the computer vision systems module?","answers":"{ \"text\": [ \"Develop and validate computer vision system elements\" ], \"answer_start\": [ 3888 ] }"},{"id":"206","title ":"COMPUTER_VISION_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: - Develop and validate computer vision system elements for a variety of applications ranging from industrial machine vision, robotics and automotive self-driving to medical, marine and aerospace. - Contribute directly to the development of robust real-world production-level computer vision systems - Collaborate on a computer vision system development team through an understanding and appreciation of the contributions of other computer vision system stakeholders - Perform critical evaluations of the trade-offs and choices of system elements for a computer vision system application Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Contribute productively on a computer vision system development team to create computer vision systems for robotics, automated driving, marine, medical and aerospace applications Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be developed with a blended approach, with a combination of recorded lectures and seminars, and face-to-face lab and tutorial work. The form will be 2 hours of recorded lectures per week. Face to face time will be in a 2 hour lab and 1 hour tutorial format. There will also be contributions from other experts in the field as a supporting activity in the seminar/Q&A phases. It is intended to revisit the syllabus after first delivery of the module. The module will be designed for first delivery according to the current syllabus Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: INCOSE (2012) Systems Engineering Handbook: A Guide for System Life Cycle Processes and Activities, version 3.2.2.,  International Council on Systems Engineering (INCOSE) Eugene Hecht (2017) Optics, Pearson Education Holst & Lomheim (2011) CMOS/CCD Sensors and Camera Systems, SPIE Charles Poynton (2007) Digital Video and HDTV - Algorithms and Interfaces, Morgan Kaufman Publishers Malepati (2010) Digital Media Processing - DSP Algorithms Using C, Newnes Elsevier Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Generic PRS","question":"How the computer vision systems module will be taught?","answers":"{ \"text\": [ \"The module will be developed with a blended approach\" ], \"answer_start\": [ 1385 ] }"},{"id":"207","title ":"COMPUTER_VISION_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: - Develop and validate computer vision system elements for a variety of applications ranging from industrial machine vision, robotics and automotive self-driving to medical, marine and aerospace. - Contribute directly to the development of robust real-world production-level computer vision systems - Collaborate on a computer vision system development team through an understanding and appreciation of the contributions of other computer vision system stakeholders - Perform critical evaluations of the trade-offs and choices of system elements for a computer vision system application Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Contribute productively on a computer vision system development team to create computer vision systems for robotics, automated driving, marine, medical and aerospace applications Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be developed with a blended approach, with a combination of recorded lectures and seminars, and face-to-face lab and tutorial work. The form will be 2 hours of recorded lectures per week. Face to face time will be in a 2 hour lab and 1 hour tutorial format. There will also be contributions from other experts in the field as a supporting activity in the seminar/Q&A phases. It is intended to revisit the syllabus after first delivery of the module. The module will be designed for first delivery according to the current syllabus Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: INCOSE (2012) Systems Engineering Handbook: A Guide for System Life Cycle Processes and Activities, version 3.2.2.,  International Council on Systems Engineering (INCOSE) Eugene Hecht (2017) Optics, Pearson Education Holst & Lomheim (2011) CMOS/CCD Sensors and Camera Systems, SPIE Charles Poynton (2007) Digital Video and HDTV - Algorithms and Interfaces, Morgan Kaufman Publishers Malepati (2010) Digital Media Processing - DSP Algorithms Using C, Newnes Elsevier Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Generic PRS","question":"What are the books that I need for the computer vision systems module?","answers":"{ \"text\": [ \"Prime Texts: INCOSE (2012) Systems Engineering Handbook\" ], \"answer_start\": [ 949 ] }"},{"id":"208","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE6025 - MASTER OF ENGINEERING PROJECT - COMPUTER VISION AND ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which involves an advanced design and implementation task related to Computer Vision and Artificial Intelligence Syllabus: The project is a significant engineering task, involving research, design, and implementation related to a selected problem in Computer Vision and/or Artificial Intelligence. Projects are normally undertaken individually by students, although group project work is also allowed. Each project student (or project group) works under the supervision of an academic staff member who is responsible for the overall direction of the project. The project definition, including goals, methodologies, and expected deliverables will be documented and formally approved by the course leader and academic supervisor prior to the commencement of the work. Each student is required to submit a formal project report/paper on the outcomes of the work.","question":"What is the code for the master of engineering project computer vision and artificial intelligence module?","answers":"{ \"text\": [ \"CE6025\" ], \"answer_start\": [ 21 ] }"},{"id":"209","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE6025 - MASTER OF ENGINEERING PROJECT - COMPUTER VISION AND ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which involves an advanced design and implementation task related to Computer Vision and Artificial Intelligence Syllabus: The project is a significant engineering task, involving research, design, and implementation related to a selected problem in Computer Vision and/or Artificial Intelligence. Projects are normally undertaken individually by students, although group project work is also allowed. Each project student (or project group) works under the supervision of an academic staff member who is responsible for the overall direction of the project. The project definition, including goals, methodologies, and expected deliverables will be documented and formally approved by the course leader and academic supervisor prior to the commencement of the work. Each student is required to submit a formal project report/paper on the outcomes of the work.","question":"What is the aim of the master of engineering project computer vision and artificial intelligence module?","answers":"{ \"text\": [ \"To undertake a significant project, , which involves an advanced design and implementation task related to Computer Vision and Artificial Intelligence\" ], \"answer_start\": [ 125 ] }"},{"id":"210","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: CE6025 - MASTER OF ENGINEERING PROJECT - COMPUTER VISION AND ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which involves an advanced design and implementation task related to Computer Vision and Artificial Intelligence Syllabus: The project is a significant engineering task, involving research, design, and implementation related to a selected problem in Computer Vision and/or Artificial Intelligence. Projects are normally undertaken individually by students, although group project work is also allowed. Each project student (or project group) works under the supervision of an academic staff member who is responsible for the overall direction of the project. The project definition, including goals, methodologies, and expected deliverables will be documented and formally approved by the course leader and academic supervisor prior to the commencement of the work. Each student is required to submit a formal project report/paper on the outcomes of the work.","question":"How is the project in the master of engineering project computer vision and artificial intelligence module?","answers":"{ \"text\": [ \"research, design, and implementation\" ], \"answer_start\": [ 152 ] }"},{"id":"211","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Choose and progress a methodology appropriate to the research problem. 2. Demonstrate a set of research skills including developing a research question, sourcing information, analysis, interpretation, and project management. 3. Critically evaluate and assess undertaken work by comparing it to the published literature in the field. 4. Present the self-directed research that they have undertaken into complex and emerging areas to define potential problems. 5. Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic. 6. Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes, and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Develop and/or demonstrate self motivation. 2. Develop and/or demonstrate competencies in time management and project management Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study with regular discussions with the academic supervisor. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Summer Module Leader: ciaran.eising@ul.ie","question":"What will I be able to do in the master of engineering project computer vision and artificial intelligence module?","answers":"{ \"text\": [ \"Choose and progress a methodology appropriate to the research problem\" ], \"answer_start\": [ 171 ] }"},{"id":"212","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Choose and progress a methodology appropriate to the research problem. 2. Demonstrate a set of research skills including developing a research question, sourcing information, analysis, interpretation, and project management. 3. Critically evaluate and assess undertaken work by comparing it to the published literature in the field. 4. Present the self-directed research that they have undertaken into complex and emerging areas to define potential problems. 5. Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic. 6. Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes, and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Develop and/or demonstrate self motivation. 2. Develop and/or demonstrate competencies in time management and project management Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study with regular discussions with the academic supervisor. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Summer\nModule Leader: ciaran.eising@ul.ie","question":"How will the master of engineering project computer vision and artificial intelligence module be taught?","answers":"{ \"text\": [ \"Self-study with regular discussions with the academic supervisor\" ], \"answer_start\": [ 1160 ] }"},{"id":"213","title ":"MASTER_OF_ENGINEERING_PROJECT - COMPUTER_VISION_AND_ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Choose and progress a methodology appropriate to the research problem. 2. Demonstrate a set of research skills including developing a research question, sourcing information, analysis, interpretation, and project management. 3. Critically evaluate and assess undertaken work by comparing it to the published literature in the field. 4. Present the self-directed research that they have undertaken into complex and emerging areas to define potential problems. 5. Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic. 6. Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes, and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: 1. Develop and/or demonstrate self motivation. 2. Develop and/or demonstrate competencies in time management and project management Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study with regular discussions with the academic supervisor. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Summer\r\nModule Leader: ciaran.eising@ul.ie","question":"How can I contact the lecturer for the master of engineering project computer vision and artificial intelligence module?","answers":"{ \"text\": [ \"ciaran.eising@ul.ie\" ], \"answer_start\": [ 1772 ] }"},{"id":"214","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Module Code - Title: CE6026 - INTRODUCTION TO ENGINEERING RESEARCH METHODS Rationale and Purpose of the Module: This module is part of the Master Of Engineering In Computer Vision And Artificial Intelligence programme. For those who take the project option, this module will support students in finding a suitable research topic, develop a detailed project specification, and prepare students for the academic writing of their Masters Project report. For students that take the Digital Futures and Innovation stream, this module will support the students in preparing for the modules in that stream. The module covers essential topics for both streams, such as research methods, literature surveys, project planning, strategic foresight, and market analysis. Syllabus: The student will be expected to develop their own project title and description over the course of the module and will complete background reading, research community engagement, and project planning tasks. Alternatively, the student is expected to undertake research tasks to prepare themselves for the Digital Futures and Innovation (DFI) stream of the programme.The student will be expected to:- (i) Develop a specification document for their chosen project that provides a clear statement of the work that will be carried out during the project. (Project Stream) -or- Develop a short market analysis portfolio for a given technical topic. (DFI Stream) (ii) Identify suitable background material for a literature survey, and develop the literature survey to a high standard. (iii) Present and answer questions on the project specification in front of a panel of academics. (iv) Attend several seminars on research practices, presentation skills, and report writing, as well as industry guest talks. This module also introduces the student to the concept of peer review. The student will be required to share the outputs of many of their tasks with other students in the module, and they are required to critically appraise the work of others. (v) Produce a development plan, including timelines, task identification, and resource requirements, whether that is for the project stream or the DFI stream","question":"What is the code for the introduction to engineering research methods module?","answers":"{ \"text\": [ \"CE6026\" ], \"answer_start\": [ 21 ] }"},{"id":"215","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Module Code - Title: CE6026 - INTRODUCTION TO ENGINEERING RESEARCH METHODS Rationale and Purpose of the Module: This module is part of the Master Of Engineering In Computer Vision And Artificial Intelligence programme. For those who take the project option, this module will support students in finding a suitable research topic, develop a detailed project specification, and prepare students for the academic writing of their Masters Project report. For students that take the Digital Futures and Innovation stream, this module will support the students in preparing for the modules in that stream. The module covers essential topics for both streams, such as research methods, literature surveys, project planning, strategic foresight, and market analysis. Syllabus: The student will be expected to develop their own project title and description over the course of the module and will complete background reading, research community engagement, and project planning tasks. Alternatively, the student is expected to undertake research tasks to prepare themselves for the Digital Futures and Innovation (DFI) stream of the programme.The student will be expected to:- (i) Develop a specification document for their chosen project that provides a clear statement of the work that will be carried out during the project. (Project Stream) -or- Develop a short market analysis portfolio for a given technical topic. (DFI Stream) (ii) Identify suitable background material for a literature survey, and develop the literature survey to a high standard. (iii) Present and answer questions on the project specification in front of a panel of academics. (iv) Attend several seminars on research practices, presentation skills, and report writing, as well as industry guest talks. This module also introduces the student to the concept of peer review. The student will be required to share the outputs of many of their tasks with other students in the module, and they are required to critically appraise the work of others. (v) Produce a development plan, including timelines, task identification, and resource requirements, whether that is for the project stream or the DFI stream","question":"What is the aim of the introduction to engineering research methods module?","answers":"{ \"text\": [ \"finding a suitable research topic\" ], \"answer_start\": [ 295 ] }"},{"id":"216","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Module Code - Title: CE6026 - INTRODUCTION TO ENGINEERING RESEARCH METHODS Rationale and Purpose of the Module: This module is part of the Master Of Engineering In Computer Vision And Artificial Intelligence programme. For those who take the project option, this module will support students in finding a suitable research topic, develop a detailed project specification, and prepare students for the academic writing of their Masters Project report. For students that take the Digital Futures and Innovation stream, this module will support the students in preparing for the modules in that stream. The module covers essential topics for both streams, such as research methods, literature surveys, project planning, strategic foresight, and market analysis. Syllabus: The student will be expected to develop their own project title and description over the course of the module and will complete background reading, research community engagement, and project planning tasks. Alternatively, the student is expected to undertake research tasks to prepare themselves for the Digital Futures and Innovation (DFI) stream of the programme.The student will be expected to:- (i) Develop a specification document for their chosen project that provides a clear statement of the work that will be carried out during the project. (Project Stream) -or- Develop a short market analysis portfolio for a given technical topic. (DFI Stream) (ii) Identify suitable background material for a literature survey, and develop the literature survey to a high standard. (iii) Present and answer questions on the project specification in front of a panel of academics. (iv) Attend several seminars on research practices, presentation skills, and report writing, as well as industry guest talks. This module also introduces the student to the concept of peer review. The student will be required to share the outputs of many of their tasks with other students in the module, and they are required to critically appraise the work of others. (v) Produce a development plan, including timelines, task identification, and resource requirements, whether that is for the project stream or the DFI stream","question":"What skills will I learn in the introduction to engineering research methods module?","answers":"{ \"text\": [ \"presentation skills\" ], \"answer_start\": [ 381 ] }"},{"id":"217","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Use the research literature and other resources to determine state of the art in the Students chosen technical field.  Select a research topic, develop an in-depth understanding of that topic, and demonstrate its significance to broad areas of Engineering. Critically evaluate and assess existing design approaches to the chosen topic. The student should base this assessment on peer-reviewed literature in the field. Affective (Attitudes and Values) On successful completion of this module, students will be able to: The student will identify how their project outcomes can address societal challenges through Engineering Innovation. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The student will work as an individual within the ECE dept. and/or industry support that draws on existing knowledge and experience to demonstrate how large engineering challenges can be solved. The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. Tasks in the module are developed in two-week activity periods. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders, Thornhill, Lewis (2011) Research Methods, Pearson Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"What will I be able to do in the introduction to engineering research methods module?","answers":"{ \"text\": [ \"Use the research literature and other resources to determine state of the art\" ], \"answer_start\": [ 172 ] }"},{"id":"218","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Use the research literature and other resources to determine state of the art in the Students chosen technical field.  Select a research topic, develop an in-depth understanding of that topic, and demonstrate its significance to broad areas of Engineering. Critically evaluate and assess existing design approaches to the chosen topic. The student should base this assessment on peer-reviewed literature in the field. Affective (Attitudes and Values) On successful completion of this module, students will be able to: The student will identify how their project outcomes can address societal challenges through Engineering Innovation. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The student will work as an individual within the ECE dept. and/or industry support that draws on existing knowledge and experience to demonstrate how large engineering challenges can be solved. The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. Tasks in the module are developed in two-week activity periods. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders, Thornhill, Lewis (2011) Research Methods, Pearson Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"How the introduction to engineering research methods module is delivered?","answers":"{ \"text\": [ \"blended learning approach with online aspects as well as face-to-face interaction\" ], \"answer_start\": [ 1253 ] }"},{"id":"219","title ":"INTRODUCTION_TO_ENGINEERING_RESEARCH_METHODS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: Use the research literature and other resources to determine state of the art in the Students chosen technical field.  Select a research topic, develop an in-depth understanding of that topic, and demonstrate its significance to broad areas of Engineering. Critically evaluate and assess existing design approaches to the chosen topic. The student should base this assessment on peer-reviewed literature in the field. Affective (Attitudes and Values) On successful completion of this module, students will be able to: The student will identify how their project outcomes can address societal challenges through Engineering Innovation. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The student will work as an individual within the ECE dept. and/or industry support that draws on existing knowledge and experience to demonstrate how large engineering challenges can be solved. The module will be delivered using a blended learning approach with online aspects as well as face-to-face interaction. Tasks in the module are developed in two-week activity periods. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders, Thornhill, Lewis (2011) Research Methods, Pearson Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: ciaran.eising@ul.ie","question":"How can I contact the lecturer for the introduction to engineering research methods module?","answers":"{ \"text\": [ \"ciaran.eising@ul.ie\" ], \"answer_start\": [ 1475 ] }"},{"id":"220","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6031 - PROJECT 1 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. This module is M-Graded with module ID4185, but we are unable to reflect this in field 9 of this form. Syllabus: The project is undertaken through two semesters of the course and graded using this module and its companion (PROJECT 2 - COMPUTER ENGUNEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant  engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What is the code for the project 1 computer engineering module?","answers":"{ \"text\": [ \"CE6031\" ], \"answer_start\": [ 21 ] }"},{"id":"221","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6031 - PROJECT 1 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. This module is M-Graded with module ID4185, but we are unable to reflect this in field 9 of this form. Syllabus: The project is undertaken through two semesters of the course and graded using this module and its companion (PROJECT 2 - COMPUTER ENGUNEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant  engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What is the aim of the project 1 computer engineering module?","answers":"{ \"text\": [ \"To undertake a significant project\" ], \"answer_start\": [ 295 ] }"},{"id":"222","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6031 - PROJECT 1 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. This module is M-Graded with module ID4185, but we are unable to reflect this in field 9 of this form. Syllabus: The project is undertaken through two semesters of the course and graded using this module and its companion (PROJECT 2 - COMPUTER ENGUNEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant  engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What will I learn in the project 1 computer engineering module?","answers":"{ \"text\": [ \"appropriate advanced design and implementation\" ], \"answer_start\": [ 1697 ] }"},{"id":"223","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to:  - Use the research literature and other resources to discover the state of the art in a chosen subfield of Computer, Data Communications and Software Engineering; - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic;  - Critically evaluate and assess their work by comparing it to the published literature in the field; - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: -Develop and/or demonstrate self motivation;  - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders M., Lewis P., Thornhill A. (2011) Research Methods, Pearson Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers, Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: kevin.murphy@ul.ie","question":"What will I be able to do in the project 1 computer engineering module?","answers":"{ \"text\": [ \"Use the research literature and other resources to discover the state of the art\" ], \"answer_start\": [ 169 ] }"},{"id":"224","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to:  - Use the research literature and other resources to discover the state of the art in a chosen subfield of Computer, Data Communications and Software Engineering; - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic;  - Critically evaluate and assess their work by comparing it to the published literature in the field; - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: -Develop and/or demonstrate self motivation;  - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders M., Lewis P., Thornhill A. (2011) Research Methods, Pearson Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers, Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: kevin.murphy@ul.ie","question":"When the project 1 computer engineering module is delivered?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 1159 ] }"},{"id":"225","title ":"PROJECT_1_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to:  - Use the research literature and other resources to discover the state of the art in a chosen subfield of Computer, Data Communications and Software Engineering; - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic;  - Critically evaluate and assess their work by comparing it to the published literature in the field; - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: -Develop and/or demonstrate self motivation;  - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Saunders M., Lewis P., Thornhill A. (2011) Research Methods, Pearson Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers, Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: kevin.murphy@ul.ie","question":"How can I contact the lecturer for the project 1 computer engineering module?","answers":"{ \"text\": [ \"kevin.murphy@ul.ie\" ], \"answer_start\": [ 1521 ] }"},{"id":"226","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6032 - PROJECT 2 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. Syllabus: The project is undertaken through two semesters of the course and graded using this module and its companion, PROJECT 1 (COMPUTER ENGINEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What is the code for the project 2 computer engineering module?","answers":"{ \"text\": [ \"CE6032\" ], \"answer_start\": [ 21 ] }"},{"id":"227","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6032 - PROJECT 2 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. Syllabus:\nThe project is undertaken through two semesters of the course and graded using this module and its companion, PROJECT 1 (COMPUTER ENGINEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What is the aim of the project 2 computer engineering module?","answers":"{ \"text\": [ \"To undertake a significant project\" ], \"answer_start\": [ 122 ] }"},{"id":"228","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Module Code - Title: CE6032 - PROJECT 2 (COMPUTER ENGINEERING) Prerequisite Modules: Rationale and Purpose of the Module: To undertake a significant project, which will involve research into a selected topic in the areas of computer engineering, data communications and/or software engineering, along with appropriate advanced design and implementation. Syllabus:\r\nThe project is undertaken through two semesters of the course and graded using this module and its companion, PROJECT 1 (COMPUTER ENGINEERING). Projects are normally undertaken individually by students (although group project work is also allowed). Each project student (or project group) works under the guidance and supervision of an academic staff member who is responsible for the overall direction of the project. The project will be a significant engineering task, involving research, design and implementation related to a selected problem in the areas of computer, communications and/or software engineering.","question":"What will I learn in the project 2 computer engineering module?","answers":"{ \"text\": [ \"appropriate advanced design and implementation\" ], \"answer_start\": [ 306 ] }"},{"id":"229","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of the module students will be able to: - Use the research literature and other resources to discover the state of the art in a chosen field of Computer, Data Communications and Software Engineering;  - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic; - Critically evaluate and assess their work by comparing it to the published literature in the field;  - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Develop and/or demonstrate self-motivation; - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Saunders M., Lewis P., Thornhill A.  (2011) Research Methods , Pearson Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers , Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: kevin.murphy@ul.ie","question":"What will I be able to do in the project 2 computer engineering module?","answers":"{ \"text\": [ \"Use the research literature and other resources to discover the state of the art\" ], \"answer_start\": [ 172 ] }"},{"id":"230","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of the module students will be able to: - Use the research literature and other resources to discover the state of the art in a chosen field of Computer, Data Communications and Software Engineering;  - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic; - Critically evaluate and assess their work by comparing it to the published literature in the field;  - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Develop and/or demonstrate self-motivation; - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Saunders M., Lewis P., Thornhill A.  (2011) Research Methods , Pearson Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers , Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: kevin.murphy@ul.ie","question":"When the project 2 computer engineering module is delivered?","answers":"{ \"text\": [ \"Spring\" ], \"answer_start\": [ 1823 ] }"},{"id":"231","title ":"PROJECT_2_(COMPUTER_ENGINEERING)","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of the module students will be able to: - Use the research literature and other resources to discover the state of the art in a chosen field of Computer, Data Communications and Software Engineering;  - Select a research topic and develop an in-depth understanding of it and its significance to the broad areas of Computer, Software and Communications Systems;  - Formulate, design, implement and test novel approaches to the solution of new problems suggested by the chosen research topic; - Critically evaluate and assess their work by comparing it to the published literature in the field;  - Present their work in a formal manner by writing a research thesis to reflect the progress, outcomes and conclusions of the project. Affective (Attitudes and Values) On successful completion of this module, students will be able to: - Develop and/or demonstrate self-motivation; - Develop and/or demonstrate competencies in time management and project management. Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Self-study and research guided by supervisor/Discussions with supervisor Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Creswell J. W. (2013) Research Design: Qualitative, Quantitative, and Mixed Approaches , Sage Saunders M., Lewis P., Thornhill A.  (2011) Research Methods , Pearson Ackerson L. G.  (2006) Literature Search Strategies for Interdisciplinary Research: A Sourcebook For Scientists and Engineers , Scarecrow Press Other Texts: Programmes MECOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Spring Module Leader: kevin.murphy@ul.ie","question":"How can I contact the lecturer for the project 2 computer engineering module?","answers":"{ \"text\": [ \"kevin.murphy@ul.ie\" ], \"answer_start\": [ 1845 ] }"},{"id":"232","title ":"REAL-TIME_SYSTEMS","context":"Module Code - Title: ED5002 - REAL-TIME SYSTEMS Prerequisite Modules: ED5021 ED5031 Rationale and Purpose of the Module: Study of real-time (software) system design concepts and scheduling techniques. Presentation of methodologies at application level and system level. Interaction of hardware and micro-kernel services on real time applications. Syllabus:\nIntroduction: Definitions and application examples. Scheduling Algorithms: Clock-driven, Earliest Deadline First, Rate Monotonic, Resource allocation  Language Features: Programming language features for real-time support for concurrency, synchronisation, hard-scheduling etc. Study of features for languages such as C++, Ada, Modula-2, Chill etc. Operating System Features: Features to define a real-time operating system. Emphasis is on embedded systems. Design Approaches: Time continuous data flow, event flow and control transformation. Ward and Mellor extensions for structured analysis.  State transition diagram representation. Design approaches eg. DARTS.  Design and Modelling using Petri Nets: Modelling of a concurrent systemÆs states and events using Petri-nets which include temporal properties in the model. Design and Analysis: Introduction to real-time logic, RTL. Application of RTL. Real-time temporal logic. State Machines and Real-time temporal logic.  Real-Time Program Verification: Testing methods, Risk calculation, Static analysis, Simulation as a verification tool.  Formal Techniques: Study of formal techniques for real-time systems.  Case Study","question":"What is the code for the real-time systems module?","answers":"{ \"text\": [ \"ED5002\" ], \"answer_start\": [ 21 ] }"},{"id":"233","title ":"REAL-TIME_SYSTEMS","context":"Module Code - Title: ED5002 - REAL-TIME SYSTEMS Prerequisite Modules: ED5021 ED5031 Rationale and Purpose of the Module: Study of real-time (software) system design concepts and scheduling techniques. Presentation of methodologies at application level and system level. Interaction of hardware and micro-kernel services on real time applications. Syllabus:\nIntroduction: Definitions and application examples. Scheduling Algorithms: Clock-driven, Earliest Deadline First, Rate Monotonic, Resource allocation  Language Features: Programming language features for real-time support for concurrency, synchronisation, hard-scheduling etc. Study of features for languages such as C++, Ada, Modula-2, Chill etc. Operating System Features: Features to define a real-time operating system. Emphasis is on embedded systems. Design Approaches: Time continuous data flow, event flow and control transformation. Ward and Mellor extensions for structured analysis.  State transition diagram representation. Design approaches eg. DARTS.  Design and Modelling using Petri Nets: Modelling of a concurrent systemÆs states and events using Petri-nets which include temporal properties in the model. Design and Analysis: Introduction to real-time logic, RTL. Application of RTL. Real-time temporal logic. State Machines and Real-time temporal logic.  Real-Time Program Verification: Testing methods, Risk calculation, Static analysis, Simulation as a verification tool.  Formal Techniques: Study of formal techniques for real-time systems.  Case Study","question":"What are the prerequisite modules for the real-time systems module?","answers":"{ \"text\": [ \"ED5021 ED5031\" ], \"answer_start\": [ 122 ] }"},{"id":"234","title ":"REAL-TIME_SYSTEMS","context":"Module Code - Title: ED5002 - REAL-TIME SYSTEMS Prerequisite Modules: ED5021 ED5031 Rationale and Purpose of the Module: Study of real-time (software) system design concepts and scheduling techniques. Presentation of methodologies at application level and system level. Interaction of hardware and micro-kernel services on real time applications. Syllabus:\nIntroduction: Definitions and application examples. Scheduling Algorithms: Clock-driven, Earliest Deadline First, Rate Monotonic, Resource allocation  Language Features: Programming language features for real-time support for concurrency, synchronisation, hard-scheduling etc. Study of features for languages such as C++, Ada, Modula-2, Chill etc. Operating System Features: Features to define a real-time operating system. Emphasis is on embedded systems. Design Approaches: Time continuous data flow, event flow and control transformation. Ward and Mellor extensions for structured analysis.  State transition diagram representation. Design approaches eg. DARTS.  Design and Modelling using Petri Nets: Modelling of a concurrent systemÆs states and events using Petri-nets which include temporal properties in the model. Design and Analysis: Introduction to real-time logic, RTL. Application of RTL. Real-time temporal logic. State Machines and Real-time temporal logic.  Real-Time Program Verification: Testing methods, Risk calculation, Static analysis, Simulation as a verification tool.  Formal Techniques: Study of formal techniques for real-time systems.  Case Study","question":"What will I learn in the real-time systems module?","answers":"{ \"text\": [ \"Study of real-time (software) system design concepts and scheduling techniques\" ], \"answer_start\": [ 306 ] }"},{"id":"235","title ":"REAL-TIME_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a specification of a real-time system and a scheduling algorithm the student will be able to determine if system meets all deadlines  2. Given a specification of a real-time system the student will be able to select and justify an appropriate scheduling algorithm 3. Use mathematical techniques to analyse and compare real-time system schedules 4. Given a set of requirements describe the process of formally specifying, developing, testing and proving the correctness of a real-time system 5. Compare the real-time features of four real-time operating systems  6. Define the precise time critical interaction between micro-controller hardware and timed events on embedded systems Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Liu, Jane W. S. (2000) Real-Time Systems, Prentice Hall Other Texts: Burns & Wellings (2001) Real-time Systems and Their Programming Languages, Addison-Wesley\nJim Cooling (2003) Software Engineering for Real-Time Systems, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: kevin.murphy@ul.ie","question":"What will I be able to do in the real-time systems module?","answers":"{ \"text\": [ \"Use mathematical techniques to analyse and compare real-time system schedules\" ], \"answer_start\": [ 169 ] }"},{"id":"236","title ":"REAL-TIME_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a specification of a real-time system and a scheduling algorithm the student will be able to determine if system meets all deadlines  2. Given a specification of a real-time system the student will be able to select and justify an appropriate scheduling algorithm 3. Use mathematical techniques to analyse and compare real-time system schedules 4. Given a set of requirements describe the process of formally specifying, developing, testing and proving the correctness of a real-time system 5. Compare the real-time features of four real-time operating systems  6. Define the precise time critical interaction between micro-controller hardware and timed events on embedded systems Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Liu, Jane W. S. (2000) Real-Time Systems, Prentice Hall Other Texts: Burns & Wellings (2001) Real-time Systems and Their Programming Languages, Addison-Wesley\nJim Cooling (2003) Software Engineering for Real-Time Systems, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: kevin.murphy@ul.ie","question":"What are the books that I need for the real-time systems module?","answers":"{ \"text\": [ \"Liu, Jane W. S. (2000) Real-Time Systems, Prentice Hall \" ], \"answer_start\": [ 1759 ] }"},{"id":"237","title ":"REAL-TIME_SYSTEMS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Given a specification of a real-time system and a scheduling algorithm the student will be able to determine if system meets all deadlines  2. Given a specification of a real-time system the student will be able to select and justify an appropriate scheduling algorithm 3. Use mathematical techniques to analyse and compare real-time system schedules 4. Given a set of requirements describe the process of formally specifying, developing, testing and proving the correctness of a real-time system 5. Compare the real-time features of four real-time operating systems  6. Define the precise time critical interaction between micro-controller hardware and timed events on embedded systems Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs, Tutorials Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Liu, Jane W. S. (2000) Real-Time Systems, Prentice Hall Other Texts: Burns & Wellings (2001) Real-time Systems and Their Programming Languages, Addison-Wesley\nJim Cooling (2003) Software Engineering for Real-Time Systems, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: kevin.murphy@ul.ie","question":"How can I contact the lecturer for the real-time systems module?","answers":"{ \"text\": [ \"kevin.murphy@ul.ie\" ], \"answer_start\": [ 1781 ] }"},{"id":"238","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: ED5005 - PROJECT AND DISSERTATION - ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: The aim of this module is to enable a student to research, develop, analyse and present a dissertation on a relevant AI related problem. The project is a key element of the Master as it allows students to apply their knowledge with additional independent research to tackle a challenge in their chosen domain. The research and development project topic will be selected early in the programme based upon an identified real world challenge within a selected domain Syllabus: The project and dissertation will require that the student:  1. Review the existing literature in the area  2. Choose an appropriate research methodology and implementation framework 3. Discuss why the chosen methodology and framework is suitable for problem chosen. 4. Develop suitable models and implement on a target platform  5. Generate, analyse and discuss the results obtained. 6. Identify and discuss the benefits and limitations of the approach adopted.  7. Make realistic recommendations based on results and findings, including future work.8. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing.","question":"What is the code for the project and dissertation artificial intelligence module?","answers":"{ \"text\": [ \"ED5005\" ], \"answer_start\": [ 21 ] }"},{"id":"239","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: ED5005 - PROJECT AND DISSERTATION - ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: The aim of this module is to enable a student to research, develop, analyse and present a dissertation on a relevant AI related problem. The project is a key element of the Master as it allows students to apply their knowledge with additional independent research to tackle a challenge in their chosen domain. The research and development project topic will be selected early in the programme based upon an identified real world challenge within a selected domain Syllabus: The project and dissertation will require that the student:  1. Review the existing literature in the area  2. Choose an appropriate research methodology and implementation framework 3. Discuss why the chosen methodology and framework is suitable for problem chosen. 4. Develop suitable models and implement on a target platform  5. Generate, analyse and discuss the results obtained. 6. Identify and discuss the benefits and limitations of the approach adopted.  7. Make realistic recommendations based on results and findings, including future work.8. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing.","question":"What is the aim of the project and dissertation artificial intelligence module?","answers":"{ \"text\": [ \"The aim of this module is to enable a student to research, develop, analyse and present a dissertation on a relevant AI related problem\" ], \"answer_start\": [ 70 ] }"},{"id":"240","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Module Code - Title: ED5005 - PROJECT AND DISSERTATION - ARTIFICIAL INTELLIGENCE Prerequisite Modules: Rationale and Purpose of the Module: The aim of this module is to enable a student to research, develop, analyse and present a dissertation on a relevant AI related problem. The project is a key element of the Master as it allows students to apply their knowledge with additional independent research to tackle a challenge in their chosen domain. The research and development project topic will be selected early in the programme based upon an identified real world challenge within a selected domain Syllabus: The project and dissertation will require that the student:  1. Review the existing literature in the area  2. Choose an appropriate research methodology and implementation framework 3. Discuss why the chosen methodology and framework is suitable for problem chosen. 4. Develop suitable models and implement on a target platform  5. Generate, analyse and discuss the results obtained. 6. Identify and discuss the benefits and limitations of the approach adopted.  7. Make realistic recommendations based on results and findings, including future work.8. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing.","question":"What will I learn in the project and dissertation artificial intelligence module?","answers":"{ \"text\": [ \"Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing\" ], \"answer_start\": [ 121 ] }"},{"id":"241","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Present the self-directed research that they have undertaken into complex and emerging areas relevant to the project.  2. Deduce an implementation strategy encompassing the appropriate tools, frameworks and platforms. 3. Critique the value of the research and the implementation strategy adopted. 4. Develop an appropriate model and implement on the targeted platform. 5. Organise the results in a coherent, logical manner using visualisation and structure.  6. Interpret the research results obtained and draw appropriate conclusions.  7. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing. Affective (Attitudes and Values) 1. Recognise results that are of value / not of value to their research project.  2. Defend their research. 3. Question whether the data is representative and attempt to address any biases  4. Identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 5. Defend their research, results and the approaches adopted. 6. Judge and challenge any limitations of the techniques adopted. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: A detailed project guideline will be given to students outlining the supervision, the project management and milestones, the deliverables and expectation. KNOWLEDGEABLE: Students develop knowledge and critical thinking as they put theory into practice through identifying and using the appropriate techniques and tools for their chosen project. PROACTIVE: Students make active use of data sets and frameworks to , and in doing so develop confidence in managing both data and tools, and to make informed decisions based on the scientific method. CREATIVE: Students develop their problem solution and visualisation, which requires them to integrate existing and module acquired knowledge. RESPONSIBLE: Students manage their own project, including submitting their problem statement, method and results for external scrutiny. COLLABORATIVE: Students engage regularly with their supervisory team, and work colleagues. ARTICULATE: Students will communicate technical and non-technical concepts of their project. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts:Other Texts:Programmes Semester(s) Module is Offered: Summer\nModule Leader: pepijn.vandeven@ul.ie","question":"What will I be able to do in the project and dissertation artificial intelligence module?","answers":"{ \"text\": [ \"Present the self-directed research that they have undertaken into complex and emerging areas relevant to the project\" ], \"answer_start\": [ 378 ] }"},{"id":"242","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Present the self-directed research that they have undertaken into complex and emerging areas relevant to the project.  2. Deduce an implementation strategy encompassing the appropriate tools, frameworks and platforms. 3. Critique the value of the research and the implementation strategy adopted. 4. Develop an appropriate model and implement on the targeted platform. 5. Organise the results in a coherent, logical manner using visualisation and structure.  6. Interpret the research results obtained and draw appropriate conclusions.  7. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing. Affective (Attitudes and Values) 1. Recognise results that are of value / not of value to their research project.  2. Defend their research. 3. Question whether the data is representative and attempt to address any biases  4. Identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 5. Defend their research, results and the approaches adopted. 6. Judge and challenge any limitations of the techniques adopted. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: A detailed project guideline will be given to students outlining the supervision, the project management and milestones, the deliverables and expectation. KNOWLEDGEABLE: Students develop knowledge and critical thinking as they put theory into practice through identifying and using the appropriate techniques and tools for their chosen project. PROACTIVE: Students make active use of data sets and frameworks to , and in doing so develop confidence in managing both data and tools, and to make informed decisions based on the scientific method. CREATIVE: Students develop their problem solution and visualisation, which requires them to integrate existing and module acquired knowledge. RESPONSIBLE: Students manage their own project, including submitting their problem statement, method and results for external scrutiny. COLLABORATIVE: Students engage regularly with their supervisory team, and work colleagues. ARTICULATE: Students will communicate technical and non-technical concepts of their project. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts:Other Texts:Programmes Semester(s) Module is Offered: Summer\nModule Leader: pepijn.vandeven@ul.ie","question":"When the project and dissertation artificial intelligence module is offered?","answers":"{ \"text\": [ \"Summer\" ], \"answer_start\": [ 1058 ] }"},{"id":"243","title ":"PROJECT_AND_DISSERTATION - ARTIFICIAL_INTELLIGENCE","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) 1. Present the self-directed research that they have undertaken into complex and emerging areas relevant to the project.  2. Deduce an implementation strategy encompassing the appropriate tools, frameworks and platforms. 3. Critique the value of the research and the implementation strategy adopted. 4. Develop an appropriate model and implement on the targeted platform. 5. Organise the results in a coherent, logical manner using visualisation and structure.  6. Interpret the research results obtained and draw appropriate conclusions.  7. Summarise research and results in a high-quality document consistent with academic standards in terms of format, structure, language and referencing. Affective (Attitudes and Values) 1. Recognise results that are of value / not of value to their research project.  2. Defend their research. 3. Question whether the data is representative and attempt to address any biases  4. Identify and discuss any significant ethical issues such as privacy, confidentiality, ownership, transparency and identity. 5. Defend their research, results and the approaches adopted. 6. Judge and challenge any limitations of the techniques adopted. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: A detailed project guideline will be given to students outlining the supervision, the project management and milestones, the deliverables and expectation. KNOWLEDGEABLE: Students develop knowledge and critical thinking as they put theory into practice through identifying and using the appropriate techniques and tools for their chosen project. PROACTIVE: Students make active use of data sets and frameworks to , and in doing so develop confidence in managing both data and tools, and to make informed decisions based on the scientific method. CREATIVE: Students develop their problem solution and visualisation, which requires them to integrate existing and module acquired knowledge. RESPONSIBLE: Students manage their own project, including submitting their problem statement, method and results for external scrutiny. COLLABORATIVE: Students engage regularly with their supervisory team, and work colleagues. ARTICULATE: Students will communicate technical and non-technical concepts of their project. Research Findings Incorporated in to the Syllabus (If Relevant):Prime Texts:Other Texts:Programmes Semester(s) Module is Offered: Summer\nModule Leader: pepijn.vandeven@ul.ie","question":"How can I contact the lecturer for the project and dissertation artificial intelligence module?","answers":"{ \"text\": [ \"pepijn.vandeven@ul.ie\" ], \"answer_start\": [ 1352 ] }"},{"id":"244","title ":"DIGITAL_ELECTRONICS_1","context":"Module Code - Title: ED5011 - DIGITAL ELECTRONICS 1 Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to give students an introduction to many of the important hardware elements and topics in digital circuits. Syllabus: The difference between digital and analogue signals Binary numbers (unsigned) and how they can represent an analogue signal Number systems and codes, Hexadecimal, ASCII code Simple ADC and DAC concepts Logic Gates: AND, OR and INVERTER gates and their truth tables Representing data in parallel and in serial form, RS232 Buses and addressing: the concept of selecting a device by decoding a number on an address bus Memory devices: basic types (NO internal workings) of semiconductor memory and how they are used LED displays: including single LEDs and 7-segment displays and how to drive them Modem Basics Sequential circuits: D-type flip-flops and registers; Counters and their applications; Shift registers serial to parallel conversion (and vice-versa); Simple state diagrams Mass Storage: Discs, Magnetic storage, sectors, data rates, Optical storage; Flash memory\n\n","question":"What is the code for the digital electronics 1 module?","answers":"{ \"text\": [ \"ED5011\" ], \"answer_start\": [ 21 ] }"},{"id":"245","title ":"DIGITAL_ELECTRONICS_1","context":"Module Code - Title: ED5011 - DIGITAL ELECTRONICS 1 Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to give students an introduction to many of the important hardware elements and topics in digital circuits. Syllabus: The difference between digital and analogue signals Binary numbers (unsigned) and how they can represent an analogue signal Number systems and codes, Hexadecimal, ASCII code Simple ADC and DAC concepts Logic Gates: AND, OR and INVERTER gates and their truth tables Representing data in parallel and in serial form, RS232 Buses and addressing: the concept of selecting a device by decoding a number on an address bus Memory devices: basic types (NO internal workings) of semiconductor memory and how they are used LED displays: including single LEDs and 7-segment displays and how to drive them Modem Basics Sequential circuits: D-type flip-flops and registers; Counters and their applications; Shift registers serial to parallel conversion (and vice-versa); Simple state diagrams Mass Storage: Discs, Magnetic storage, sectors, data rates, Optical storage; Flash memory\n\n","question":"What is the purpose of the digital electronics 1 module?","answers":"{ \"text\": [ \"The aim of the module is to give students an introduction to many of the important hardware elements and topics in digital circuits\" ], \"answer_start\": [ 140 ] }"},{"id":"246","title ":"DIGITAL_ELECTRONICS_1","context":"Module Code - Title: ED5011 - DIGITAL ELECTRONICS 1 Prerequisite Modules: Rationale and Purpose of the Module: The aim of the module is to give students an introduction to many of the important hardware elements and topics in digital circuits. Syllabus: The difference between digital and analogue signals Binary numbers (unsigned) and how they can represent an analogue signal Number systems and codes, Hexadecimal, ASCII code Simple ADC and DAC concepts Logic Gates: AND, OR and INVERTER gates and their truth tables Representing data in parallel and in serial form, RS232 Buses and addressing: the concept of selecting a device by decoding a number on an address bus Memory devices: basic types (NO internal workings) of semiconductor memory and how they are used LED displays: including single LEDs and 7-segment displays and how to drive them Modem Basics Sequential circuits: D-type flip-flops and registers; Counters and their applications; Shift registers serial to parallel conversion (and vice-versa); Simple state diagrams Mass Storage: Discs, Magnetic storage, sectors, data rates, Optical storage; Flash memory\n\n","question":"What will I learn in the digital electronics 1 module?","answers":"{ \"text\": [ \"basic types (NO internal workings) of semiconductor memory and how they are used\" ], \"answer_start\": [ 1168 ] }"},{"id":"247","title ":"DIGITAL_ELECTRONICS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Explain and manipulate the representation of numbers in binary form and other codes e.g. signed forms of binary, hexadecimal Describe basic digital logic components and use and/or interpret their representation in truth tables Move between and make use of the different representations of digital circuits: truth tables, circuit diagrams and logical word descriptions Describe the use of LED displays Explain ways of transmitting and storing data, especially the concepts of computer buses and addressing and multiplexing/de-multiplexing Explain the different requirements for transmitting data using parallel and serial interfaces Use and interpret function tables and truth tables for simple sequential devices including flip-flops and registers Explain the operation of simple sequential circuits, including counters and shift registers Affective (Attitudes and Values) Psychomotor (Physical Skills) Use laboratory equipment such as power supplies, digital components, cables, oscilloscopes Build and test simple digital circuits How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nFloyd, T. L. (2007) Digital Fundamentals, Prentice Hall Other Texts: Green, D. C. (1999) Digital Electronics, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: Jacqueline.Walker@ul.ie","question":"What will I be able to do in the digital electronics 1 module?","answers":"{ \"text\": [ \"Explain and manipulate the representation of numbers in binary form and other codes e.g. signed forms of binary, hexadecimal\" ], \"answer_start\": [ 105 ] }"},{"id":"248","title ":"DIGITAL_ELECTRONICS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Explain and manipulate the representation of numbers in binary form and other codes e.g. signed forms of binary, hexadecimal Describe basic digital logic components and use and/or interpret their representation in truth tables Move between and make use of the different representations of digital circuits: truth tables, circuit diagrams and logical word descriptions Describe the use of LED displays Explain ways of transmitting and storing data, especially the concepts of computer buses and addressing and multiplexing/de-multiplexing Explain the different requirements for transmitting data using parallel and serial interfaces Use and interpret function tables and truth tables for simple sequential devices including flip-flops and registers Explain the operation of simple sequential circuits, including counters and shift registers Affective (Attitudes and Values) Psychomotor (Physical Skills) Use laboratory equipment such as power supplies, digital components, cables, oscilloscopes Build and test simple digital circuits How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nFloyd, T. L. (2007) Digital Fundamentals, Prentice Hall Other Texts: Green, D. C. (1999) Digital Electronics, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: Jacqueline.Walker@ul.ie","question":"What are the books that I need for the digital electronics 1 module?","answers":"{ \"text\": [ \"Floyd, T. L. (2007) Digital Fundamentals, Prentice Hall \" ], \"answer_start\": [ 2533 ] }"},{"id":"249","title ":"DIGITAL_ELECTRONICS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Explain and manipulate the representation of numbers in binary form and other codes e.g. signed forms of binary, hexadecimal Describe basic digital logic components and use and/or interpret their representation in truth tables Move between and make use of the different representations of digital circuits: truth tables, circuit diagrams and logical word descriptions Describe the use of LED displays Explain ways of transmitting and storing data, especially the concepts of computer buses and addressing and multiplexing/de-multiplexing Explain the different requirements for transmitting data using parallel and serial interfaces Use and interpret function tables and truth tables for simple sequential devices including flip-flops and registers Explain the operation of simple sequential circuits, including counters and shift registers Affective (Attitudes and Values) Psychomotor (Physical Skills) Use laboratory equipment such as power supplies, digital components, cables, oscilloscopes Build and test simple digital circuits How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts:\nFloyd, T. L. (2007) Digital Fundamentals, Prentice Hall Other Texts: Green, D. C. (1999) Digital Electronics, Addison-Wesley Programmes Semester(s) Module is Offered: Module Leader: Jacqueline.Walker@ul.ie","question":"How can I contact the lecturer for the digital electronics 1 module?","answers":"{ \"text\": [ \"Jacqueline.Walker@ul.ie\" ], \"answer_start\": [ 2555 ] }"},{"id":"250","title ":"COMPUTER_NETWORKS_2","context":"Module Code - Title: ED5012 - COMPUTER NETWORKS 2 Prerequisite Modules: Rationale and Purpose of the Module: Introduces students to security services and cryptographic protocols used for information and system security, in areas such as wireless networks, e-commerce and the Internet. Provides an understanding of security protocol design techniques and formal methods for evaluation of the reliability of security protocols. Syllabus: [Wireless Standards and Technologies] IEEE 802.11, WEP, Bluetooth, BlackBerry [Review Internet security] IPSec, SSL. [Role of security services in countering network attacks] confidentiality, data origin authentication, entity authentication, data-integrity, non-repudiation, access control, availability.  [Cryptographic components] Review of the cryptographic components required in security protocols such as: ciphers & keys, hashing functions, random number generators, message authentication codes and digital signatures. [Public key infrastructures] X.509, SDSI, TLS. [Protocols] Key management, peer-to-peer distribution protocols, group distribution and identification protocols. Modern cryptographic protocols for: wireless communications (mobile, radio-link, secure mobile ad-hoc networks), e-commerce (e-payment, non-repudiation), Certified e-mail, E-voting. [Smart cards and protocols] for ATMs, passport identification and digital cash. [Security protocol design] Study of protocol design techniques\n[Use of formal methods] for evaluation of correctness of security of protocols.","question":"What is the code for the computer networks 2 module?","answers":"{ \"text\": [ \"ED5012\" ], \"answer_start\": [ 21 ] }"},{"id":"251","title ":"COMPUTER_NETWORKS_2","context":"Module Code - Title: ED5012 - COMPUTER NETWORKS 2 Prerequisite Modules: Rationale and Purpose of the Module: Introduces students to security services and cryptographic protocols used for information and system security, in areas such as wireless networks, e-commerce and the Internet. Provides an understanding of security protocol design techniques and formal methods for evaluation of the reliability of security protocols. Syllabus: [Wireless Standards and Technologies] IEEE 802.11, WEP, Bluetooth, BlackBerry [Review Internet security] IPSec, SSL. [Role of security services in countering network attacks] confidentiality, data origin authentication, entity authentication, data-integrity, non-repudiation, access control, availability.  [Cryptographic components] Review of the cryptographic components required in security protocols such as: ciphers & keys, hashing functions, random number generators, message authentication codes and digital signatures. [Public key infrastructures] X.509, SDSI, TLS. [Protocols] Key management, peer-to-peer distribution protocols, group distribution and identification protocols. Modern cryptographic protocols for: wireless communications (mobile, radio-link, secure mobile ad-hoc networks), e-commerce (e-payment, non-repudiation), Certified e-mail, E-voting. [Smart cards and protocols] for ATMs, passport identification and digital cash. [Security protocol design] Study of protocol design techniques\n[Use of formal methods] for evaluation of correctness of security of protocols.","question":"What is the aim of the computer networks 2 module?","answers":"{ \"text\": [ \"Introduces students to security services and cryptographic protocols used for information and system security, in areas such as wireless networks, e-commerce and the Internet\" ], \"answer_start\": [ 111 ] }"},{"id":"252","title ":"COMPUTER_NETWORKS_2","context":"Module Code - Title: ED5012 - COMPUTER NETWORKS 2 Prerequisite Modules: Rationale and Purpose of the Module: Introduces students to security services and cryptographic protocols used for information and system security, in areas such as wireless networks, e-commerce and the Internet. Provides an understanding of security protocol design techniques and formal methods for evaluation of the reliability of security protocols. Syllabus: [Wireless Standards and Technologies] IEEE 802.11, WEP, Bluetooth, BlackBerry [Review Internet security] IPSec, SSL. [Role of security services in countering network attacks] confidentiality, data origin authentication, entity authentication, data-integrity, non-repudiation, access control, availability.  [Cryptographic components] Review of the cryptographic components required in security protocols such as: ciphers & keys, hashing functions, random number generators, message authentication codes and digital signatures. [Public key infrastructures] X.509, SDSI, TLS. [Protocols] Key management, peer-to-peer distribution protocols, group distribution and identification protocols. Modern cryptographic protocols for: wireless communications (mobile, radio-link, secure mobile ad-hoc networks), e-commerce (e-payment, non-repudiation), Certified e-mail, E-voting. [Smart cards and protocols] for ATMs, passport identification and digital cash. [Security protocol design] Study of protocol design techniques\n[Use of formal methods] for evaluation of correctness of security of protocols.","question":"What will I learn in the computer networks 2 module?","answers":"{ \"text\": [ \"confidentiality, data origin authentication, entity authentication, data-integrity, non-repudiation, access control, availability.\" ], \"answer_start\": [ 686 ] }"},{"id":"253","title ":"COMPUTER_NETWORKS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Understand the operation of protocols in communication systems and security services Explain the use of security services in countering network attacks Identify suitable security protocols for services such as key distribution, authentication and non-repudiation Able to design custom security protocols to satisfy given security goals Apply formal methods to evaluate the correctness of security protocols Explain the differences between formal analysis tools based on modal logics and model checking Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: W. Stallings & L.Brown (2018) Computer Security, Principles and Practice, 4th Ed., Prentice Hall W. Stallings & L.Brown (2014) Cryptography and Network Security, Principles and Practice, 6th Ed, Prentice Hall C. Boyd & A. Mathuria (2003) Protocols for Authentication and Key Establishment, Springer Other Texts: R. Temple & J. Regnault (2002) Internet and Wireless Security, Institution of Electrical Engineers M. Hendru (2001) Smart Card Security and Applications, Artech House A. Danthine, G. Leduc, P. Wolper (1993) IFIP Transactions Protocol Specificaition, Testing, Verification, North-Holland C. Gehrmann, J. Persson & B. Smeets (2004) Bluetooth Security, Artech House Programmes Semester(s) Module is Offered: Module Leader: amrita.ghosal@ul.ie","question":"What will I be able to do in the computer networks 2 module?","answers":"{ \"text\": [ \"Apply formal methods to evaluate the correctness of security protocols\" ], \"answer_start\": [ 102 ] }"},{"id":"254","title ":"COMPUTER_NETWORKS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Understand the operation of protocols in communication systems and security services Explain the use of security services in countering network attacks Identify suitable security protocols for services such as key distribution, authentication and non-repudiation Able to design custom security protocols to satisfy given security goals Apply formal methods to evaluate the correctness of security protocols Explain the differences between formal analysis tools based on modal logics and model checking Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: W. Stallings & L.Brown (2018) Computer Security, Principles and Practice, 4th Ed., Prentice Hall W. Stallings & L.Brown (2014) Cryptography and Network Security, Principles and Practice, 6th Ed, Prentice Hall C. Boyd & A. Mathuria (2003) Protocols for Authentication and Key Establishment, Springer Other Texts: R. Temple & J. Regnault (2002) Internet and Wireless Security, Institution of Electrical Engineers M. Hendru (2001) Smart Card Security and Applications, Artech House A. Danthine, G. Leduc, P. Wolper (1993) IFIP Transactions Protocol Specificaition, Testing, Verification, North-Holland C. Gehrmann, J. Persson & B. Smeets (2004) Bluetooth Security, Artech House Programmes Semester(s) Module is Offered: Module Leader: amrita.ghosal@ul.ie","question":"What are the books that I need for the computer networks 2 module?","answers":"{ \"text\": [ \"W. Stallings & L.Brown (2018) Computer Security, Principles and Practice, 4th Ed., Prentice Hall W. Stallings & L.Brown (2014) Cryptography and Network Security, Principles and Practice, 6th Ed, Prentice Hall\" ], \"answer_start\": [ 1316 ] }"},{"id":"255","title ":"COMPUTER_NETWORKS_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Understand the operation of protocols in communication systems and security services Explain the use of security services in countering network attacks Identify suitable security protocols for services such as key distribution, authentication and non-repudiation Able to design custom security protocols to satisfy given security goals Apply formal methods to evaluate the correctness of security protocols Explain the differences between formal analysis tools based on modal logics and model checking Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: W. Stallings & L.Brown (2018) Computer Security, Principles and Practice, 4th Ed., Prentice Hall W. Stallings & L.Brown (2014) Cryptography and Network Security, Principles and Practice, 6th Ed, Prentice Hall C. Boyd & A. Mathuria (2003) Protocols for Authentication and Key Establishment, Springer Other Texts: R. Temple & J. Regnault (2002) Internet and Wireless Security, Institution of Electrical Engineers M. Hendru (2001) Smart Card Security and Applications, Artech House A. Danthine, G. Leduc, P. Wolper (1993) IFIP Transactions Protocol Specificaition, Testing, Verification, North-Holland C. Gehrmann, J. Persson & B. Smeets (2004) Bluetooth Security, Artech House Programmes Semester(s) Module is Offered: Module Leader: amrita.ghosal@ul.ie","question":"How can I contact the lecturer for the computer networks 2 module?","answers":"{ \"text\": [ \"amrita.ghosal@ul.ie\" ], \"answer_start\": [ 1498 ] }"},{"id":"256","title ":"SOFTWARE_ENGINEERING","context":"Module Code - Title: ED5031 - SOFTWARE ENGINEERING Prerequisite Modules: Rationale and Purpose of the Module: To understand and apply the object-oriented approach to software development. To emphasise Good Software Engineering Practices. To enhance individual and team working skills via individual investigative project and presentation, individual exercises and a team project. Syllabus: Object Oriented Analysis/Design: Object Oriented Paradigms (one in detail e.g. OMT/UML) focusing on architecture and behavioural design and representation. Use Cases. Design Patterns. Software Reuse. Overview of Object Oriented Programming Languages (e.g. Java/Smalltalk). Individual Project/Case Study. Team Project in the area of Software Design for Advanced Communication Systems (e.g. Call Handling and Mobility Management Systems for the 3rd generation mobile system, UMTS).","question":"What is the code for the software engineering module?","answers":"{ \"text\": [ \"ED5031\" ], \"answer_start\": [ 21 ] }"},{"id":"257","title ":"SOFTWARE_ENGINEERING","context":"Module Code - Title: ED5031 - SOFTWARE ENGINEERING Prerequisite Modules: Rationale and Purpose of the Module: To understand and apply the object-oriented approach to software development. To emphasise Good Software Engineering Practices. To enhance individual and team working skills via individual investigative project and presentation, individual exercises and a team project. Syllabus: Object Oriented Analysis/Design: Object Oriented Paradigms (one in detail e.g. OMT/UML) focusing on architecture and behavioural design and representation. Use Cases. Design Patterns. Software Reuse. Overview of Object Oriented Programming Languages (e.g. Java/Smalltalk). Individual Project/Case Study. Team Project in the area of Software Design for Advanced Communication Systems (e.g. Call Handling and Mobility Management Systems for the 3rd generation mobile system, UMTS).","question":"What is the aim of the software engineering module?","answers":"{ \"text\": [ \"To understand and apply the object-oriented approach to software development\" ], \"answer_start\": [ 109 ] }"},{"id":"258","title ":"SOFTWARE_ENGINEERING","context":"Module Code - Title: ED5031 - SOFTWARE ENGINEERING Prerequisite Modules: Rationale and Purpose of the Module: To understand and apply the object-oriented approach to software development. To emphasise Good Software Engineering Practices. To enhance individual and team working skills via individual investigative project and presentation, individual exercises and a team project. Syllabus: Object Oriented Analysis/Design: Object Oriented Paradigms (one in detail e.g. OMT/UML) focusing on architecture and behavioural design and representation. Use Cases. Design Patterns. Software Reuse. Overview of Object Oriented Programming Languages (e.g. Java/Smalltalk). Individual Project/Case Study. Team Project in the area of Software Design for Advanced Communication Systems (e.g. Call Handling and Mobility Management Systems for the 3rd generation mobile system, UMTS).","question":"What will I learn in the software engineering module?","answers":"{ \"text\": [ \"Overview of Object Oriented Programming Languages (e.g. Java/Smalltalk)\" ], \"answer_start\": [ 611 ] }"},{"id":"259","title ":"SOFTWARE_ENGINEERING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Apply basic software engineering concepts and techniques to the software development process.  Use UML diagrams for the specification, visualization, construction and documentation of software. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Project Work Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ian Sommerville (2016) Software Engineering, 10th Edition, Addison-Wesley Pressman (2015) Software Engineering: A Practitioner's Approach, 8th Edition, Addison-Wesley Booch, Rumbaugh & Jacobson (1998) UML User Guide, Addison-Wesley Other Texts: Booch, G. () Object-Oriented Design, Benjamin-Cummings Jacobson, I. () Object-Oriented Software Engineering: A Use-Case Approach, Addison-Wesley Buschmann, F. et al. () Pattern_oriented Software Architecture, Wiley Gamma et al. () Design Patterns: Elements of Reusable Object-Oriented Software Architecture, Wiley Programmes GDCOENTFA - COMPUTER ENGINEERING BSMCSEUFA - Mobile Communications and Security HDMSCCTFA - Mobile and Secure Cloud Computing Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"What will I be able to do in the software engineering module?","answers":"{ \"text\": [ \"Apply basic software engineering concepts and techniques to the software development process\" ], \"answer_start\": [ 438 ] }"},{"id":"260","title ":"SOFTWARE_ENGINEERING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Apply basic software engineering concepts and techniques to the software development process.  Use UML diagrams for the specification, visualization, construction and documentation of software. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Project Work Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ian Sommerville (2016) Software Engineering, 10th Edition, Addison-Wesley Pressman (2015) Software Engineering: A Practitioner's Approach, 8th Edition, Addison-Wesley Booch, Rumbaugh & Jacobson (1998) UML User Guide, Addison-Wesley Other Texts: Booch, G. () Object-Oriented Design, Benjamin-Cummings Jacobson, I. () Object-Oriented Software Engineering: A Use-Case Approach, Addison-Wesley Buschmann, F. et al. () Pattern_oriented Software Architecture, Wiley Gamma et al. () Design Patterns: Elements of Reusable Object-Oriented Software Architecture, Wiley Programmes GDCOENTFA - COMPUTER ENGINEERING BSMCSEUFA - Mobile Communications and Security HDMSCCTFA - Mobile and Secure Cloud Computing Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"What are the books for the software engineering module?","answers":"{ \"text\": [ \"Ian Sommerville (2016) Software Engineering, 10th Edition, Addison-Wesley Pressman (2015) Software Engineering: A Practitioner's Approach, 8th Edition, Addison-Wesley Booch, Rumbaugh & Jacobson (1998) UML User Guide, Addison-Wesley\" ], \"answer_start\": [ 858 ] }"},{"id":"261","title ":"SOFTWARE_ENGINEERING","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Apply basic software engineering concepts and techniques to the software development process.  Use UML diagrams for the specification, visualization, construction and documentation of software. Describe the stages of the software development cycle in terms of inputs, outputs, resources and design documents. Employ a structured approach to the design and construction of a small but complete software system. Prepare software engineering technical reports to professional standards. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Tutorials/Project Work Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Ian Sommerville (2016) Software Engineering, 10th Edition, Addison-Wesley Pressman (2015) Software Engineering: A Practitioner's Approach, 8th Edition, Addison-Wesley Booch, Rumbaugh & Jacobson (1998) UML User Guide, Addison-Wesley Other Texts: Booch, G. () Object-Oriented Design, Benjamin-Cummings Jacobson, I. () Object-Oriented Software Engineering: A Use-Case Approach, Addison-Wesley Buschmann, F. et al. () Pattern_oriented Software Architecture, Wiley Gamma et al. () Design Patterns: Elements of Reusable Object-Oriented Software Architecture, Wiley Programmes GDCOENTFA - COMPUTER ENGINEERING BSMCSEUFA - Mobile Communications and Security HDMSCCTFA - Mobile and Secure Cloud Computing Semester(s) Module is Offered:\nAutumn Module Leader: kevin.murphy@ul.ie","question":"How can I contact the lecturer for the software engineering module?","answers":"{ \"text\": [ \"kevin.murphy@ul.ie\" ], \"answer_start\": [ 1590 ] }"},{"id":"262","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: ED5041 - COMPUTER NETWORKS 1 Prerequisite Modules: Rationale and Purpose of the Module: To provide students with a unified view of the field of multimedia communications and networking infrastructures and an understanding of how data is represented and reliably transmitted over different media. To provide students with an understanding of the structure of the Internet and world-wide web. To outline the major topics associated with multimedia communications (inter alia/ applications, networks, protocols  and standards). To equip students to quantify the communications requirements of various multimedia applications, and the computational overhead of their underlying network protocols. Syllabus: Introduction to data communications and multimedia. Information representation. Standards for multi-media communications. Digital communication basics: data transmission, media, encoding, multiplexing, interfacing, and data-link controls. Local and wide-area networks. Routing and Internetworking. Internet  and Internetworking protocols. Transport-level protocols. Client-server model. Application layer. ISDN and B-ISDN. The world-wide web.","question":"What is the code for the computer networks 1 module?","answers":"{ \"text\": [ \"ED5041\" ], \"answer_start\": [ 21 ] }"},{"id":"263","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: ED5041 - COMPUTER NETWORKS 1 Prerequisite Modules: Rationale and Purpose of the Module: To provide students with a unified view of the field of multimedia communications and networking infrastructures and an understanding of how data is represented and reliably transmitted over different media. To provide students with an understanding of the structure of the Internet and world-wide web. To outline the major topics associated with multimedia communications (inter alia/ applications, networks, protocols  and standards). To equip students to quantify the communications requirements of various multimedia applications, and the computational overhead of their underlying network protocols. Syllabus: Introduction to data communications and multimedia. Information representation. Standards for multi-media communications. Digital communication basics: data transmission, media, encoding, multiplexing, interfacing, and data-link controls. Local and wide-area networks. Routing and Internetworking. Internet  and Internetworking protocols. Transport-level protocols. Client-server model. Application layer. ISDN and B-ISDN. The world-wide web.","question":"What is the aim of the computer networks 1 module?","answers":"{ \"text\": [ \"To provide students with a unified view of the field of multimedia communications and networking infrastructures and an understanding of how data is represented and reliably transmitted over different media\" ], \"answer_start\": [ 110 ] }"},{"id":"264","title ":"COMPUTER_NETWORKS_1","context":"Module Code - Title: ED5041 - COMPUTER NETWORKS 1 Prerequisite Modules: Rationale and Purpose of the Module: To provide students with a unified view of the field of multimedia communications and networking infrastructures and an understanding of how data is represented and reliably transmitted over different media. To provide students with an understanding of the structure of the Internet and world-wide web. To outline the major topics associated with multimedia communications (inter alia/ applications, networks, protocols  and standards). To equip students to quantify the communications requirements of various multimedia applications, and the computational overhead of their underlying network protocols. Syllabus: Introduction to data communications and multimedia. Information representation. Standards for multi-media communications. Digital communication basics: data transmission, media, encoding, multiplexing, interfacing, and data-link controls. Local and wide-area networks. Routing and Internetworking. Internet  and Internetworking protocols. Transport-level protocols. Client-server model. Application layer. ISDN and B-ISDN. The world-wide web.","question":"What will I learn in the computer networks 1 module?","answers":"{ \"text\": [ \"Digital communication basics: data transmission, media, encoding, multiplexing, interfacing, and data-link controls\" ], \"answer_start\": [ 590 ] }"},{"id":"265","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, analyse and access different elements of communications protocols used in computer networks. Name, describe and examine the functions of different networking devices. Configure and deploy layer 2 & 3 networking devices, i.e., switches & routers. Find correct solutions for internetworking / interoperability, including subnetting & supernetting, verification of addresses and traffic filtering. Identify problems that a routing algorithm may encounter, describe techniques to reduce such problems, and construct correct routing tables. Define, categorise and discuss different techniques for error control, flow control and congestion control. Examine and test different types of computer net work elements in order to detect, locate and repair faults.  Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Halsall, F. (2004) Multimedia Communications, Pearson Tanenbaum, A.S. (2003) Computer Networks, Prentice Hall Stallings, W. (2007) Data and Computer Communication, Prentice Hall Other Texts: Comer, D. (2003) Computer Networks and Internet, Prentice Hall Forouzan, B. (2002) TCP/IP Protocol Suite, McGraw-Hill Kurose, J. & K. Ross (2000) Computer Networking: A top-down approach featuring the Internet, Addison-Wesley Halsall, F. (2005) Computer Networking & the Internet, 5th ed., Pearson Programmes Semester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"What will I be able to do in the computer networks 1 module?","answers":"{ \"text\": [ \"Identify, analyse and access different elements of communications protocols used in computer networks. Name, describe and examine the functions of different networking devices\" ], \"answer_start\": [ 102 ] }"},{"id":"266","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, analyse and access different elements of communications protocols used in computer networks. Name, describe and examine the functions of different networking devices. Configure and deploy layer 2 & 3 networking devices, i.e., switches & routers. Find correct solutions for internetworking / interoperability, including subnetting & supernetting, verification of addresses and traffic filtering. Identify problems that a routing algorithm may encounter, describe techniques to reduce such problems, and construct correct routing tables. Define, categorise and discuss different techniques for error control, flow control and congestion control. Examine and test different types of computer net work elements in order to detect, locate and repair faults.  Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Halsall, F. (2004) Multimedia Communications, Pearson Tanenbaum, A.S. (2003) Computer Networks, Prentice Hall Stallings, W. (2007) Data and Computer Communication, Prentice Hall Other Texts: Comer, D. (2003) Computer Networks and Internet, Prentice Hall Forouzan, B. (2002) TCP/IP Protocol Suite, McGraw-Hill Kurose, J. & K. Ross (2000) Computer Networking: A top-down approach featuring the Internet, Addison-Wesley Halsall, F. (2005) Computer Networking & the Internet, 5th ed., Pearson Programmes Semester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"What are the books that I need for the computer networks 1 module?","answers":"{ \"text\": [ \"Halsall, F. (2004) Multimedia Communications, Pearson Tanenbaum, A.S. (2003) Computer Networks, Prentice Hall Stallings, W. (2007) Data and Computer Communication, Prentice Hall\" ], \"answer_start\": [ 856 ] }"},{"id":"267","title ":"COMPUTER_NETWORKS_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, analyse and access different elements of communications protocols used in computer networks. Name, describe and examine the functions of different networking devices. Configure and deploy layer 2 & 3 networking devices, i.e., switches & routers. Find correct solutions for internetworking / interoperability, including subnetting & supernetting, verification of addresses and traffic filtering. Identify problems that a routing algorithm may encounter, describe techniques to reduce such problems, and construct correct routing tables. Define, categorise and discuss different techniques for error control, flow control and congestion control. Examine and test different types of computer net work elements in order to detect, locate and repair faults.  Affective (Attitudes and Values) None Psychomotor (Physical Skills) None How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures/Labs Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Halsall, F. (2004) Multimedia Communications, Pearson Tanenbaum, A.S. (2003) Computer Networks, Prentice Hall Stallings, W. (2007) Data and Computer Communication, Prentice Hall Other Texts: Comer, D. (2003) Computer Networks and Internet, Prentice Hall Forouzan, B. (2002) TCP/IP Protocol Suite, McGraw-Hill Kurose, J. & K. Ross (2000) Computer Networking: A top-down approach featuring the Internet, Addison-Wesley Halsall, F. (2005) Computer Networking & the Internet, 5th ed., Pearson Programmes Semester(s) Module is Offered: Module Leader: eoin.oconnell@ul.ie","question":"How can I contact the lecturer for the computer networks 1 module?","answers":"{ \"text\": [ \"eoin.oconnell@ul.ie\" ], \"answer_start\": [ 1605 ] }"},{"id":"268","title ":"MOBILE_APP_DEVELOPMENT","context":"Module Code - Title: ED5042 - MOBILE APP DEVELOPMENT Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to the fundamentals of Mobile APP Development using a modern APP Development Platform. This will facilitate the development of APPs for SmartPhones. Additionally the module aims to enhance individual and team working skills through project work. Syllabus: Fundamentals of a Mobile App development platform. Features of the App SDKs. Components of the development platform: Activities, Services, Content providers and Broadcast receivers. Development Tools available and their configuration. Writing Apps using the development tools.","question":"What is the code for the mobile app development module?","answers":"{ \"text\": [ \"ED5042\" ], \"answer_start\": [ 21 ] }"},{"id":"269","title ":"MOBILE_APP_DEVELOPMENT","context":"Module Code - Title: ED5042 - MOBILE APP DEVELOPMENT Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to the fundamentals of Mobile APP Development using a modern APP Development Platform. This will facilitate the development of APPs for SmartPhones. Additionally the module aims to enhance individual and team working skills through project work. Syllabus: Fundamentals of a Mobile App development platform. Features of the App SDKs. Components of the development platform: Activities, Services, Content providers and Broadcast receivers. Development Tools available and their configuration. Writing Apps using the development tools.","question":"What is the aim of the mobile app development module?","answers":"{ \"text\": [ \"To introduce the student to the fundamentals of Mobile APP Development using a modern APP Development Platform\" ], \"answer_start\": [ 109 ] }"},{"id":"270","title ":"MOBILE_APP_DEVELOPMENT","context":"Module Code - Title: ED5042 - MOBILE APP DEVELOPMENT Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to the fundamentals of Mobile APP Development using a modern APP Development Platform. This will facilitate the development of APPs for SmartPhones. Additionally the module aims to enhance individual and team working skills through project work. Syllabus: Fundamentals of a Mobile App development platform. Features of the App SDKs. Components of the development platform: Activities, Services, Content providers and Broadcast receivers. Development Tools available and their configuration. Writing Apps using the development tools.","question":"What will I learn in the mobile app development module?","answers":"{ \"text\": [ \"Fundamentals of a Mobile App development platform. Features of the App SDKs\" ], \"answer_start\": [ 846 ] }"},{"id":"271","title ":"MOBILE_APP_DEVELOPMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, describe and understand the components of a mobile app development platform. To acquaint the student with the fundamentals and intricacies of programming mobile apps. To become familiar with the installation and use of the necessary development tools. Design and develop structured program solutions for smartphones as an individual and as a team member. Affective (Attitudes and Values) On successful completion of this module, students should be able to develop software as an individual and as a team member for use with current smartphone platforms. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wei-Meng Lee (2011) Beginning Android Application Development, . Wrox (Wiley). ISBN:978-1-118-01711-1 Reto Meier (2009) Professional Android Application Development, Wiley Publishing. ISBN: 978-0-470-34471-2 Other Texts: Mark L. Murphy (2008) The Busy Coders Guide to Android Development, CommonsWare, LLC. ISBN: 978-0-9816780-0-9 Programmes Semester(s) Module is Offered: Module Leader:\npepijn.vandeven@ul.ie","question":"What will I be able to do in the mobile app development module?","answers":"{ \"text\": [ \"Design and develop structured program solutions for smartphones as an individual and as a team member\" ], \"answer_start\": [ 102 ] }"},{"id":"272","title ":"MOBILE_APP_DEVELOPMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, describe and understand the components of a mobile app development platform. To acquaint the student with the fundamentals and intricacies of programming mobile apps. To become familiar with the installation and use of the necessary development tools. Design and develop structured program solutions for smartphones as an individual and as a team member. Affective (Attitudes and Values) On successful completion of this module, students should be able to develop software as an individual and as a team member for use with current smartphone platforms. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wei-Meng Lee (2011) Beginning Android Application Development, . Wrox (Wiley). ISBN:978-1-118-01711-1 Reto Meier (2009) Professional Android Application Development, Wiley Publishing. ISBN: 978-0-470-34471-2 Other Texts: Mark L. Murphy (2008) The Busy Coders Guide to Android Development, CommonsWare, LLC. ISBN: 978-0-9816780-0-9 Programmes Semester(s) Module is Offered: Module Leader:\npepijn.vandeven@ul.ie","question":"What are the books that I need for the mobile app development module?","answers":"{ \"text\": [ \"Wei-Meng Lee (2011) Beginning Android Application Development, . Wrox (Wiley). ISBN:978-1-118-01711-1 Reto Meier (2009) Professional Android Application Development, Wiley Publishing. ISBN: 978-0-470-34471-2\" ], \"answer_start\": [ 1120 ] }"},{"id":"273","title ":"MOBILE_APP_DEVELOPMENT","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Identify, describe and understand the components of a mobile app development platform. To acquaint the student with the fundamentals and intricacies of programming mobile apps. To become familiar with the installation and use of the necessary development tools. Design and develop structured program solutions for smartphones as an individual and as a team member. Affective (Attitudes and Values) On successful completion of this module, students should be able to develop software as an individual and as a team member for use with current smartphone platforms. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Wei-Meng Lee (2011) Beginning Android Application Development, . Wrox (Wiley). ISBN:978-1-118-01711-1 Reto Meier (2009) Professional Android Application Development, Wiley Publishing. ISBN: 978-0-470-34471-2 Other Texts: Mark L. Murphy (2008) The Busy Coders Guide to Android Development, CommonsWare, LLC. ISBN: 978-0-9816780-0-9 Programmes Semester(s) Module is Offered: Module Leader:\npepijn.vandeven@ul.ie","question":"How can I contact the lecturer for the mobile app development module?","answers":"{ \"text\": [ \"pepijn.vandeven@ul.ie\" ], \"answer_start\": [ 1666 ] }"},{"id":"274","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Module Code - Title: ED5051 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 1 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: There is a requirement in industry that a middleware software developer is expected to perform the definition, implementation and testing of message flows in an IBM Integration Bus development environment. IBM Integration Bus, provides a variety of options for implementing a universal integration foundation based on an enterprise service bus (ESB). Implementations help to enable connectivity and transformation in heterogeneous IT environments for businesses of any size, in any industry and covering a range of platforms including cloud and z/OS. This module will provide the student skills to the profession standard of  IBM Integrations Bus Developer Levels 1 and 2. Syllabus: How to use IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. The use of various messaging topologies to transport messages between service requesters and service providers. Explore message flow problem determination, with an emphasis on identifying and recovering from errors in message flows. How to construct message flows that use extended Structured Query Language (ESQL), Java, and the IBM Graphical Data Mapping editor to transform messages. Explores how to control the flow of messages by using various message processing nodes, and how to use databases and maps to transform and enrich messages during processing. Review various messaging transports at a high level and gain a basic understanding of how message flows can use web services, Java Message Service (JMS), and other transport mechanisms. Labs to cover topics such as creating and testing message flows, message modelling, problem determination, and error handling.","question":"What is the code for the middleware integration software development 1 module?","answers":"{ \"text\": [ \"ED5051\" ], \"answer_start\": [ 21 ] }"},{"id":"275","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Module Code - Title: ED5051 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 1 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: There is a requirement in industry that a middleware software developer is expected to perform the definition, implementation and testing of message flows in an IBM Integration Bus development environment. IBM Integration Bus, provides a variety of options for implementing a universal integration foundation based on an enterprise service bus (ESB). Implementations help to enable connectivity and transformation in heterogeneous IT environments for businesses of any size, in any industry and covering a range of platforms including cloud and z/OS. This module will provide the student skills to the profession standard of  IBM Integrations Bus Developer Levels 1 and 2. Syllabus: How to use IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. The use of various messaging topologies to transport messages between service requesters and service providers. Explore message flow problem determination, with an emphasis on identifying and recovering from errors in message flows. How to construct message flows that use extended Structured Query Language (ESQL), Java, and the IBM Graphical Data Mapping editor to transform messages. Explores how to control the flow of messages by using various message processing nodes, and how to use databases and maps to transform and enrich messages during processing. Review various messaging transports at a high level and gain a basic understanding of how message flows can use web services, Java Message Service (JMS), and other transport mechanisms. Labs to cover topics such as creating and testing message flows, message modelling, problem determination, and error handling.","question":"What is the aim of the middleware integration software development 1 module?","answers":"{ \"text\": [ \"This module will provide the student skills to the profession standard of  IBM Integrations Bus Developer Levels 1 and 2\" ], \"answer_start\": [ 112 ] }"},{"id":"276","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Module Code - Title: ED5051 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 1 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: There is a requirement in industry that a middleware software developer is expected to perform the definition, implementation and testing of message flows in an IBM Integration Bus development environment. IBM Integration Bus, provides a variety of options for implementing a universal integration foundation based on an enterprise service bus (ESB). Implementations help to enable connectivity and transformation in heterogeneous IT environments for businesses of any size, in any industry and covering a range of platforms including cloud and z/OS. This module will provide the student skills to the profession standard of  IBM Integrations Bus Developer Levels 1 and 2. Syllabus: How to use IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. The use of various messaging topologies to transport messages between service requesters and service providers. Explore message flow problem determination, with an emphasis on identifying and recovering from errors in message flows. How to construct message flows that use extended Structured Query Language (ESQL), Java, and the IBM Graphical Data Mapping editor to transform messages. Explores how to control the flow of messages by using various message processing nodes, and how to use databases and maps to transform and enrich messages during processing. Review various messaging transports at a high level and gain a basic understanding of how message flows can use web services, Java Message Service (JMS), and other transport mechanisms. Labs to cover topics such as creating and testing message flows, message modelling, problem determination, and error handling.","question":"What will I learn in the middleware integration software development 1 module?","answers":"{ \"text\": [ \"How to use IBM Integration Bus to develop, deploy, and support platform-independent message flow applications\" ], \"answer_start\": [ 393 ] }"},{"id":"277","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module a student will be able to: 1. Describe how an entire organization can make smarter business decisions by providing rapid access, visibility and control over data as it flows through business applications and systems. 2. Connect throughout an array of heterogeneous applications and web services, removing the need for complex point-to-point connectivity. 3. Deliver a standardized, simplified and flexible integration foundation to help more quickly and easily support business needs and scale with business growth. 4. Create ESQL statements as well as using the Message Repository for defining and testing data layouts. 5. Apply IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. 6. Review various messaging transports at a high level and demonstrate how message flows can use web services, Java Message Service (JMS), and other transport mechanisms Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a two week workshop session, by IBM approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the IBM Examinations at a later stage should they wish to gain the professional certifications of the IBM Integrations Bus Developer Levels 1 and 2. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"What will I be able to do in the middleware integration software development 1 module?","answers":"{ \"text\": [ \"Create ESQL statements as well as using the Message Repository for defining and testing data layouts\" ], \"answer_start\": [ 364 ] }"},{"id":"278","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module a student will be able to: 1. Describe how an entire organization can make smarter business decisions by providing rapid access, visibility and control over data as it flows through business applications and systems. 2. Connect throughout an array of heterogeneous applications and web services, removing the need for complex point-to-point connectivity. 3. Deliver a standardized, simplified and flexible integration foundation to help more quickly and easily support business needs and scale with business growth. 4. Create ESQL statements as well as using the Message Repository for defining and testing data layouts. 5. Apply IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. 6. Review various messaging transports at a high level and demonstrate how message flows can use web services, Java Message Service (JMS), and other transport mechanisms Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a two week workshop session, by IBM approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the IBM Examinations at a later stage should they wish to gain the professional certifications of the IBM Integrations Bus Developer Levels 1 and 2. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"When the middleware integration software development 1 module is offered?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 867 ] }"},{"id":"279","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_1","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module a student will be able to: 1. Describe how an entire organization can make smarter business decisions by providing rapid access, visibility and control over data as it flows through business applications and systems. 2. Connect throughout an array of heterogeneous applications and web services, removing the need for complex point-to-point connectivity. 3. Deliver a standardized, simplified and flexible integration foundation to help more quickly and easily support business needs and scale with business growth. 4. Create ESQL statements as well as using the Message Repository for defining and testing data layouts. 5. Apply IBM Integration Bus to develop, deploy, and support platform-independent message flow applications. 6. Review various messaging transports at a high level and demonstrate how message flows can use web services, Java Message Service (JMS), and other transport mechanisms Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in a two week workshop session, by IBM approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the IBM Examinations at a later stage should they wish to gain the professional certifications of the IBM Integrations Bus Developer Levels 1 and 2. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the middleware integration software development 1 module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1255 ] }"},{"id":"280","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Module Code - Title: ED5061 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: This module is based on the Oracle professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). It is important that business systems can communicate effectively with each other.  For business integration, Java Composite Application Platform Suite (Java CAPS) provides an  integrated software suite to develop, deploy, and manage a service-oriented architecture (SOA) and composite applications to rapidly deliver new business capabilities and drive business growth. This module will provide students with these software development skills. Syllabus: Overview of Java CAPS 6, Installation of Java CAPS 6, Repository-based Development, Repository Deployment,Repository Deployment Management, Log File Management, User Management Repository, Introduction to JBI, Business Processes in Java CAPS 6, Adapters and Encoders in Java CAPS 6, The Sun JMS IQ Manager, User-Defined OTDs, Building a BPEL Module Project, Error Handling in BPEL, Correlation in BPEL, The Intelligent Event Processor, Management and Monitoring Tools, Managing Patches, Application Configuration.","question":"What is the code for the middleware integration software development 2 module?","answers":"{ \"text\": [ \"ED5061\" ], \"answer_start\": [ 21 ] }"},{"id":"281","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Module Code - Title: ED5061 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: This module is based on the Oracle professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). It is important that business systems can communicate effectively with each other.  For business integration, Java Composite Application Platform Suite (Java CAPS) provides an  integrated software suite to develop, deploy, and manage a service-oriented architecture (SOA) and composite applications to rapidly deliver new business capabilities and drive business growth. This module will provide students with these software development skills. Syllabus: Overview of Java CAPS 6, Installation of Java CAPS 6, Repository-based Development, Repository Deployment,Repository Deployment Management, Log File Management, User Management Repository, Introduction to JBI, Business Processes in Java CAPS 6, Adapters and Encoders in Java CAPS 6, The Sun JMS IQ Manager, User-Defined OTDs, Building a BPEL Module Project, Error Handling in BPEL, Correlation in BPEL, The Intelligent Event Processor, Management and Monitoring Tools, Managing Patches, Application Configuration.","question":"What is the middleware integration software development 2 module about?","answers":"{ \"text\": [ \"This module is based on the Oracle professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550)\" ], \"answer_start\": [ 703 ] }"},{"id":"282","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Module Code - Title: ED5061 - MIDDLEWARE INTEGRATION SOFTWARE DEVELOPMENT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: This module is based on the Oracle professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). It is important that business systems can communicate effectively with each other.  For business integration, Java Composite Application Platform Suite (Java CAPS) provides an  integrated software suite to develop, deploy, and manage a service-oriented architecture (SOA) and composite applications to rapidly deliver new business capabilities and drive business growth. This module will provide students with these software development skills. Syllabus: Overview of Java CAPS 6, Installation of Java CAPS 6, Repository-based Development, Repository Deployment,Repository Deployment Management, Log File Management, User Management Repository, Introduction to JBI, Business Processes in Java CAPS 6, Adapters and Encoders in Java CAPS 6, The Sun JMS IQ Manager, User-Defined OTDs, Building a BPEL Module Project, Error Handling in BPEL, Correlation in BPEL, The Intelligent Event Processor, Management and Monitoring Tools, Managing Patches, Application Configuration.","question":"What will I learn in the middleware integration software development 2 module?","answers":"{ \"text\": [ \"Overview of Java CAPS 6, Installation of Java CAPS 6, Repository-based Development, Repository Deployment,Repository Deployment Management, Log File Management\" ], \"answer_start\": [ 835 ] }"},{"id":"283","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module students will be able to: 1. Describe the role of Java CAPS 6 in the deployment of Services Orientated Architecture for strategic business flexibility. 2. Demonstrate the use Java CAPS 6 to deploy projects to GlassFish Application Server and use a variety of tools to monitor and manage deployed projects. 3. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 4. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 5. Describe how Java CAPS 6 supports the Open ESB technology through validation engines, business rules, enterprise information integration, improved standards, common tooling and event stream processing. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in two week workshop session, by Oracle approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the Oracle Examinations at a later stage should they wish to gain the professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"What will I be able to do in the middleware integration software development 2 module?","answers":"{ \"text\": [ \"Describe the role of Java CAPS 6 in the deployment of Services Orientated Architecture for strategic business flexibility\" ], \"answer_start\": [ 652 ] }"},{"id":"284","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module students will be able to: 1. Describe the role of Java CAPS 6 in the deployment of Services Orientated Architecture for strategic business flexibility. 2. Demonstrate the use Java CAPS 6 to deploy projects to GlassFish Application Server and use a variety of tools to monitor and manage deployed projects. 3. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 4. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 5. Describe how Java CAPS 6 supports the Open ESB technology through validation engines, business rules, enterprise information integration, improved standards, common tooling and event stream processing. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in two week workshop session, by Oracle approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the Oracle Examinations at a later stage should they wish to gain the professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"When the middleware integration software development 2 module is offered?","answers":"{ \"text\": [ \"Autumn\" ], \"answer_start\": [ 1656 ] }"},{"id":"285","title ":"MIDDLEWARE_INTEGRATION_SOFTWARE_DEVELOPMENT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon completion of this module students will be able to: 1. Describe the role of Java CAPS 6 in the deployment of Services Orientated Architecture for strategic business flexibility. 2. Demonstrate the use Java CAPS 6 to deploy projects to GlassFish Application Server and use a variety of tools to monitor and manage deployed projects. 3. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 4. Explain the structure and operation of a software system designed to support interoperable machine to machine interactions over a network. 5. Describe how Java CAPS 6 supports the Open ESB technology through validation engines, business rules, enterprise information integration, improved standards, common tooling and event stream processing. Affective (Attitudes and Values) N/A Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered in two week workshop session, by Oracle approved trainers, and assessed on a Pass/Fail basis by the host departments. Students will be able to undertake the Oracle Examinations at a later stage should they wish to gain the professional certifications of Java(TM) CAPS 6 for Implementers and Sun Java CAPS 6.X Administration (CAPS-0550). Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Other Texts: Programmes Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the middleware integration software development 2 module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1678 ] }"},{"id":"286","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Module Code - Title: ED5062 - INDUSTRY LEARNING PROJECT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner.  An 8 week industrial learning placement will form the core element of this model. Participants unable to secure an 8 week placement will be facilitated through participation in a UL Practicum project or an individual project or series of activities deemed appropriate by the course board. Assessment will be based on a report or portfolio of experience from the activities of the 8 week placement. Syllabus: Each student is required to obtain a suitable project during the industrial learning placement period. Under the supervision of a member of staff and guided by the industrial supervisor, the student will progress along a logical path to resolve the specified problem. The student will integrate the content of their industrial skills stream into a portfolio to record their progress through the project.","question":"What is the code for the industry learning project 2 module?","answers":"{ \"text\": [ \"ED5062\" ], \"answer_start\": [ 21 ] }"},{"id":"287","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Module Code - Title: ED5062 - INDUSTRY LEARNING PROJECT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner.  An 8 week industrial learning placement will form the core element of this model. Participants unable to secure an 8 week placement will be facilitated through participation in a UL Practicum project or an individual project or series of activities deemed appropriate by the course board. Assessment will be based on a report or portfolio of experience from the activities of the 8 week placement. Syllabus: Each student is required to obtain a suitable project during the industrial learning placement period. Under the supervision of a member of staff and guided by the industrial supervisor, the student will progress along a logical path to resolve the specified problem. The student will integrate the content of their industrial skills stream into a portfolio to record their progress through the project.","question":"What is the aim of the industry learning project 2 module?","answers":"{ \"text\": [ \"To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects\" ], \"answer_start\": [ 152 ] }"},{"id":"288","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Module Code - Title: ED5062 - INDUSTRY LEARNING PROJECT 2 Grading Type: PF Prerequisite Modules: Rationale and Purpose of the Module: To enable the student to combine previously learned course material with their individual talents in order to solve real-life industry projects. To develop in the students the ability to organise and direct their own work and to present this work in written and verbal format in a proper manner.  An 8 week industrial learning placement will form the core element of this model. Participants unable to secure an 8 week placement will be facilitated through participation in a UL Practicum project or an individual project or series of activities deemed appropriate by the course board. Assessment will be based on a report or portfolio of experience from the activities of the 8 week placement. Syllabus: Each student is required to obtain a suitable project during the industrial learning placement period. Under the supervision of a member of staff and guided by the industrial supervisor, the student will progress along a logical path to resolve the specified problem. The student will integrate the content of their industrial skills stream into a portfolio to record their progress through the project.","question":"What will I learn in the industry learning project 2 module?","answers":"{ \"text\": [ \"An 8 week industrial learning placement will form the core element of this model\" ], \"answer_start\": [ 756 ] }"},{"id":"289","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon Completion of the Module Students will be able to: 1. Demonstrate the ability to develop solutions to moderately complex problems.  2. Select and use the appropriate mix of resources for the project at hand, Report the work done on the project, including references to previous work, and recommendations for future work  3. Demonstrate the working of the project to a panel of assessors and discuss its strengths and limitations. Affective (Attitudes and Values) Upon Completion of the Module Students will be able to: 1. Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages. 2. Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. 3. Adhere to the norms and expectations of the employing organisation.  4. Relate to colleagues at all levels. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using blended learning methods with assignment work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: McMillan K. & Weyers J. (2011) How to write Dissertations and Project Reports, Pearson Publishing Sternberg, R.J. and Zhang, L.F. (Eds) (2000) Perspectives on Cognitive Learning and Thinking Styles, Hallsdale NJ: Lawrence Erlbaum Associates Drew, S. and Bing, R. (2010) The Guide to Learning and Study Skills, Gower Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: Reiner.Dojen@ul.ie","question":"What will I be able to do in the industry learning project 2 module?","answers":"{ \"text\": [ \"Demonstrate the ability to develop solutions to moderately complex problems\" ], \"answer_start\": [ 162 ] }"},{"id":"290","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon Completion of the Module Students will be able to: 1. Demonstrate the ability to develop solutions to moderately complex problems.  2. Select and use the appropriate mix of resources for the project at hand, Report the work done on the project, including references to previous work, and recommendations for future work  3. Demonstrate the working of the project to a panel of assessors and discuss its strengths and limitations. Affective (Attitudes and Values) Upon Completion of the Module Students will be able to: 1. Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages. 2. Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. 3. Adhere to the norms and expectations of the employing organisation.  4. Relate to colleagues at all levels. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using blended learning methods with assignment work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: McMillan K. & Weyers J. (2011) How to write Dissertations and Project Reports, Pearson Publishing Sternberg, R.J. and Zhang, L.F. (Eds) (2000) Perspectives on Cognitive Learning and Thinking Styles, Hallsdale NJ: Lawrence Erlbaum Associates Drew, S. and Bing, R. (2010) The Guide to Learning and Study Skills, Gower Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: Reiner.Dojen@ul.ie","question":"What are the books that I need for the industry learning project 2 module?","answers":"{ \"text\": [ \"McMillan K. & Weyers J. (2011) How to write Dissertations and Project Reports, Pearson Publishing Sternberg, R.J. and Zhang, L.F. (Eds) (2000) Perspectives on Cognitive Learning and Thinking Styles, Hallsdale NJ: Lawrence Erlbaum Associates Drew, S. and Bing, R. (2010) The Guide to Learning and Study Skills, Gower\" ], \"answer_start\": [ 1587 ] }"},{"id":"291","title ":"INDUSTRY_LEARNING_PROJECT_2","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) Upon Completion of the Module Students will be able to: 1. Demonstrate the ability to develop solutions to moderately complex problems.  2. Select and use the appropriate mix of resources for the project at hand, Report the work done on the project, including references to previous work, and recommendations for future work  3. Demonstrate the working of the project to a panel of assessors and discuss its strengths and limitations. Affective (Attitudes and Values) Upon Completion of the Module Students will be able to: 1. Develop and present a project plan, modularise the project into work packages, and identify the resources required to complete work packages. 2. Work as an individual and within a team, with support from a supervisor, drawing on knowledge and experience to solve problems. 3. Adhere to the norms and expectations of the employing organisation.  4. Relate to colleagues at all levels. Psychomotor (Physical Skills) N/A How the Module will be Taught and what will be the Learning Experiences of the Students: The module will be delivered using blended learning methods with assignment work. Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: McMillan K. & Weyers J. (2011) How to write Dissertations and Project Reports, Pearson Publishing Sternberg, R.J. and Zhang, L.F. (Eds) (2000) Perspectives on Cognitive Learning and Thinking Styles, Hallsdale NJ: Lawrence Erlbaum Associates Drew, S. and Bing, R. (2010) The Guide to Learning and Study Skills, Gower Other Texts: Programmes Semester(s) Module is Offered: Spring Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the industry learning project 2 module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1609 ] }"},{"id":"292","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Module Code - Title: ED5071 - COMPUTER ENGINEERING FUNDAMENTALS Grading Type: N Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to fundamental algorithms and dynamic data structures in modern computer engineering (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application within a team environment. Syllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Team Project","question":"What is the code for the computer engineering fundamentals module?","answers":"{ \"text\": [ \"ED5071\" ], \"answer_start\": [ 21 ] }"},{"id":"293","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Module Code - Title: ED5071 - COMPUTER ENGINEERING FUNDAMENTALS Grading Type: N Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to fundamental algorithms and dynamic data structures in modern computer engineering (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application within a team environment. Syllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Team Project","question":"What is the aim of the computer engineering fundamentals module?","answers":"{ \"text\": [ \"To introduce the student to fundamental algorithms and dynamic data structures in modern computer engineering (e.g. queue, trees, and dynamic arrays)\" ], \"answer_start\": [ 134 ] }"},{"id":"294","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Module Code - Title: ED5071 - COMPUTER ENGINEERING FUNDAMENTALS Grading Type: N Prerequisite Modules: Rationale and Purpose of the Module: To introduce the student to fundamental algorithms and dynamic data structures in modern computer engineering (e.g. queue, trees, and dynamic arrays). Introduce software engineering practices, Flow diagrams and class diagrams. Use good software practice to develop a significant application within a team environment. Syllabus: The following will be covered: * Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees. * Greedy Algorithms * Hash functions and search minimisation techniques * Class/Object unit testing * Analysis of algorithms * Case study/Team Project","question":"What will I learn in the computer engineering fundamentals module?","answers":"{ \"text\": [ \"* Algorithms * Growth of functions * Data structures - Linked lists, Stacks, Queues and Red-Black Trees\" ], \"answer_start\": [ 431 ] }"},{"id":"295","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Deitel, P., Deitel, H., Pearson (2018)  C How to Program, MIT Press Eggert, S.M. Ross.  (2018) A.E. Fischer, D.W.  Applied C: An Introduction and More , McGraw-Hill Other Texts: Programmes GDCOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"What will I be able to do in the computer engineering fundamentals module?","answers":"{ \"text\": [ \"Select an appropriate algorithm for a given application and understand the impact of the growth of functions\" ], \"answer_start\": [ 161 ] }"},{"id":"296","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Deitel, P., Deitel, H., Pearson (2018)  C How to Program, MIT Press Eggert, S.M. Ross.  (2018) A.E. Fischer, D.W.  Applied C: An Introduction and More , McGraw-Hill Other Texts: Programmes GDCOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"What are the books that I need for the computer engineering fundamentals module?","answers":"{ \"text\": [ \"Deitel, P., Deitel, H., Pearson (2018)  C How to Program, MIT Press Eggert, S.M. Ross.  (2018) A.E. Fischer, D.W.  Applied C: An Introduction and More , McGraw-Hill\" ], \"answer_start\": [ 1296 ] }"},{"id":"297","title ":"COMPUTER_ENGINEERING_FUNDAMENTALS","context":"Learning Outcomes: Cognitive (Knowledge, Understanding, Application, Analysis, Evaluation, Synthesis) On successful completion of this module, students will be able to: 1. Select an appropriate algorithm for a given application and understand the impact of the growth of functions. 2. Develop sophisticated algorithms to manage large amounts of data 3. Demonstrate the use of hash functions and search minimisation techniques 4. Use sophisticated software development environments to manage large projects 5. Demonstrate an understanding of the limitations of algorithms and NP-completeness 6. Develop a application that compares two algorithms application. Affective (Attitudes and Values) On successful completion of this module, students will be able to: Psychomotor (Physical Skills) On successful completion of this module, students will be able to: How the Module will be Taught and what will be the Learning Experiences of the Students: Lectures, Labs and software development projects Research Findings Incorporated in to the Syllabus (If Relevant): Prime Texts: Deitel, P., Deitel, H., Pearson (2018)  C How to Program, MIT Press Eggert, S.M. Ross.  (2018) A.E. Fischer, D.W.  Applied C: An Introduction and More , McGraw-Hill Other Texts: Programmes GDCOENTFA - COMPUTER ENGINEERING Semester(s) Module is Offered: Autumn Module Leader: Reiner.Dojen@ul.ie","question":"How can I contact the lecturer for the computer engineering fundamentals module?","answers":"{ \"text\": [ \"Reiner.Dojen@ul.ie\" ], \"answer_start\": [ 1689 ] }"}]
